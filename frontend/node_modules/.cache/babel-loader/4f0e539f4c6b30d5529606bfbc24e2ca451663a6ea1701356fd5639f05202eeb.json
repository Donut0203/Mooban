{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"profile-container\"\n};\nconst _hoisted_2 = {\n  class: \"profile-card\"\n};\nconst _hoisted_3 = {\n  class: \"profile-header\"\n};\nconst _hoisted_4 = {\n  class: \"profile-photo\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"photo-container\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"photo-placeholder\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"pending-approval-banner\"\n};\nconst _hoisted_9 = {\n  class: \"profile-form\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"error-text\"\n};\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"error-text\"\n};\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = {\n  class: \"form-group\"\n};\nconst _hoisted_18 = [\"value\"];\nconst _hoisted_19 = {\n  class: \"form-group\"\n};\nconst _hoisted_20 = [\"value\"];\nconst _hoisted_21 = {\n  class: \"form-group\"\n};\nconst _hoisted_22 = [\"value\"];\nconst _hoisted_23 = {\n  class: \"form-actions\"\n};\nconst _hoisted_24 = [\"disabled\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[18] || (_cache[18] = _createElementVNode(\"h1\", null, \"โปรไฟล์ของฉัน\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_ctx.profilePictureUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: _ctx.profilePictureUrl,\n    alt: \"Profile Photo\",\n    onError: _cache[0] || (_cache[0] = (...args) => _ctx.handleImageError && _ctx.handleImageError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_6)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString(_ctx.userInitial), 1 /* TEXT */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"photoInput\",\n    style: {\n      \"display\": \"none\"\n    },\n    accept: \"image/*\",\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.handleFileSelected && _ctx.handleFileSelected(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.triggerPhotoUpload && _ctx.triggerPhotoUpload(...args)),\n    class: \"upload-btn\"\n  }, \"อัปโหลดรูปภาพ\")])]), _createCommentVNode(\" แสดงการรออนุมัติ (Pending Approvals) \"), _ctx.userProfile.status === 'pending' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _cache[9] || (_cache[9] = [_createElementVNode(\"div\", {\n    class: \"pending-icon\"\n  }, \"⏳\", -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"pending-message\"\n  }, [_createElementVNode(\"h3\", null, \"ผู้ใช้ที่รอการอนุมัติ\"), _createElementVNode(\"p\", null, \"บัญชีของคุณกำลังรอการตรวจสอบและอนุมัติจากผู้ดูแลระบบ\")], -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"firstName\"\n  }, \"ชื่อ\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.userProfile.firstName = $event),\n    class: _normalizeClass({\n      'error': _ctx.errors.firstName\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, _ctx.userProfile.firstName]]), _ctx.errors.firstName ? (_openBlock(), _createElementBlock(\"span\", _hoisted_11, _toDisplayString(_ctx.errors.firstName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_12, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"lastName\"\n  }, \"นามสกุล\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"lastName\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.userProfile.lastName = $event),\n    class: _normalizeClass({\n      'error': _ctx.errors.lastName\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, _ctx.userProfile.lastName]]), _ctx.errors.lastName ? (_openBlock(), _createElementBlock(\"span\", _hoisted_13, _toDisplayString(_ctx.errors.lastName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_14, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"อีเมล\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.userProfile.email = $event),\n    disabled: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.userProfile.email]])]), _createElementVNode(\"div\", _hoisted_15, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"phone\"\n  }, \"เบอร์โทรศัพท์\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    id: \"phone\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => _ctx.userProfile.phone = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.userProfile.phone]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"address\"\n  }, \"ที่อยู่\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"address\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => _ctx.userProfile.address = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.userProfile.address]])]), _createElementVNode(\"div\", _hoisted_17, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", {\n    for: \"status\"\n  }, \"สถานะ\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"status\",\n    value: _ctx.formatStatus(_ctx.userProfile.status),\n    disabled: \"\"\n  }, null, 8 /* PROPS */, _hoisted_18)]), _createElementVNode(\"div\", _hoisted_19, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", {\n    for: \"approvedBy\"\n  }, \"อนุมัติโดย\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"approvedBy\",\n    value: _ctx.userProfile.approvedBy || 'ไม่มีข้อมูล',\n    disabled: \"\"\n  }, null, 8 /* PROPS */, _hoisted_20)]), _createElementVNode(\"div\", _hoisted_21, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", {\n    for: \"updatedAt\"\n  }, \"อัปเดตล่าสุดเมื่อ\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"updatedAt\",\n    value: _ctx.formatDate(_ctx.userProfile.updatedAt),\n    disabled: \"\"\n  }, null, 8 /* PROPS */, _hoisted_22)]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.saveProfile && _ctx.saveProfile(...args)),\n    class: \"save-btn\",\n    disabled: _ctx.isLoading\n  }, _toDisplayString(_ctx.isLoading ? 'กำลังบันทึก...' : 'บันทึก'), 9 /* TEXT, PROPS */, _hoisted_24)])])]), _ctx.alert.show ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"alert\", 'alert-' + _ctx.alert.type])\n  }, _toDisplayString(_ctx.alert.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_ctx","profilePictureUrl","_hoisted_5","src","alt","onError","_cache","args","handleImageError","_hoisted_6","_hoisted_7","_toDisplayString","userInitial","type","ref","style","accept","onChange","handleFileSelected","onClick","triggerPhotoUpload","_createCommentVNode","userProfile","status","_hoisted_8","_hoisted_9","_hoisted_10","for","id","$event","firstName","_normalizeClass","errors","_hoisted_11","_hoisted_12","lastName","_hoisted_13","_hoisted_14","email","disabled","_hoisted_15","phone","_hoisted_16","address","_hoisted_17","value","formatStatus","_hoisted_18","_hoisted_19","approvedBy","_hoisted_20","_hoisted_21","formatDate","updatedAt","_hoisted_22","_hoisted_23","saveProfile","isLoading","_hoisted_24","alert","show","message"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\ProfileViewSimple.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <h1>โปรไฟล์ของฉัน</h1>\r\n    \r\n    <div class=\"profile-card\">\r\n      <div class=\"profile-header\">\r\n        <div class=\"profile-photo\">\r\n          <div v-if=\"profilePictureUrl\" class=\"photo-container\">\r\n    <img :src=\"profilePictureUrl\" alt=\"Profile Photo\" @error=\"handleImageError\">\r\n  </div>\r\n          <div v-else class=\"photo-placeholder\">\r\n            {{ userInitial }}\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            ref=\"photoInput\"\r\n            style=\"display: none;\"\r\n            accept=\"image/*\"\r\n            @change=\"handleFileSelected\"\r\n          >\r\n          <button @click=\"triggerPhotoUpload\" class=\"upload-btn\">อัปโหลดรูปภาพ</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- แสดงการรออนุมัติ (Pending Approvals) -->\r\n      <div v-if=\"userProfile.status === 'pending'\" class=\"pending-approval-banner\">\r\n        <div class=\"pending-icon\">⏳</div>\r\n        <div class=\"pending-message\">\r\n          <h3>ผู้ใช้ที่รอการอนุมัติ</h3>\r\n          <p>บัญชีของคุณกำลังรอการตรวจสอบและอนุมัติจากผู้ดูแลระบบ</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"profile-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">ชื่อ</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"firstName\" \r\n            v-model=\"userProfile.firstName\" \r\n            :class=\"{ 'error': errors.firstName }\"\r\n          >\r\n          <span v-if=\"errors.firstName\" class=\"error-text\">{{ errors.firstName }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">นามสกุล</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"lastName\" \r\n            v-model=\"userProfile.lastName\" \r\n            :class=\"{ 'error': errors.lastName }\"\r\n          >\r\n          <span v-if=\"errors.lastName\" class=\"error-text\">{{ errors.lastName }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"email\">อีเมล</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            v-model=\"userProfile.email\" \r\n            disabled\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"phone\">เบอร์โทรศัพท์</label>\r\n          <input \r\n            type=\"tel\" \r\n            id=\"phone\" \r\n            v-model=\"userProfile.phone\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"address\">ที่อยู่</label>\r\n          <textarea \r\n            id=\"address\" \r\n            v-model=\"userProfile.address\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"status\">สถานะ</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"status\"\r\n            :value=\"formatStatus(userProfile.status)\"\r\n            disabled\r\n          >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"approvedBy\">อนุมัติโดย</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"approvedBy\"\r\n            :value=\"userProfile.approvedBy || 'ไม่มีข้อมูล'\"\r\n            disabled\r\n          >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"updatedAt\">อัปเดตล่าสุดเมื่อ</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"updatedAt\"\r\n            :value=\"formatDate(userProfile.updatedAt)\"\r\n            disabled\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-actions\">\r\n          <button \r\n            @click=\"saveProfile\" \r\n            class=\"save-btn\" \r\n            :disabled=\"isLoading\"\r\n          >\r\n            {{ isLoading ? 'กำลังบันทึก...' : 'บันทึก' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"alert.show\" class=\"alert\" :class=\"'alert-' + alert.type\">\r\n      {{ alert.message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProfileViewSimple',\r\n  data() {\r\n    return {\r\n      userProfile: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        address: '',\r\n        status: '',\r\n        approvedBy: '',\r\n        updatedAt: null\r\n      },\r\n      profilePictureUrl: null,\r\n      isLoading: false,\r\n      errors: {\r\n        firstName: '',\r\n        lastName: ''\r\n      },\r\n      alert: {\r\n        show: false,\r\n        message: '',\r\n        type: 'success'\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    userInitial() {\r\n      return this.userProfile.email ? this.userProfile.email.charAt(0).toUpperCase() : '?';\r\n    }\r\n  },\r\n  methods: {\r\n  async fetchUserProfile() {\r\n    try {\r\n      this.isLoading = true;\r\n      console.log('Fetching user profile...');\r\n\r\n      // ดึง userId จาก localStorage\r\n      const userId = localStorage.getItem('userId');\r\n\r\n      // ตรวจสอบรูปภาพจาก localStorage ก่อน (เพราะเชื่อถือได้มากที่สุด)\r\n      const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\r\n      if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n        console.log(`Using stored profile picture for user ID: ${userId}`);\r\n        this.profilePictureUrl = storedPictureUrl;\r\n      }\r\n      // ถ้าไม่มีใน localStorage ให้ตรวจสอบใน sessionStorage\r\n      else if (sessionStorage.getItem(`lastProfilePicture_${userId}`)) {\r\n        console.log(`Using last profile picture from sessionStorage for user ID: ${userId}`);\r\n        const lastPicture = sessionStorage.getItem(`lastProfilePicture_${userId}`);\r\n        this.profilePictureUrl = lastPicture;\r\n        // บันทึกกลับไปที่ localStorage เพื่อใช้ในอนาคต\r\n        localStorage.setItem(`profilePictureUrl_${userId}`, lastPicture);\r\n      }\r\n      // ถ้าไม่มีทั้งใน localStorage และ sessionStorage ให้ตรวจสอบ URL ของเซิร์ฟเวอร์\r\n      else {\r\n        const serverPictureUrl = localStorage.getItem(`serverProfilePictureUrl_${userId}`);\r\n        if (serverPictureUrl) {\r\n          const timestamp = new Date().getTime();\r\n          this.profilePictureUrl = `${serverPictureUrl}?t=${timestamp}`;\r\n        }\r\n      }\r\n\r\n      // ดึงข้อมูลโปรไฟล์จาก API\r\n      const response = await api.getUserProfile();\r\n      console.log('User profile response:', response.data);\r\n\r\n      const userData = response.data.user;\r\n      if (!userData) {\r\n        console.error('No user data found in response:', response.data);\r\n        this.showAlert('ไม่พบข้อมูลผู้ใช้ กรุณาเข้าสู่ระบบใหม่อีกครั้ง', 'error');\r\n        return;\r\n      }\r\n\r\n      // แสดงข้อมูลทั้งหมดที่ได้รับจาก API เพื่อตรวจสอบ\r\n      console.log('All user data fields:', userData);\r\n\r\n      // ดึงข้อมูลจาก localStorage ถ้าไม่มีข้อมูลจาก API\r\n      this.userProfile = {\r\n        firstName: userData.first_name || localStorage.getItem('userFirstName') || '',\r\n        lastName: userData.last_name || localStorage.getItem('userLastName') || '',\r\n        email: userData.user_email || localStorage.getItem('email') || '',\r\n        phone: userData.phone || localStorage.getItem('userPhone') || '',\r\n        address: userData.address || localStorage.getItem('userAddress') || '',\r\n        status: userData.status || localStorage.getItem('userStatus') || '',\r\n        approvedBy: userData.approved_by || userData.approvedBy || localStorage.getItem('userApprovedBy') || '',\r\n        updatedAt: userData.updated_at || userData.updatedAt || localStorage.getItem('userUpdatedAt') || null\r\n      };\r\n\r\n      // บันทึกข้อมูลลง localStorage เพื่อใช้ในกรณีที่ API ไม่ทำงาน\r\n      localStorage.setItem('userFirstName', this.userProfile.firstName);\r\n      localStorage.setItem('userLastName', this.userProfile.lastName);\r\n      localStorage.setItem('userPhone', this.userProfile.phone);\r\n      localStorage.setItem('userAddress', this.userProfile.address);\r\n      localStorage.setItem('userId', userData.user_id || userId);\r\n      localStorage.setItem('userApprovedBy', this.userProfile.approvedBy || '');\r\n      localStorage.setItem('userUpdatedAt', this.userProfile.updatedAt || '');\r\n\r\n      // ถ้ายังไม่มีรูปภาพและ API มีรูปภาพ\r\n      if (!this.profilePictureUrl && userData.profile_picture) {\r\n        // For external URLs (like randomuser.me), use directly\r\n        if (userData.profile_picture.startsWith('http')) {\r\n          this.profilePictureUrl = userData.profile_picture;\r\n        } else {\r\n          // For server URLs, add timestamp and use relative path\r\n          const timestamp = new Date().getTime();\r\n          // ใช้ URL แบบสัมพัทธ์เพื่อให้ทำงานได้กับ proxy ของ Vue\r\n          const serverUrl = `${userData.profile_picture}?t=${timestamp}`;\r\n          this.profilePictureUrl = serverUrl;\r\n\r\n          // บันทึก URL ของเซิร์ฟเวอร์ลงใน localStorage\r\n          localStorage.setItem(`serverProfilePictureUrl_${userId}`, userData.profile_picture);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user profile:', error);\r\n\r\n      // แม้ว่า API จะล้มเหลว ให้พยายามใช้รูปภาพที่เก็บไว้\r\n      const userId = localStorage.getItem('userId');\r\n\r\n      // ตรวจสอบ localStorage ก่อน\r\n      const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\r\n      if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n        console.log(`Using profile picture from localStorage after API error for user ID: ${userId}`);\r\n        this.profilePictureUrl = storedPictureUrl;\r\n      }\r\n      // จากนั้นตรวจสอบ sessionStorage\r\n      else if (sessionStorage.getItem(`lastProfilePicture_${userId}`)) {\r\n        console.log(`Using last profile picture from sessionStorage after API error for user ID: ${userId}`);\r\n        const lastPicture = sessionStorage.getItem(`lastProfilePicture_${userId}`);\r\n        this.profilePictureUrl = lastPicture;\r\n        localStorage.setItem(`profilePictureUrl_${userId}`, lastPicture);\r\n      }\r\n      // ถ้าไม่มีรูปภาพใน localStorage หรือ sessionStorage ให้ใช้รูปภาพจาก serverProfilePictureUrl\r\n      else {\r\n        const serverPictureUrl = localStorage.getItem(`serverProfilePictureUrl_${userId}`);\r\n        if (serverPictureUrl) {\r\n          const timestamp = new Date().getTime();\r\n          this.profilePictureUrl = `${serverPictureUrl}?t=${timestamp}`;\r\n        }\r\n      }\r\n\r\n      this.showAlert('ไม่สามารถโหลดข้อมูลโปรไฟล์ได้ กรุณาลองใหม่อีกครั้ง', 'error');\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  },\r\n\r\n  handleImageError(event) {\r\n    event.target.src = \"/assets/profile.png\";\r\n  }\r\n}, \r\n    validateForm() {\r\n      let isValid = true;\r\n      this.errors.firstName = '';\r\n      this.errors.lastName = '';\r\n      \r\n      if (!this.userProfile.firstName.trim()) {\r\n        this.errors.firstName = 'กรุณากรอกชื่อ';\r\n        isValid = false;\r\n      }\r\n      \r\n      if (!this.userProfile.lastName.trim()) {\r\n        this.errors.lastName = 'กรุณากรอกนามสกุล';\r\n        isValid = false;\r\n      }\r\n      \r\n      return isValid;\r\n    },\r\n    \r\n    async saveProfile() {\r\n      if (!this.validateForm()) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        this.isLoading = true;\r\n        console.log('Saving profile data:', this.userProfile);\r\n\r\n        const response = await api.updateUserProfile({\r\n          firstName: this.userProfile.firstName,\r\n          lastName: this.userProfile.lastName,\r\n          phone: this.userProfile.phone,\r\n          address: this.userProfile.address\r\n        });\r\n\r\n        console.log('Profile updated:', response.data);\r\n\r\n        // บันทึกข้อมูลลง localStorage เพื่อใช้ในกรณีที่ API ไม่ทำงาน\r\n        localStorage.setItem('userFirstName', this.userProfile.firstName);\r\n        localStorage.setItem('userLastName', this.userProfile.lastName);\r\n        localStorage.setItem('userPhone', this.userProfile.phone);\r\n        localStorage.setItem('userAddress', this.userProfile.address);\r\n\r\n        this.showAlert('อัปเดตโปรไฟล์เรียบร้อยแล้ว', 'success');\r\n\r\n        // โหลดข้อมูลใหม่เพื่อให้แน่ใจว่าข้อมูลถูกต้อง\r\n        await this.fetchUserProfile();\r\n      } catch (error) {\r\n        console.error('Error updating profile:', error);\r\n        this.showAlert('ไม่สามารถอัปเดตโปรไฟล์ได้ กรุณาลองใหม่อีกครั้ง', 'error');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    \r\n    triggerPhotoUpload() {\r\n      // Trigger the file input click\r\n      this.$refs.photoInput.click();\r\n    },\r\n\r\n    async handleFileSelected(event) {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      // Validate file is an image - ตรวจสอบว่าเป็นไฟล์รูปภาพ\r\n      if (!file.type.startsWith('image/')) {\r\n        this.showAlert('กรุณาอัปโหลดไฟล์รูปภาพเท่านั้น', 'error');\r\n        return;\r\n      }\r\n\r\n      // ตรวจสอบขนาดไฟล์ - เพิ่มขนาดสูงสุดเป็น 50MB\r\n      const maxSizeInBytes = 50 * 1024 * 1024; // 50MB\r\n      if (file.size > maxSizeInBytes) {\r\n        this.showAlert(`ไฟล์มีขนาดใหญ่เกินไป (${(file.size / (1024 * 1024)).toFixed(2)} MB) กรุณาอัปโหลดไฟล์ขนาดไม่เกิน 50MB`, 'error');\r\n        return;\r\n      }\r\n\r\n      // Show loading state\r\n      this.isLoading = true;\r\n\r\n      // Show loading alert\r\n      this.showAlert('กำลังอัปโหลดรูปโปรไฟล์...', 'info');\r\n\r\n      // Convert file to base64\r\n      const reader = new FileReader();\r\n      reader.onload = async (e) => {\r\n        try {\r\n          let imageData = e.target.result;\r\n\r\n          // Ensure correct MIME type for all image files\r\n          if (file.type === 'image/jpeg' || file.type === 'image/jpg') {\r\n            if (!imageData.startsWith('data:image/jpeg')) {\r\n              imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/jpeg');\r\n            }\r\n          } else if (file.type === 'image/png' && !imageData.startsWith('data:image/png')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/png');\r\n          } else if (file.type === 'image/gif' && !imageData.startsWith('data:image/gif')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/gif');\r\n          } else if (file.type === 'image/webp' && !imageData.startsWith('data:image/webp')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/webp');\r\n          } else if (file.type === 'image/svg+xml' && !imageData.startsWith('data:image/svg+xml')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/svg+xml');\r\n          } else if (file.type === 'image/bmp' && !imageData.startsWith('data:image/bmp')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/bmp');\r\n          }\r\n\r\n          // ตรวจสอบว่า imageData มีรูปแบบที่ถูกต้อง\r\n          if (!imageData.includes('base64,')) {\r\n            console.error('Invalid image data format');\r\n            this.showAlert('รูปแบบข้อมูลรูปภาพไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง', 'error');\r\n            this.isLoading = false;\r\n            return;\r\n          }\r\n\r\n          // Show preview immediately\r\n          this.profilePictureUrl = imageData;\r\n\r\n          // ดึง userId จาก localStorage\r\n          const userId = localStorage.getItem('userId');\r\n          if (!userId) {\r\n            console.error('No user ID found in localStorage');\r\n            this.showAlert('ไม่พบข้อมูลผู้ใช้ กรุณาเข้าสู่ระบบใหม่อีกครั้ง', 'error');\r\n            this.isLoading = false;\r\n            return;\r\n          }\r\n\r\n          // บันทึกลงใน localStorage ทันทีเพื่อป้องกันการสูญหายเมื่อรีเฟรชหน้า\r\n          localStorage.setItem(`profilePictureUrl_${userId}`, imageData);\r\n          console.log(`Saved profile picture to localStorage for user ID: ${userId}`);\r\n\r\n          // บันทึกลงใน sessionStorage เป็นสำรอง\r\n          sessionStorage.setItem(`lastProfilePicture_${userId}`, imageData);\r\n          console.log(`Saved profile picture to sessionStorage for user ID: ${userId}`);\r\n\r\n          // บันทึกเวลาที่อัปโหลดล่าสุด\r\n          const uploadTimestamp = new Date().getTime();\r\n          localStorage.setItem(`profilePictureTimestamp_${userId}`, uploadTimestamp.toString());\r\n\r\n          // ส่งอีเวนต์เพื่ออัปเดตรูปภาพโปรไฟล์ในคอมโพเนนต์อื่น ๆ ทันที\r\n          window.dispatchEvent(new CustomEvent('profile-updated'));\r\n\r\n          // อัปโหลดไปยังเซิร์ฟเวอร์โดยใช้ api.uploadProfilePicture\r\n          // ซึ่งจะบันทึกรูปภาพลงใน localStorage และ sessionStorage อีกครั้ง\r\n          // และส่งอีเวนต์ profile-updated เมื่อสำเร็จหรือล้มเหลว\r\n          try {\r\n            const response = await api.uploadProfilePicture(imageData);\r\n\r\n            if (response.data && response.data.profilePictureUrl) {\r\n              this.showAlert('อัปโหลดรูปโปรไฟล์เรียบร้อยแล้ว', 'success');\r\n            }\r\n          } catch (error) {\r\n            console.error('Error uploading profile picture:', error);\r\n\r\n            // ยังคงแสดงความสำเร็จเนื่องจากเราได้บันทึกรูปภาพไว้ในเครื่องแล้ว\r\n            this.showAlert('บันทึกรูปโปรไฟล์เรียบร้อยแล้ว (แบบออฟไลน์)', 'success');\r\n          } finally {\r\n            // รีเซ็ตสถานะการโหลดเสมอ\r\n            this.isLoading = false;\r\n          }\r\n        } catch (error) {\r\n          console.error('Error processing image:', error);\r\n          this.showAlert('เกิดข้อผิดพลาดในการประมวลผลรูปภาพ กรุณาลองใหม่อีกครั้ง', 'error');\r\n          this.isLoading = false;\r\n        }\r\n      };\r\n\r\n      // จัดการข้อผิดพลาดของ reader\r\n      reader.onerror = () => {\r\n        console.error('FileReader error');\r\n        this.showAlert('เกิดข้อผิดพลาดในการอ่านไฟล์ กรุณาลองใหม่อีกครั้ง', 'error');\r\n        this.isLoading = false;\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    },\r\n    \r\n    formatStatus(status) {\r\n      if (!status) return 'ไม่ทราบสถานะ';\r\n\r\n      const statusMap = {\r\n        'headman': 'ผู้ใหญ่บ้าน',\r\n        'assistant': 'ผู้ช่วยผู้ใหญ่บ้าน',\r\n        'villager': 'ลูกบ้าน',\r\n        'pending': 'ผู้ใช้ที่รอการอนุมัติ'\r\n      };\r\n\r\n      return statusMap[status.toLowerCase()] || status.charAt(0).toUpperCase() + status.slice(1);\r\n    },\r\n\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'ไม่มีข้อมูล';\r\n\r\n      try {\r\n        // แปลงวันที่เป็นวัตถุ Date\r\n        const date = new Date(dateString);\r\n\r\n        // ตรวจสอบว่าวันที่ถูกต้องหรือไม่\r\n        if (isNaN(date.getTime())) {\r\n          return 'วันที่ไม่ถูกต้อง';\r\n        }\r\n\r\n        // กำหนดตัวเลือกการจัดรูปแบบวันที่แบบไทย\r\n        const options = {\r\n          year: 'numeric',\r\n          month: 'long',\r\n          day: 'numeric',\r\n          hour: '2-digit',\r\n          minute: '2-digit'\r\n        };\r\n\r\n        // แปลงเป็นวันที่ภาษาไทย\r\n        return date.toLocaleDateString('th-TH', options) + ' น.';\r\n      } catch (error) {\r\n        console.error('Error formatting date:', error);\r\n        return 'วันที่ไม่ถูกต้อง';\r\n      }\r\n    },\r\n    \r\n    showAlert(message, type = 'success') {\r\n      this.alert = {\r\n        show: true,\r\n        message,\r\n        type\r\n      };\r\n\r\n      // Hide alert after 3 seconds\r\n      setTimeout(() => {\r\n        this.alert.show = false;\r\n      }, 3000);\r\n    },\r\n\r\n    getFullImageUrl(url) {\r\n      if (!url) return '';\r\n\r\n      // If it's a data URL (base64), return as is\r\n      if (url.startsWith('data:')) {\r\n        return url;\r\n      }\r\n\r\n      // If it's a relative URL, use it as is (proxy will handle it)\r\n      if (url.startsWith('/')) {\r\n        // Add a timestamp to prevent caching\r\n        const timestamp = new Date().getTime();\r\n        // Use relative URL for proxy\r\n        return `${url}?t=${timestamp}`;\r\n      }\r\n\r\n      // If it's an https URL (like randomuser.me), return as is\r\n      if (url.startsWith('http')) {\r\n        return url;\r\n      }\r\n\r\n      // Otherwise, return the URL as is\r\n      return url;\r\n    },\r\n\r\n    handleImageError(e) {\r\n      // ป้องกันการวนซ้ำโดยตรวจสอบว่ารูปภาพได้รับการประมวลผลแล้วหรือไม่\r\n      if (e.target.dataset.errorHandled) {\r\n        // ถ้าเราได้พยายามจัดการกับข้อผิดพลาดนี้แล้ว ให้ใช้ placeholder\r\n        this.profilePictureUrl = null;\r\n        return;\r\n      }\r\n\r\n      // ทำเครื่องหมายว่ารูปภาพนี้กำลังถูกประมวลผลเพื่อป้องกันการวนซ้ำ\r\n      e.target.dataset.errorHandled = 'true';\r\n\r\n      // ดึง userId จาก localStorage\r\n      const userId = localStorage.getItem('userId');\r\n\r\n      // ลำดับการตรวจสอบ:\r\n      // 1. ตรวจสอบ localStorage ก่อน\r\n      const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\r\n      if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n        console.log(`Using stored base64 image for user ID: ${userId}`);\r\n        this.profilePictureUrl = storedPictureUrl;\r\n        return;\r\n      }\r\n\r\n      // 2. ตรวจสอบ sessionStorage\r\n      const lastProfilePicture = sessionStorage.getItem(`lastProfilePicture_${userId}`);\r\n      if (lastProfilePicture && lastProfilePicture.startsWith('data:image/')) {\r\n        console.log(`Using last profile picture from sessionStorage for user ID: ${userId}`);\r\n        this.profilePictureUrl = lastProfilePicture;\r\n        // บันทึกกลับไปที่ localStorage เพื่อใช้ในอนาคต\r\n        localStorage.setItem(`profilePictureUrl_${userId}`, lastProfilePicture);\r\n        return;\r\n      }\r\n\r\n      // 3. ตรวจสอบ URL ของเซิร์ฟเวอร์\r\n      const serverPictureUrl = localStorage.getItem(`serverProfilePictureUrl_${userId}`);\r\n      if (serverPictureUrl) {\r\n        // ลองใช้ URL ของเซิร์ฟเวอร์โดยตรง\r\n        const timestamp = new Date().getTime();\r\n        const newUrl = `${serverPictureUrl}?t=${timestamp}`;\r\n        console.log('Trying server URL:', newUrl);\r\n\r\n        // ใช้ URL ใหม่โดยตรงกับ profilePictureUrl แทนที่จะกำหนดให้กับ e.target.src\r\n        // เพื่อหลีกเลี่ยงการเรียก handleImageError ซ้ำ\r\n        this.profilePictureUrl = newUrl;\r\n        return;\r\n      }\r\n\r\n      // 4. ลองโหลดรูปภาพโดยตรงจากเซิร์ฟเวอร์เป็นทางเลือกสุดท้าย\r\n      const url = e.target.src;\r\n      if (url.includes('/uploads/')) {\r\n        const imagePath = url.split('?')[0]; // ลบพารามิเตอร์การสอบถาม\r\n        const newUrl = `${imagePath.substring(imagePath.indexOf('/uploads/'))}`;\r\n        console.log('Trying alternative URL:', newUrl);\r\n\r\n        // ใช้ URL ใหม่โดยตรงกับ profilePictureUrl แทนที่จะกำหนดให้กับ e.target.src\r\n        this.profilePictureUrl = newUrl;\r\n        return;\r\n      }\r\n\r\n      // ถ้าทุกอย่างล้มเหลว ให้กลับไปใช้ placeholder\r\n      this.profilePictureUrl = null;\r\n    }\r\n  }\r\n  mounted() {\r\n    // ดึง userId จาก localStorage\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    // ตรวจสอบรูปภาพจาก localStorage ก่อน (เพราะเชื่อถือได้มากที่สุด)\r\n    if (userId) {\r\n      const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\r\n      if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n        console.log(`Mounted: Using stored profile picture for user ID: ${userId}`);\r\n        this.profilePictureUrl = storedPictureUrl;\r\n      }\r\n      // ถ้าไม่มีใน localStorage ให้ตรวจสอบใน sessionStorage\r\n      else if (sessionStorage.getItem(`lastProfilePicture_${userId}`)) {\r\n        console.log(`Mounted: Using last profile picture from sessionStorage for user ID: ${userId}`);\r\n        const lastPicture = sessionStorage.getItem(`lastProfilePicture_${userId}`);\r\n        this.profilePictureUrl = lastPicture;\r\n        // บันทึกกลับไปที่ localStorage เพื่อใช้ในอนาคต\r\n        localStorage.setItem(`profilePictureUrl_${userId}`, lastPicture);\r\n      }\r\n      // ถ้าไม่มีทั้งใน localStorage และ sessionStorage ให้ตรวจสอบ URL ของเซิร์ฟเวอร์\r\n      else {\r\n        const serverPictureUrl = localStorage.getItem(`serverProfilePictureUrl_${userId}`);\r\n        if (serverPictureUrl) {\r\n          const timestamp = new Date().getTime();\r\n          this.profilePictureUrl = `${serverPictureUrl}?t=${timestamp}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    // ดึงข้อมูลโปรไฟล์จาก API\r\n    this.fetchUserProfile();\r\n\r\n    // ตั้งค่าตัวจับเวลาเพื่อตรวจสอบการเปลี่ยนแปลงของรูปภาพโปรไฟล์\r\n    this.profileUpdateHandler = () => {\r\n      // ดึง userId จาก localStorage\r\n      const userId = localStorage.getItem('userId');\r\n      if (userId) {\r\n        // ตรวจสอบรูปภาพจาก localStorage\r\n        const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\r\n        if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n          this.profilePictureUrl = storedPictureUrl;\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('profile-updated', this.profileUpdateHandler);\r\n  },\r\n\r\n  beforeUnmount() {\r\n    // ทำความสะอาดตัวจับเวลาและตัวฟังก์ชันเมื่อคอมโพเนนต์ถูกทำลาย\r\n    if (this.profileUpdateHandler) {\r\n      window.removeEventListener('profile-updated', this.profileUpdateHandler);\r\n    }\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.profile-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.profile-header {\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: #f5f5f5;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.profile-photo {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.photo-container {\r\n  width: 256px;\r\n  height: 256px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 15px;\r\n  border: 3px solid white;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.photo-container img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.photo-placeholder {\r\n  width: 256px;\r\n  height: 256px;\r\n  border-radius: 50%;\r\n  background-color: #e0e0e0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 72px; /* เพิ่มขนาดตัวอักษรให้เหมาะสมกับขนาดที่ใหญ่ขึ้น */\r\n  font-weight: bold;\r\n  color: #757575;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.upload-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.profile-form {\r\n  padding: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\ninput, textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput.error {\r\n  border-color: #d32f2f;\r\n}\r\n\r\n.error-text {\r\n  color: #d32f2f;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  display: block;\r\n}\r\n\r\ntextarea {\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\ninput:disabled, textarea:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.save-btn:disabled {\r\n  background-color: #9e9e9e;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.alert {\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n.alert-success {\r\n  background-color: #dff0d8;\r\n  color: #3c763d;\r\n  border: 1px solid #d6e9c6;\r\n}\r\n\r\n.alert-error {\r\n  background-color: #f2dede;\r\n  color: #a94442;\r\n  border: 1px solid #ebccd1;\r\n}\r\n\r\n.alert-info {\r\n  background-color: #d9edf7;\r\n  color: #31708f;\r\n  border: 1px solid #bce8f1;\r\n}\r\n\r\n.pending-approval-banner {\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #fff3cd;\r\n  border: 1px solid #ffeeba;\r\n  border-radius: 4px;\r\n  padding: 15px;\r\n  margin: 0 20px 20px;\r\n}\r\n\r\n.pending-icon {\r\n  font-size: 24px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.pending-message {\r\n  flex: 1;\r\n}\r\n\r\n.pending-message h3 {\r\n  margin: 0 0 5px 0;\r\n  color: #856404;\r\n}\r\n\r\n.pending-message p {\r\n  margin: 0;\r\n  color: #856404;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}