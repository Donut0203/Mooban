{"ast":null,"code":"import api from '@/services/api';\nexport default {\n  name: 'App',\n  data() {\n    // Get stored values\n    const storedUserId = localStorage.getItem('userId') || '';\n    const storedEmail = localStorage.getItem('email') || '';\n    let storedStatus = localStorage.getItem('userStatus') || '';\n    return {\n      pendingUsers: [],\n      showNotifications: false,\n      showEmployeeMenu: false,\n      // เพิ่มตัวแปรสำหรับควบคุมการแสดงเมนูย่อย\n      showUserDetails: false,\n      // เพิ่มตัวแปรสำหรับควบคุมการแสดง/ซ่อนข้อมูลส่วนตัว\n      loading: false,\n      userId: storedUserId,\n      userEmail: storedEmail,\n      userStatus: storedStatus,\n      userFullName: 'Natcha Boonmee',\n      userPhone: '0835364833',\n      userAddress: 'Rmutt',\n      profileImageUrl: '',\n      // Initialize profileImageUrl as empty string\n      pendingUsersInterval: null,\n      // เพิ่มตัวแปรสำหรับเก็บ interval ID\n      fallbackImageUrl: 'https://via.placeholder.com/256x256?text=Profile' // URL ของรูปภาพสำรอง\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!localStorage.getItem('token');\n    },\n    isHeadmanOrAssistant() {\n      const status = localStorage.getItem('userStatus');\n      return status === 'headman' || status === 'assistant';\n    },\n    isLoginPage() {\n      return this.$route && this.$route.path === '/login';\n    },\n    isRegisterPage() {\n      return this.$route && this.$route.path === '/register';\n    }\n  },\n  methods: {\n    formatRole(role) {\n      if (!role) return 'User';\n      return role.charAt(0).toUpperCase() + role.slice(1);\n    },\n    isValidStatus(status) {\n      return ['headman', 'assistant', 'villager'].includes(status);\n    },\n    toggleNotifications() {\n      this.showNotifications = !this.showNotifications;\n    },\n    toggleEmployeeMenu() {\n      this.showEmployeeMenu = !this.showEmployeeMenu;\n    },\n    toggleUserDetails() {\n      this.showUserDetails = !this.showUserDetails;\n    },\n    async fetchPendingUsers() {\n      const isLoggedIn = !!localStorage.getItem('token');\n      const userStatus = localStorage.getItem('userStatus');\n      const isHeadmanOrAssistant = userStatus === 'headman' || userStatus === 'assistant';\n      if (!isLoggedIn || !isHeadmanOrAssistant) return;\n      try {\n        this.loading = true;\n        console.log('Fetching pending users...');\n\n        // ดึงข้อมูลผู้ใช้ที่รอการอนุมัติ\n        const response = await api.getPendingUsers();\n        let pendingUsers = response.data.pendingUsers || [];\n        console.log('Pending users from API:', pendingUsers);\n        try {\n          const allUsersResponse = await api.getAllUsers();\n          if (allUsersResponse.data && allUsersResponse.data.users) {\n            const pendingStatusUsers = allUsersResponse.data.users.filter(user => user.status === 'pending');\n            console.log('Users with pending status:', pendingStatusUsers);\n            const combinedUsers = [...pendingUsers];\n            pendingStatusUsers.forEach(user => {\n              const isDuplicate = combinedUsers.some(existingUser => existingUser.user_id === user.user_id);\n              if (!isDuplicate) {\n                combinedUsers.push(user);\n              }\n            });\n            this.pendingUsers = combinedUsers;\n            console.log('Combined pending users:', this.pendingUsers);\n          }\n        } catch (allUsersError) {\n          console.error('Error fetching all users:', allUsersError);\n          this.pendingUsers = pendingUsers;\n        }\n        if (this.pendingUsers.length === 0) {\n          try {\n            const countResponse = await api.getPendingUsersCount();\n            console.log('Pending users count:', countResponse.data);\n            if (countResponse.data && countResponse.data.count > 0) {\n              console.log('Count shows pending users but list is empty, fetching again...');\n              const retryResponse = await api.getPendingUsers();\n              this.pendingUsers = retryResponse.data.pendingUsers || [];\n              console.log('Retry pending users:', this.pendingUsers);\n            }\n          } catch (countError) {\n            console.error('Error fetching pending users count:', countError);\n          }\n        }\n      } catch (error) {\n        console.error('Error in main fetchPendingUsers:', error);\n      } finally {\n        this.loading = false;\n        console.log('Final pending users list:', this.pendingUsers);\n      }\n    },\n    async approveUser(userId) {\n      const userToApprove = this.pendingUsers.find(user => user.user_id === userId);\n      if (!userToApprove) {\n        alert('ไม่พบข้อมูลผู้ใช้');\n        return;\n      }\n      if (!this.isValidStatus(userToApprove.status)) {\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ เนื่องจากสถานะไม่ถูกต้อง');\n        return;\n      }\n      try {\n        await api.approveUser(userId);\n        this.pendingUsers = this.pendingUsers.filter(user => user.user_id !== userId);\n        this.$emit('user-approved');\n        alert('อนุมัติผู้ใช้เรียบร้อยแล้ว');\n      } catch (error) {\n        console.error('Error approving user:', error);\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ กรุณาลองอีกครั้ง');\n      }\n    },\n    logout() {\n      const userId = localStorage.getItem('userId');\n      const profilePictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\n      localStorage.clear();\n      if (userId && profilePictureUrl && profilePictureUrl.startsWith('data:image/')) {\n        sessionStorage.setItem(`lastProfilePicture_${userId}`, profilePictureUrl);\n        console.log(`Saved profile picture to sessionStorage for user ID: ${userId}`);\n      }\n      this.showNotifications = false;\n      this.pendingUsers = [];\n      this.userId = '';\n      this.userEmail = '';\n      this.userStatus = '';\n      this.userFullName = '';\n      this.userPhone = '';\n      this.userAddress = '';\n      window.location.href = '/login';\n    },\n    async fetchUserProfile() {\n      if (this._fetchUserProfileDebounced) {\n        console.log('Skipping duplicate profile fetch request');\n        return;\n      }\n      this._fetchUserProfileDebounced = true;\n      setTimeout(() => {\n        this._fetchUserProfileDebounced = null;\n      }, 2000);\n      try {\n        console.log('Fetching user profile...');\n        const userId = localStorage.getItem('userId');\n        const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\n        if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\n          console.log(`Using profile picture from localStorage for user ID: ${userId}`);\n          this.profileImageUrl = storedPictureUrl;\n        } else if (sessionStorage.getItem(`lastProfilePicture_${userId}`)) {\n          console.log(`Using last profile picture from sessionStorage for user ID: ${userId}`);\n          const lastPicture = sessionStorage.getItem(`lastProfilePicture_${userId}`);\n          this.profileImageUrl = lastPicture;\n          localStorage.setItem(`profilePictureUrl_${userId}`, lastPicture);\n        }\n        const response = await api.getUserProfile();\n        const user = response.data.user;\n        console.log('User profile data:', user);\n        if (user) {\n          this.userEmail = user.user_email || this.userEmail;\n          this.userStatus = user.status || this.userStatus;\n          this.userFullName = user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : this.userFullName;\n          this.userPhone = user.phone || this.userPhone;\n          this.userAddress = user.address || this.userAddress;\n          if (user.profile_picture && (!storedPictureUrl || !storedPictureUrl.startsWith('data:image/'))) {\n            console.log('Profile picture found in API response:', user.profile_picture);\n            if (user.profile_picture.startsWith('http')) {\n              this.profileImageUrl = user.profile_picture;\n            } else {\n              const timestamp = new Date().getTime();\n              const serverUrl = `${user.profile_picture}?t=${timestamp}`;\n              this.profileImageUrl = serverUrl;\n              localStorage.setItem(`serverProfilePictureUrl_${userId}`, user.profile_picture);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        const userId = localStorage.getItem('userId');\n        const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\n        if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\n          console.log(`Using profile picture from localStorage after API error for user ID: ${userId}`);\n          this.profileImageUrl = storedPictureUrl;\n        } else if (sessionStorage.getItem(`lastProfilePicture_${userId}`)) {\n          console.log(`Using last profile picture from sessionStorage after API error for user ID: ${userId}`);\n          this.profileImageUrl = sessionStorage.getItem(`lastProfilePicture_${userId}`);\n        }\n      }\n    },\n    handleImageError() {\n      // Fallback to the default image if the original image fails to load\n      console.log('Profile image failed to load, using fallback image.');\n      this.profileImageUrl = this.fallbackImageUrl;\n    }\n  },\n  watch: {\n    profileImageUrl(newUrl) {\n      console.log('Profile image URL updated:', newUrl);\n    }\n  },\n  created() {\n    this.fetchUserProfile();\n  }\n};","map":{"version":3,"names":["api","name","data","storedUserId","localStorage","getItem","storedEmail","storedStatus","pendingUsers","showNotifications","showEmployeeMenu","showUserDetails","loading","userId","userEmail","userStatus","userFullName","userPhone","userAddress","profileImageUrl","pendingUsersInterval","fallbackImageUrl","computed","isLoggedIn","isHeadmanOrAssistant","status","isLoginPage","$route","path","isRegisterPage","methods","formatRole","role","charAt","toUpperCase","slice","isValidStatus","includes","toggleNotifications","toggleEmployeeMenu","toggleUserDetails","fetchPendingUsers","console","log","response","getPendingUsers","allUsersResponse","getAllUsers","users","pendingStatusUsers","filter","user","combinedUsers","forEach","isDuplicate","some","existingUser","user_id","push","allUsersError","error","length","countResponse","getPendingUsersCount","count","retryResponse","countError","approveUser","userToApprove","find","alert","$emit","logout","profilePictureUrl","clear","startsWith","sessionStorage","setItem","window","location","href","fetchUserProfile","_fetchUserProfileDebounced","setTimeout","storedPictureUrl","lastPicture","getUserProfile","user_email","first_name","last_name","phone","address","profile_picture","timestamp","Date","getTime","serverUrl","handleImageError","watch","newUrl","created"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"app-container\" v-if=\"isLoggedIn && !isLoginPage && !isRegisterPage\">\r\n      <!-- Vertical sidebar navigation -->\r\n      <div class=\"sidebar-nav\">\r\n        <div class=\"sidebar-profile\">\r\n          <div class=\"profile-image\">\r\n            <img :src=\"getFullImageUrl(profileImageUrl) || 'https://via.placeholder.com/256x256?text=Profile'\" alt=\"Profile Image\" @error=\"handleImageError\">\r\n          </div>\r\n          <div class=\"profile-info\">\r\n            <h3>{{ userFullName || userEmail || 'Natcha Boonmee' }}</h3>\r\n            <span class=\"user-role\" :class=\"'role-' + userStatus\">{{ formatRole(userStatus) }}</span>\r\n\r\n            <!-- ปุ่มแสดง/ซ่อนข้อมูลส่วนตัว -->\r\n            <button class=\"profile-btn toggle-details-btn\" @click=\"toggleUserDetails\">\r\n              {{ showUserDetails ? 'ซ่อนข้อมูลส่วนตัว' : 'แสดงข้อมูลส่วนตัว' }}\r\n              <i class=\"dropdown-icon\" :class=\"{'dropdown-icon-open': showUserDetails}\">▼</i>\r\n            </button>\r\n\r\n            <!-- ข้อมูลส่วนตัวที่ซ่อนไว้ -->\r\n            <div class=\"user-details\" v-show=\"showUserDetails\">\r\n              <div class=\"info-item\" v-if=\"userId\">\r\n                <span class=\"info-label\">User ID:</span>\r\n                <span class=\"info-value\">{{ userId }}</span>\r\n              </div>\r\n              <div class=\"info-item\" v-if=\"userEmail\">\r\n                <span class=\"info-label\">Email:</span>\r\n                <span class=\"info-value\">{{ userEmail }}</span>\r\n              </div>\r\n              <div class=\"info-item\" v-if=\"userPhone\">\r\n                <span class=\"info-label\">Phone:</span>\r\n                <span class=\"info-value\">{{ userPhone }}</span>\r\n              </div>\r\n              <div class=\"info-item\" v-if=\"userAddress\">\r\n                <span class=\"info-label\">Address:</span>\r\n                <span class=\"info-value\">{{ userAddress }}</span>\r\n              </div>\r\n            </div>\r\n            <router-link to=\"/profile\" class=\"profile-btn edit-profile-btn\">แก้ไขโปรไฟล์</router-link>\r\n          </div>\r\n        </div>\r\n        <div class=\"sidebar-divider\"></div>\r\n        <div class=\"sidebar-menu\">\r\n          <router-link to=\"/\" class=\"sidebar-menu-item\"><span class=\"menu-emoji\">🏠</span> หน้าหลัก</router-link>\r\n\r\n          <!-- เมนูข้อมูลพนักงานแบบเลื่อนลง -->\r\n          <div class=\"dropdown-menu\">\r\n            <div class=\"dropdown-header\" @click=\"toggleEmployeeMenu\">\r\n              <span><span class=\"menu-emoji\">👥</span> ข้อมูลพนักงาน</span>\r\n              <i class=\"dropdown-icon\" :class=\"{'dropdown-icon-open': showEmployeeMenu}\">▼</i>\r\n            </div>\r\n            <div class=\"dropdown-content\" v-show=\"showEmployeeMenu\">\r\n              <router-link v-if=\"userStatus === 'headman' || userStatus === 'assistant'\" to=\"/pending-users\" class=\"sidebar-menu-item submenu-item\"><span class=\"menu-emoji\">⏳</span> รายการรออนุมัติ</router-link>\r\n              <router-link v-if=\"userStatus === 'headman' || userStatus === 'assistant'\" to=\"/all-users\" class=\"sidebar-menu-item submenu-item\"><span class=\"menu-emoji\">👤</span> จัดการผู้ใช้งาน</router-link>\r\n              <router-link to=\"/dashboard\" class=\"sidebar-menu-item submenu-item\"><span class=\"menu-emoji\">📊</span> แดชบอร์ด</router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Main content area with top navigation -->\r\n      <div class=\"main-content-area\">\r\n        <nav class=\"top-nav\">\r\n          <div class=\"nav-container\">\r\n            <div class=\"nav-left\">\r\n              <h2>Village Management System</h2>\r\n            </div>\r\n            <div class=\"nav-right\">\r\n              <div class=\"notification-container\" v-if=\"userStatus === 'headman' || userStatus === 'assistant'\">\r\n                <button class=\"notification-btn\" @click=\"toggleNotifications\">\r\n                  Pending Approvals {{ pendingUsers.length > 0 ? '(' + pendingUsers.length + ')' : '' }}\r\n                </button>\r\n                <div class=\"notification-dropdown\" v-if=\"showNotifications\">\r\n                  <h3>Pending Users</h3>\r\n                  <div v-if=\"pendingUsers.length > 0\">\r\n                    <div v-for=\"user in pendingUsers\" :key=\"user.user_id\" class=\"pending-user\">\r\n                      <div>\r\n                        <strong>{{ user.first_name }} {{ user.last_name }}</strong>\r\n                        <div>{{ user.user_email }}</div>\r\n                        <div>Status: {{ user.status }}</div>\r\n                      </div>\r\n                      <button class=\"approve-btn\" @click=\"approveUser(user.user_id)\" :disabled=\"!isValidStatus(user.status)\">Approve</button>\r\n                    </div>\r\n                  </div>\r\n                  <div v-else class=\"no-pending\">\r\n                    ไม่มีผู้ใช้ที่รอการอนุมัติ\r\n                  </div>\r\n                  <div class=\"dropdown-footer\">\r\n                    <router-link to=\"/pending-users\" class=\"view-all-btn\" @click=\"showNotifications = false\">View All Pending Users</router-link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button class=\"logout-btn\" @click=\"logout\">Logout</button>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <div class=\"content-wrapper\">\r\n          <router-view @user-approved=\"fetchPendingUsers\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <router-view v-else-if=\"isLoginPage || isRegisterPage\" @user-approved=\"fetchPendingUsers\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    // Get stored values\r\n    const storedUserId = localStorage.getItem('userId') || '';\r\n    const storedEmail = localStorage.getItem('email') || '';\r\n    let storedStatus = localStorage.getItem('userStatus') || '';\r\n\r\n    return {\r\n      pendingUsers: [],\r\n      showNotifications: false,\r\n      showEmployeeMenu: false, // เพิ่มตัวแปรสำหรับควบคุมการแสดงเมนูย่อย\r\n      showUserDetails: false, // เพิ่มตัวแปรสำหรับควบคุมการแสดง/ซ่อนข้อมูลส่วนตัว\r\n      loading: false,\r\n      userId: storedUserId,\r\n      userEmail: storedEmail,\r\n      userStatus: storedStatus,\r\n      userFullName: 'Natcha Boonmee',\r\n      userPhone: '0835364833',\r\n      userAddress: 'Rmutt',\r\n      profileImageUrl: '',  // Initialize profileImageUrl as empty string\r\n      pendingUsersInterval: null, // เพิ่มตัวแปรสำหรับเก็บ interval ID\r\n      fallbackImageUrl: 'https://via.placeholder.com/256x256?text=Profile', // URL ของรูปภาพสำรอง\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return !!localStorage.getItem('token');\r\n    },\r\n    isHeadmanOrAssistant() {\r\n      const status = localStorage.getItem('userStatus');\r\n      return status === 'headman' || status === 'assistant';\r\n    },\r\n    isLoginPage() {\r\n      return this.$route && this.$route.path === '/login';\r\n    },\r\n    isRegisterPage() {\r\n      return this.$route && this.$route.path === '/register';\r\n    }\r\n  },\r\n  methods: {\r\n    formatRole(role) {\r\n      if (!role) return 'User';\r\n      return role.charAt(0).toUpperCase() + role.slice(1);\r\n    },\r\n    isValidStatus(status) {\r\n      return ['headman', 'assistant', 'villager'].includes(status);\r\n    },\r\n    toggleNotifications() {\r\n      this.showNotifications = !this.showNotifications;\r\n    },\r\n    toggleEmployeeMenu() {\r\n      this.showEmployeeMenu = !this.showEmployeeMenu;\r\n    },\r\n    toggleUserDetails() {\r\n      this.showUserDetails = !this.showUserDetails;\r\n    },\r\n    async fetchPendingUsers() {\r\n      const isLoggedIn = !!localStorage.getItem('token');\r\n      const userStatus = localStorage.getItem('userStatus');\r\n      const isHeadmanOrAssistant = userStatus === 'headman' || userStatus === 'assistant';\r\n\r\n      if (!isLoggedIn || !isHeadmanOrAssistant) return;\r\n\r\n      try {\r\n        this.loading = true;\r\n        console.log('Fetching pending users...');\r\n\r\n        // ดึงข้อมูลผู้ใช้ที่รอการอนุมัติ\r\n        const response = await api.getPendingUsers();\r\n        let pendingUsers = response.data.pendingUsers || [];\r\n        console.log('Pending users from API:', pendingUsers);\r\n\r\n        try {\r\n          const allUsersResponse = await api.getAllUsers();\r\n          if (allUsersResponse.data && allUsersResponse.data.users) {\r\n            const pendingStatusUsers = allUsersResponse.data.users.filter(user => user.status === 'pending');\r\n            console.log('Users with pending status:', pendingStatusUsers);\r\n\r\n            const combinedUsers = [...pendingUsers];\r\n            pendingStatusUsers.forEach(user => {\r\n              const isDuplicate = combinedUsers.some(existingUser => existingUser.user_id === user.user_id);\r\n              if (!isDuplicate) {\r\n                combinedUsers.push(user);\r\n              }\r\n            });\r\n\r\n            this.pendingUsers = combinedUsers;\r\n            console.log('Combined pending users:', this.pendingUsers);\r\n          }\r\n        } catch (allUsersError) {\r\n          console.error('Error fetching all users:', allUsersError);\r\n          this.pendingUsers = pendingUsers;\r\n        }\r\n\r\n        if (this.pendingUsers.length === 0) {\r\n          try {\r\n            const countResponse = await api.getPendingUsersCount();\r\n            console.log('Pending users count:', countResponse.data);\r\n\r\n            if (countResponse.data && countResponse.data.count > 0) {\r\n              console.log('Count shows pending users but list is empty, fetching again...');\r\n              const retryResponse = await api.getPendingUsers();\r\n              this.pendingUsers = retryResponse.data.pendingUsers || [];\r\n              console.log('Retry pending users:', this.pendingUsers);\r\n            }\r\n          } catch (countError) {\r\n            console.error('Error fetching pending users count:', countError);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error in main fetchPendingUsers:', error);\r\n      } finally {\r\n        this.loading = false;\r\n        console.log('Final pending users list:', this.pendingUsers);\r\n      }\r\n    },\r\n    async approveUser(userId) {\r\n      const userToApprove = this.pendingUsers.find(user => user.user_id === userId);\r\n      if (!userToApprove) {\r\n        alert('ไม่พบข้อมูลผู้ใช้');\r\n        return;\r\n      }\r\n\r\n      if (!this.isValidStatus(userToApprove.status)) {\r\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ เนื่องจากสถานะไม่ถูกต้อง');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await api.approveUser(userId);\r\n        this.pendingUsers = this.pendingUsers.filter(user => user.user_id !== userId);\r\n        this.$emit('user-approved');\r\n        alert('อนุมัติผู้ใช้เรียบร้อยแล้ว');\r\n      } catch (error) {\r\n        console.error('Error approving user:', error);\r\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ กรุณาลองอีกครั้ง');\r\n      }\r\n    },\r\n    logout() {\r\n      const userId = localStorage.getItem('userId');\r\n      const profilePictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\r\n      localStorage.clear();\r\n\r\n      if (userId && profilePictureUrl && profilePictureUrl.startsWith('data:image/')) {\r\n        sessionStorage.setItem(`lastProfilePicture_${userId}`, profilePictureUrl);\r\n        console.log(`Saved profile picture to sessionStorage for user ID: ${userId}`);\r\n      }\r\n\r\n      this.showNotifications = false;\r\n      this.pendingUsers = [];\r\n      this.userId = '';\r\n      this.userEmail = '';\r\n      this.userStatus = '';\r\n      this.userFullName = '';\r\n      this.userPhone = '';\r\n      this.userAddress = '';\r\n\r\n      window.location.href = '/login';\r\n    },\r\n    async fetchUserProfile() {\r\n      if (this._fetchUserProfileDebounced) {\r\n        console.log('Skipping duplicate profile fetch request');\r\n        return;\r\n      }\r\n\r\n      this._fetchUserProfileDebounced = true;\r\n      setTimeout(() => {\r\n        this._fetchUserProfileDebounced = null;\r\n      }, 2000);\r\n\r\n      try {\r\n        console.log('Fetching user profile...');\r\n        const userId = localStorage.getItem('userId');\r\n        const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\r\n\r\n        if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n          console.log(`Using profile picture from localStorage for user ID: ${userId}`);\r\n          this.profileImageUrl = storedPictureUrl;\r\n        } else if (sessionStorage.getItem(`lastProfilePicture_${userId}`)) {\r\n          console.log(`Using last profile picture from sessionStorage for user ID: ${userId}`);\r\n          const lastPicture = sessionStorage.getItem(`lastProfilePicture_${userId}`);\r\n          this.profileImageUrl = lastPicture;\r\n          localStorage.setItem(`profilePictureUrl_${userId}`, lastPicture);\r\n        }\r\n\r\n        const response = await api.getUserProfile();\r\n        const user = response.data.user;\r\n        console.log('User profile data:', user);\r\n\r\n        if (user) {\r\n          this.userEmail = user.user_email || this.userEmail;\r\n          this.userStatus = user.status || this.userStatus;\r\n          this.userFullName = user.first_name && user.last_name ?\r\n            `${user.first_name} ${user.last_name}` : this.userFullName;\r\n          this.userPhone = user.phone || this.userPhone;\r\n          this.userAddress = user.address || this.userAddress;\r\n\r\n          if (user.profile_picture && (!storedPictureUrl || !storedPictureUrl.startsWith('data:image/'))) {\r\n            console.log('Profile picture found in API response:', user.profile_picture);\r\n\r\n            if (user.profile_picture.startsWith('http')) {\r\n              this.profileImageUrl = user.profile_picture;\r\n            } else {\r\n              const timestamp = new Date().getTime();\r\n              const serverUrl = `${user.profile_picture}?t=${timestamp}`;\r\n              this.profileImageUrl = serverUrl;\r\n              localStorage.setItem(`serverProfilePictureUrl_${userId}`, user.profile_picture);\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user profile:', error);\r\n\r\n        const userId = localStorage.getItem('userId');\r\n        const storedPictureUrl = localStorage.getItem(`profilePictureUrl_${userId}`);\r\n        if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n          console.log(`Using profile picture from localStorage after API error for user ID: ${userId}`);\r\n          this.profileImageUrl = storedPictureUrl;\r\n        } else if (sessionStorage.getItem(`lastProfilePicture_${userId}`)) {\r\n          console.log(`Using last profile picture from sessionStorage after API error for user ID: ${userId}`);\r\n          this.profileImageUrl = sessionStorage.getItem(`lastProfilePicture_${userId}`);\r\n        }\r\n      }\r\n    },\r\n    handleImageError() {\r\n      // Fallback to the default image if the original image fails to load\r\n      console.log('Profile image failed to load, using fallback image.');\r\n      this.profileImageUrl = this.fallbackImageUrl;\r\n    }\r\n  },\r\n  watch: {\r\n    profileImageUrl(newUrl) {\r\n      console.log('Profile image URL updated:', newUrl);\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchUserProfile();\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style>\r\n@import url('https://fonts.googleapis.com/css2?family=Prompt:wght@300;400;500;600&family=Kanit:wght@300;400;500;600&family=Sarabun:wght@300;400;500;600&display=swap');\r\n\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n#app {\r\n  font-family: 'Prompt', 'Kanit', 'Sarabun', Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n\r\n.app-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n/* Sidebar Navigation */\r\n.sidebar-nav {\r\n  width: 320px;\r\n  background-color: #2C3E50;\r\n  color: white;\r\n  height: 100vh;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  overflow-y: auto;\r\n  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);\r\n  z-index: 1000;\r\n}\r\n\r\n.sidebar-profile {\r\n  padding: 15px 12px;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.05);\r\n  text-align: center;\r\n}\r\n\r\n.profile-image {\r\n  width: 128px;\r\n  height: 128px;\r\n  margin: 0 auto 15px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  border: 3px solid #fff;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.profile-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.profile-info h3 {\r\n  margin: 0 0 5px;\r\n  font-size: 1.2rem;\r\n  color: white;\r\n  font-weight: 500;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  font-family: 'Prompt', sans-serif;\r\n  letter-spacing: 0.5px;\r\n}\r\n\r\n.user-role {\r\n  display: inline-block;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.role-headman {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.role-assistant {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.role-villager, .role-pending, .role-undefined {\r\n  background-color: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n.user-details {\r\n  margin: 12px 0;\r\n  text-align: left;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  font-size: 0.85rem;\r\n}\r\n\r\n.info-item {\r\n  margin-bottom: 6px;\r\n  color: rgba(255, 255, 255, 0.9);\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.info-label {\r\n  font-weight: bold;\r\n  margin-right: 5px;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  min-width: 70px;\r\n}\r\n\r\n.info-value {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.profile-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  font-size: 0.85rem;\r\n  margin: 6px auto;\r\n  transition: background-color 0.3s;\r\n  width: 80%;\r\n  text-align: center;\r\n  height: 32px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.toggle-details-btn {\r\n  background-color: #6c757d;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.toggle-details-btn:hover {\r\n  background-color: #5a6268;\r\n}\r\n\r\n.toggle-details-btn .dropdown-icon {\r\n  margin-left: 5px;\r\n  font-size: 10px;\r\n  transition: transform 0.3s;\r\n}\r\n\r\n.edit-profile-btn {\r\n  display: flex;\r\n  background-color: #dc3545;\r\n  text-decoration: none;\r\n}\r\n\r\n.edit-profile-btn:hover {\r\n  background-color: #c82333;\r\n}\r\n\r\n.edit-profile-btn:hover {\r\n  background-color: #0069d9;\r\n}\r\n\r\n.sidebar-divider {\r\n  height: 1px;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  margin: 0;\r\n}\r\n\r\n.sidebar-menu {\r\n  padding: 15px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.sidebar-menu-item {\r\n  color: rgba(255, 255, 255, 0.9);\r\n  text-decoration: none;\r\n  padding: 12px 16px;\r\n  transition: all 0.3s;\r\n  border-left: 3px solid transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n  letter-spacing: 0.5px;\r\n  font-family: 'Prompt', sans-serif;\r\n}\r\n\r\n.sidebar-menu-item > *:first-child {\r\n  margin-right: 8px;\r\n}\r\n\r\n/* ทำให้อีโมจิมีสีขาวชัดเจน */\r\n.menu-emoji {\r\n  color: white;\r\n  font-size: 1.1em;\r\n  display: inline-block;\r\n  margin-right: 8px;\r\n  filter: brightness(1.2);\r\n  text-shadow: 0 0 3px rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.sidebar-menu-item:hover {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  border-left-color: #3498DB;\r\n}\r\n\r\n.sidebar-menu-item.router-link-active {\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  color: white;\r\n  border-left-color: #3498DB;\r\n  font-weight: 500;\r\n}\r\n\r\n/* เมนูแบบเลื่อนลง */\r\n.dropdown-menu {\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.dropdown-header {\r\n  color: rgba(255, 255, 255, 0.9);\r\n  text-decoration: none;\r\n  padding: 12px 16px;\r\n  transition: all 0.3s;\r\n  border-left: 3px solid transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n  letter-spacing: 0.5px;\r\n  font-family: 'Prompt', sans-serif;\r\n  cursor: pointer;\r\n}\r\n\r\n.dropdown-header:hover {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  border-left-color: #3498DB;\r\n}\r\n\r\n.dropdown-icon {\r\n  font-size: 16px;\r\n  transition: transform 0.3s;\r\n  margin-left: 8px;\r\n}\r\n\r\n.dropdown-icon-open {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n.dropdown-content {\r\n  overflow: hidden;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.submenu-item {\r\n  padding-left: 35px !important;\r\n  font-size: 22px;\r\n  padding-top: 10px !important;\r\n  padding-bottom: 10px !important;\r\n  font-family: 'Prompt', sans-serif;\r\n  font-weight: 300;\r\n  letter-spacing: 0.3px;\r\n}\r\n\r\n/* Main Content Area */\r\n.main-content-area {\r\n  flex: 1;\r\n  margin-left: 320px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.top-nav {\r\n  background-color: white;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  padding: 0;\r\n  height: 60px;\r\n}\r\n\r\n.nav-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  height: 100%;\r\n}\r\n\r\n.nav-left, .nav-right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.nav-left h2 {\r\n  margin: 0;\r\n  font-size: 1.2rem;\r\n  color: #333;\r\n}\r\n\r\n.nav-right {\r\n  gap: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.content-wrapper {\r\n  padding: 20px;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\nbutton {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n\r\n\r\n.logout-btn {\r\n  background-color: #f44336;\r\n}\r\n\r\n.logout-btn:hover {\r\n  background-color: #d32f2f;\r\n}\r\n\r\n.notification-btn {\r\n  background-color: #ff9800;\r\n  position: relative;\r\n}\r\n\r\n.notification-btn:hover {\r\n  background-color: #e68a00;\r\n}\r\n\r\n.notification-container {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.notification-dropdown {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 100%;\r\n  width: 300px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n  z-index: 1000;\r\n  text-align: left;\r\n  margin-top: 5px;\r\n}\r\n\r\n.notification-dropdown h3 {\r\n  margin-top: 0;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.pending-user {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.pending-user:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.approve-btn {\r\n  padding: 6px 12px;\r\n  font-size: 14px;\r\n}\r\n\r\n.no-pending {\r\n  padding: 10px;\r\n  color: #666;\r\n  font-style: italic;\r\n  text-align: center;\r\n}\r\n\r\n.dropdown-footer {\r\n  margin-top: 15px;\r\n  padding-top: 10px;\r\n  border-top: 1px solid #eee;\r\n  text-align: center;\r\n}\r\n\r\n.view-all-btn {\r\n  display: inline-block;\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.view-all-btn:hover {\r\n  background-color: #0056b3;\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\n.form-container {\r\n  background-color: #f2f2f2;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n  text-align: left;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n\r\n.success-message {\r\n  color: green;\r\n  margin-top: 10px;\r\n}\r\n\r\n.link {\r\n  color: #4CAF50;\r\n  text-decoration: none;\r\n  margin-top: 15px;\r\n  display: inline-block;\r\n}\r\n\r\n.link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}