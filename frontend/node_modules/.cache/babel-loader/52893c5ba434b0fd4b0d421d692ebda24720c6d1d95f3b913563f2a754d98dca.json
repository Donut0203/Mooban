{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"profile-container\"\n};\nconst _hoisted_2 = {\n  class: \"profile-card\"\n};\nconst _hoisted_3 = {\n  class: \"profile-header\"\n};\nconst _hoisted_4 = {\n  class: \"profile-photo\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"photo-container\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  key: 1,\n  class: \"photo-placeholder\"\n};\nconst _hoisted_8 = {\n  class: \"profile-form\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"error-text\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"error-text\"\n};\nconst _hoisted_13 = {\n  class: \"form-group\"\n};\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  class: \"form-group\"\n};\nconst _hoisted_17 = [\"value\"];\nconst _hoisted_18 = {\n  class: \"form-actions\"\n};\nconst _hoisted_19 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[15] || (_cache[15] = _createElementVNode(\"h1\", null, \"โปรไฟล์ของฉัน\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [$data.profilePictureUrl ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: $options.getFullImageUrl($data.profilePictureUrl),\n    alt: \"Profile Photo\",\n    onError: _cache[0] || (_cache[0] = (...args) => $options.handleImageError && $options.handleImageError(...args))\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_6)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($options.userInitial), 1 /* TEXT */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"photoInput\",\n    style: {\n      \"display\": \"none\"\n    },\n    accept: \"image/*\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.handleFileSelected && $options.handleFileSelected(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.triggerPhotoUpload && $options.triggerPhotoUpload(...args)),\n    class: \"upload-btn\"\n  }, \"อัปโหลดรูปภาพ\")])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    for: \"firstName\"\n  }, \"ชื่อ\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.userProfile.firstName = $event),\n    class: _normalizeClass({\n      'error': $data.errors.firstName\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, $data.userProfile.firstName]]), $data.errors.firstName ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, _toDisplayString($data.errors.firstName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_11, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"lastName\"\n  }, \"นามสกุล\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"lastName\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.userProfile.lastName = $event),\n    class: _normalizeClass({\n      'error': $data.errors.lastName\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, $data.userProfile.lastName]]), $data.errors.lastName ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, _toDisplayString($data.errors.lastName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_13, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"อีเมล\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.userProfile.email = $event),\n    disabled: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userProfile.email]])]), _createElementVNode(\"div\", _hoisted_14, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", {\n    for: \"phone\"\n  }, \"เบอร์โทรศัพท์\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    id: \"phone\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.userProfile.phone = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userProfile.phone]])]), _createElementVNode(\"div\", _hoisted_15, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", {\n    for: \"address\"\n  }, \"ที่อยู่\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    id: \"address\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.userProfile.address = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userProfile.address]])]), _createElementVNode(\"div\", _hoisted_16, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", {\n    for: \"status\"\n  }, \"สถานะ\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"status\",\n    value: $options.formatStatus($data.userProfile.status),\n    disabled: \"\"\n  }, null, 8 /* PROPS */, _hoisted_17)]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.saveProfile && $options.saveProfile(...args)),\n    class: \"save-btn\",\n    disabled: $data.isLoading\n  }, _toDisplayString($data.isLoading ? 'กำลังบันทึก...' : 'บันทึก'), 9 /* TEXT, PROPS */, _hoisted_19)])])]), $data.alert.show ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"alert\", 'alert-' + $data.alert.type])\n  }, _toDisplayString($data.alert.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","$data","profilePictureUrl","_hoisted_5","src","$options","getFullImageUrl","alt","onError","_cache","args","handleImageError","_hoisted_6","_hoisted_7","_toDisplayString","userInitial","type","ref","style","accept","onChange","handleFileSelected","onClick","triggerPhotoUpload","_hoisted_8","_hoisted_9","for","id","$event","userProfile","firstName","_normalizeClass","errors","_hoisted_10","_createCommentVNode","_hoisted_11","lastName","_hoisted_12","_hoisted_13","email","disabled","_hoisted_14","phone","_hoisted_15","address","_hoisted_16","value","formatStatus","status","_hoisted_17","_hoisted_18","saveProfile","isLoading","_hoisted_19","alert","show","message"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\ProfileViewSimple.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <h1>โปรไฟล์ของฉัน</h1>\r\n    \r\n    <div class=\"profile-card\">\r\n      <div class=\"profile-header\">\r\n        <div class=\"profile-photo\">\r\n          <div v-if=\"profilePictureUrl\" class=\"photo-container\">\r\n            <img :src=\"getFullImageUrl(profilePictureUrl)\" alt=\"Profile Photo\" @error=\"handleImageError\">\r\n          </div>\r\n          <div v-else class=\"photo-placeholder\">\r\n            {{ userInitial }}\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            ref=\"photoInput\"\r\n            style=\"display: none;\"\r\n            accept=\"image/*\"\r\n            @change=\"handleFileSelected\"\r\n          >\r\n          <button @click=\"triggerPhotoUpload\" class=\"upload-btn\">อัปโหลดรูปภาพ</button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"profile-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">ชื่อ</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"firstName\" \r\n            v-model=\"userProfile.firstName\" \r\n            :class=\"{ 'error': errors.firstName }\"\r\n          >\r\n          <span v-if=\"errors.firstName\" class=\"error-text\">{{ errors.firstName }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">นามสกุล</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"lastName\" \r\n            v-model=\"userProfile.lastName\" \r\n            :class=\"{ 'error': errors.lastName }\"\r\n          >\r\n          <span v-if=\"errors.lastName\" class=\"error-text\">{{ errors.lastName }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"email\">อีเมล</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            v-model=\"userProfile.email\" \r\n            disabled\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"phone\">เบอร์โทรศัพท์</label>\r\n          <input \r\n            type=\"tel\" \r\n            id=\"phone\" \r\n            v-model=\"userProfile.phone\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"address\">ที่อยู่</label>\r\n          <textarea \r\n            id=\"address\" \r\n            v-model=\"userProfile.address\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"status\">สถานะ</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"status\" \r\n            :value=\"formatStatus(userProfile.status)\" \r\n            disabled\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-actions\">\r\n          <button \r\n            @click=\"saveProfile\" \r\n            class=\"save-btn\" \r\n            :disabled=\"isLoading\"\r\n          >\r\n            {{ isLoading ? 'กำลังบันทึก...' : 'บันทึก' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"alert.show\" class=\"alert\" :class=\"'alert-' + alert.type\">\r\n      {{ alert.message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  name: 'ProfileViewSimple',\r\n  data() {\r\n    return {\r\n      userProfile: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        address: '',\r\n        status: ''\r\n      },\r\n      profilePictureUrl: null,\r\n      isLoading: false,\r\n      errors: {\r\n        firstName: '',\r\n        lastName: ''\r\n      },\r\n      alert: {\r\n        show: false,\r\n        message: '',\r\n        type: 'success'\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    userInitial() {\r\n      return this.userProfile.email ? this.userProfile.email.charAt(0).toUpperCase() : '?';\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUserProfile() {\r\n      try {\r\n        this.isLoading = true;\r\n        const response = await api.getUserProfile();\r\n        const userData = response.data.user;\r\n\r\n        this.userProfile = {\r\n          firstName: userData.first_name || '',\r\n          lastName: userData.last_name || '',\r\n          email: userData.user_email || '',\r\n          phone: userData.phone || '',\r\n          address: userData.address || '',\r\n          status: userData.status || ''\r\n        };\r\n\r\n        // First try to get from localStorage (base64 data) as it's most reliable\r\n        const storedPictureUrl = localStorage.getItem('profilePictureUrl');\r\n        if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n          this.profilePictureUrl = storedPictureUrl;\r\n          return;\r\n        }\r\n\r\n        // If no localStorage image, check if profile has an image\r\n        if (userData.profile_picture) {\r\n          // For external URLs (like randomuser.me), use directly\r\n          if (userData.profile_picture.startsWith('http')) {\r\n            this.profilePictureUrl = userData.profile_picture;\r\n          } else {\r\n            // For server URLs, add timestamp and full path\r\n            const timestamp = new Date().getTime();\r\n            const serverUrl = `http://localhost:5000${userData.profile_picture}?t=${timestamp}`;\r\n            this.profilePictureUrl = serverUrl;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user profile:', error);\r\n        this.showAlert('ไม่สามารถโหลดข้อมูลโปรไฟล์ได้ กรุณาลองใหม่อีกครั้ง', 'error');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    \r\n    validateForm() {\r\n      let isValid = true;\r\n      this.errors.firstName = '';\r\n      this.errors.lastName = '';\r\n      \r\n      if (!this.userProfile.firstName.trim()) {\r\n        this.errors.firstName = 'กรุณากรอกชื่อ';\r\n        isValid = false;\r\n      }\r\n      \r\n      if (!this.userProfile.lastName.trim()) {\r\n        this.errors.lastName = 'กรุณากรอกนามสกุล';\r\n        isValid = false;\r\n      }\r\n      \r\n      return isValid;\r\n    },\r\n    \r\n    async saveProfile() {\r\n      if (!this.validateForm()) {\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        this.isLoading = true;\r\n        \r\n        const response = await api.updateUserProfile({\r\n          firstName: this.userProfile.firstName,\r\n          lastName: this.userProfile.lastName,\r\n          phone: this.userProfile.phone,\r\n          address: this.userProfile.address\r\n        });\r\n        \r\n        console.log('Profile updated:', response.data);\r\n        this.showAlert('อัปเดตโปรไฟล์เรียบร้อยแล้ว', 'success');\r\n      } catch (error) {\r\n        console.error('Error updating profile:', error);\r\n        this.showAlert('ไม่สามารถอัปเดตโปรไฟล์ได้ กรุณาลองใหม่อีกครั้ง', 'error');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    \r\n    triggerPhotoUpload() {\r\n      // Trigger the file input click\r\n      this.$refs.photoInput.click();\r\n    },\r\n\r\n    async handleFileSelected(event) {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      // Validate file is an image\r\n      if (!file.type.startsWith('image/')) {\r\n        this.showAlert('กรุณาอัปโหลดไฟล์รูปภาพเท่านั้น', 'error');\r\n        return;\r\n      }\r\n\r\n      // Show file info for debugging\r\n      console.log('Selected file:', file.name, file.type, file.size);\r\n\r\n      // Show loading alert\r\n      this.showAlert('กำลังอัปโหลดรูปโปรไฟล์...', 'info');\r\n\r\n      // Convert file to base64\r\n      const reader = new FileReader();\r\n      reader.onload = async (e) => {\r\n        try {\r\n          const imageData = e.target.result;\r\n\r\n          // Show preview immediately\r\n          this.profilePictureUrl = imageData;\r\n\r\n          // Get user ID from localStorage\r\n          const userId = localStorage.getItem('userId');\r\n\r\n          // Upload the image data\r\n          const response = await fetch(`/api/auth/upload-profile-picture/${userId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ imageData })\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Profile picture uploaded:', data);\r\n\r\n            if (data.profilePictureUrl) {\r\n              // Keep using the base64 image data for display\r\n              // This ensures the image stays visible\r\n              localStorage.setItem('profilePictureUrl', imageData);\r\n\r\n              // Store the server URL for future page loads\r\n              localStorage.setItem('serverProfilePictureUrl', data.profilePictureUrl);\r\n            }\r\n\r\n            this.showAlert('อัปโหลดรูปโปรไฟล์เรียบร้อยแล้ว', 'success');\r\n\r\n            // Don't dispatch event or reload the page\r\n            // This prevents flickering and unnecessary reloads\r\n          } else {\r\n            const errorData = await response.json();\r\n            console.error('Failed to upload profile picture:', errorData);\r\n            this.showAlert(`ไม่สามารถอัปโหลดรูปโปรไฟล์ได้: ${errorData.message || response.statusText}`, 'error');\r\n\r\n            // Reset the file input so the user can try again\r\n            this.$refs.photoInput.value = '';\r\n          }\r\n        } catch (error) {\r\n          console.error('Error uploading profile picture:', error);\r\n          this.showAlert('ไม่สามารถอัปโหลดรูปโปรไฟล์ได้: ' + (error.message || 'เกิดข้อผิดพลาดที่ไม่ทราบสาเหตุ'), 'error');\r\n\r\n          // Reset the file input so the user can try again\r\n          this.$refs.photoInput.value = '';\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    },\r\n    \r\n    formatStatus(status) {\r\n      if (!status) return 'ไม่ทราบสถานะ';\r\n      \r\n      const statusMap = {\r\n        'headman': 'ผู้ใหญ่บ้าน',\r\n        'assistant': 'ผู้ช่วยผู้ใหญ่บ้าน',\r\n        'villager': 'ลูกบ้าน',\r\n        'pending': 'รอการอนุมัติ'\r\n      };\r\n      \r\n      return statusMap[status.toLowerCase()] || status.charAt(0).toUpperCase() + status.slice(1);\r\n    },\r\n    \r\n    showAlert(message, type = 'success') {\r\n      this.alert = {\r\n        show: true,\r\n        message,\r\n        type\r\n      };\r\n\r\n      // Hide alert after 3 seconds\r\n      setTimeout(() => {\r\n        this.alert.show = false;\r\n      }, 3000);\r\n    },\r\n\r\n    getFullImageUrl(url) {\r\n      if (!url) return '';\r\n\r\n      // If it's a data URL (base64), return as is\r\n      if (url.startsWith('data:')) {\r\n        return url;\r\n      }\r\n\r\n      // If it's a relative URL, prepend the API base URL\r\n      if (url.startsWith('/')) {\r\n        // Add a timestamp to prevent caching\r\n        const timestamp = new Date().getTime();\r\n        // Always use the full URL with localhost\r\n        return `http://localhost:5000${url}?t=${timestamp}`;\r\n      }\r\n\r\n      // If it's an https URL (like randomuser.me), return as is\r\n      if (url.startsWith('http')) {\r\n        return url;\r\n      }\r\n\r\n      // Otherwise, return the URL as is\r\n      return url;\r\n    },\r\n\r\n    handleImageError(e) {\r\n      console.error('Error loading image:', e);\r\n      console.log('Failed image URL:', e.target.src);\r\n\r\n      // Try to load the image directly from the server\r\n      const url = e.target.src;\r\n      if (url.includes('/uploads/')) {\r\n        const imagePath = url.split('?')[0]; // Remove query parameters\r\n        const newUrl = `http://localhost:5000${imagePath.substring(imagePath.indexOf('/uploads/'))}`;\r\n        console.log('Trying alternative URL:', newUrl);\r\n        e.target.src = newUrl;\r\n        return;\r\n      }\r\n\r\n      // Try to use stored base64 image if available\r\n      const storedPictureUrl = localStorage.getItem('profilePictureUrl');\r\n      if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n        console.log('Using stored base64 image');\r\n        this.profilePictureUrl = storedPictureUrl;\r\n        return;\r\n      }\r\n\r\n      // If all else fails, fall back to placeholder\r\n      this.profilePictureUrl = null;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUserProfile();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.profile-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.profile-header {\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: #f5f5f5;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.profile-photo {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.photo-container {\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 15px;\r\n  border: 3px solid white;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.photo-container img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.photo-placeholder {\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n  background-color: #e0e0e0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 48px;\r\n  font-weight: bold;\r\n  color: #757575;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.upload-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.profile-form {\r\n  padding: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\ninput, textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput.error {\r\n  border-color: #d32f2f;\r\n}\r\n\r\n.error-text {\r\n  color: #d32f2f;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  display: block;\r\n}\r\n\r\ntextarea {\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\ninput:disabled, textarea:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.save-btn:disabled {\r\n  background-color: #9e9e9e;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.alert {\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n.alert-success {\r\n  background-color: #dff0d8;\r\n  color: #3c763d;\r\n  border: 1px solid #d6e9c6;\r\n}\r\n\r\n.alert-error {\r\n  background-color: #f2dede;\r\n  color: #a94442;\r\n  border: 1px solid #ebccd1;\r\n}\r\n\r\n.alert-info {\r\n  background-color: #d9edf7;\r\n  color: #31708f;\r\n  border: 1px solid #bce8f1;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}