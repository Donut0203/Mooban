{"ast":null,"code":"import api from '@/services/api';\nexport default {\n  name: 'AdminView',\n  data() {\n    return {\n      userStats: {\n        total: 0,\n        pending: 0,\n        headman: 0,\n        assistant: 0,\n        villager: 0\n      },\n      isLoading: false\n    };\n  },\n  methods: {\n    async fetchUserStats() {\n      this.isLoading = true;\n      try {\n        // In a real app, you would fetch this data from the API\n        // For now, we'll use mock data or calculate from getAllUsers\n        const response = await api.getAllUsers();\n        const users = response.data.users || [];\n\n        // Calculate stats\n        this.userStats.total = users.length;\n        this.userStats.pending = users.filter(user => user.status === 'pending' || !user.is_approved).length;\n        this.userStats.headman = users.filter(user => user.status === 'headman').length;\n        this.userStats.assistant = users.filter(user => user.status === 'assistant').length;\n        this.userStats.villager = users.filter(user => user.status === 'villager').length;\n      } catch (error) {\n        console.error('Error fetching user stats:', error);\n        // Use mock data as fallback\n        this.userStats = {\n          total: 5,\n          pending: 2,\n          headman: 1,\n          assistant: 1,\n          villager: 1\n        };\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  },\n  mounted() {\n    this.fetchUserStats();\n  }\n};","map":{"version":3,"names":["api","name","data","userStats","total","pending","headman","assistant","villager","isLoading","methods","fetchUserStats","response","getAllUsers","users","length","filter","user","status","is_approved","error","console","mounted"],"sources":["C:\\Users\\ADMIN\\Mooban\\frontend\\src\\views\\AdminView.vue"],"sourcesContent":["<template>\r\n  <div class=\"admin-container\">\r\n    <h1>‡∏´‡∏ô‡πâ‡∏≤‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö</h1>\r\n    \r\n    <div class=\"admin-card\">\r\n      <h2>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</h2>\r\n      <p>‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏∞‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ö‡πâ‡∏≤‡∏ô ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>\r\n      \r\n      <div class=\"admin-actions\">\r\n        <router-link to=\"/pending-users\" class=\"admin-btn pending-btn\">\r\n          <div class=\"btn-icon\">üîî</div>\r\n          <div class=\"btn-text\">\r\n            <h3>‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</h3>\r\n            <p>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà</p>\r\n          </div>\r\n        </router-link>\r\n        \r\n        <router-link to=\"/all-users\" class=\"admin-btn users-btn\">\r\n          <div class=\"btn-icon\">üë•</div>\r\n          <div class=\"btn-text\">\r\n            <h3>‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>\r\n            <p>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</p>\r\n          </div>\r\n        </router-link>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"admin-card\">\r\n      <h2>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏∞‡∏ö‡∏ö</h2>\r\n      <div class=\"stats-container\">\r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-value\">{{ userStats.total }}</div>\r\n          <div class=\"stat-label\">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</div>\r\n        </div>\r\n        \r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-value\">{{ userStats.pending }}</div>\r\n          <div class=\"stat-label\">‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥</div>\r\n        </div>\r\n        \r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-value\">{{ userStats.headman }}</div>\r\n          <div class=\"stat-label\">‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ö‡πâ‡∏≤‡∏ô</div>\r\n        </div>\r\n        \r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-value\">{{ userStats.assistant }}</div>\r\n          <div class=\"stat-label\">‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ú‡∏π‡πâ‡πÉ‡∏´‡∏ç‡πà‡∏ö‡πâ‡∏≤‡∏ô</div>\r\n        </div>\r\n        \r\n        <div class=\"stat-item\">\r\n          <div class=\"stat-value\">{{ userStats.villager }}</div>\r\n          <div class=\"stat-label\">‡∏•‡∏π‡∏Å‡∏ö‡πâ‡∏≤‡∏ô</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  name: 'AdminView',\r\n  data() {\r\n    return {\r\n      userStats: {\r\n        total: 0,\r\n        pending: 0,\r\n        headman: 0,\r\n        assistant: 0,\r\n        villager: 0\r\n      },\r\n      isLoading: false\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchUserStats() {\r\n      this.isLoading = true;\r\n      try {\r\n        // In a real app, you would fetch this data from the API\r\n        // For now, we'll use mock data or calculate from getAllUsers\r\n        const response = await api.getAllUsers();\r\n        const users = response.data.users || [];\r\n        \r\n        // Calculate stats\r\n        this.userStats.total = users.length;\r\n        this.userStats.pending = users.filter(user => user.status === 'pending' || !user.is_approved).length;\r\n        this.userStats.headman = users.filter(user => user.status === 'headman').length;\r\n        this.userStats.assistant = users.filter(user => user.status === 'assistant').length;\r\n        this.userStats.villager = users.filter(user => user.status === 'villager').length;\r\n      } catch (error) {\r\n        console.error('Error fetching user stats:', error);\r\n        // Use mock data as fallback\r\n        this.userStats = {\r\n          total: 5,\r\n          pending: 2,\r\n          headman: 1,\r\n          assistant: 1,\r\n          villager: 1\r\n        };\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUserStats();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.admin-container {\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  margin-bottom: 30px;\r\n  color: #333;\r\n  text-align: center;\r\n}\r\n\r\n.admin-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\nh2 {\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n.admin-actions {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.admin-btn {\r\n  flex: 1;\r\n  min-width: 250px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  text-decoration: none;\r\n  color: white;\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.admin-btn:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.pending-btn {\r\n  background-color: #ff9800;\r\n}\r\n\r\n.users-btn {\r\n  background-color: #2196F3;\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 36px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.btn-text h3 {\r\n  margin: 0 0 5px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.btn-text p {\r\n  margin: 0;\r\n  font-size: 14px;\r\n  opacity: 0.9;\r\n}\r\n\r\n.stats-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n  justify-content: space-between;\r\n}\r\n\r\n.stat-item {\r\n  flex: 1;\r\n  min-width: 120px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  text-align: center;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.stat-value {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .admin-actions {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .admin-btn {\r\n    width: 100%;\r\n  }\r\n  \r\n  .stats-container {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .stat-item {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>"],"mappings":"AA4DA,OAAOA,GAAE,MAAO,gBAAgB;AAEhC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE,CAAC;QACVC,OAAO,EAAE,CAAC;QACVC,SAAS,EAAE,CAAC;QACZC,QAAQ,EAAE;MACZ,CAAC;MACDC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,CAACF,SAAQ,GAAI,IAAI;MACrB,IAAI;QACF;QACA;QACA,MAAMG,QAAO,GAAI,MAAMZ,GAAG,CAACa,WAAW,CAAC,CAAC;QACxC,MAAMC,KAAI,GAAIF,QAAQ,CAACV,IAAI,CAACY,KAAI,IAAK,EAAE;;QAEvC;QACA,IAAI,CAACX,SAAS,CAACC,KAAI,GAAIU,KAAK,CAACC,MAAM;QACnC,IAAI,CAACZ,SAAS,CAACE,OAAM,GAAIS,KAAK,CAACE,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAK,KAAM,SAAQ,IAAK,CAACD,IAAI,CAACE,WAAW,CAAC,CAACJ,MAAM;QACpG,IAAI,CAACZ,SAAS,CAACG,OAAM,GAAIQ,KAAK,CAACE,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAK,KAAM,SAAS,CAAC,CAACH,MAAM;QAC/E,IAAI,CAACZ,SAAS,CAACI,SAAQ,GAAIO,KAAK,CAACE,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAK,KAAM,WAAW,CAAC,CAACH,MAAM;QACnF,IAAI,CAACZ,SAAS,CAACK,QAAO,GAAIM,KAAK,CAACE,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,MAAK,KAAM,UAAU,CAAC,CAACH,MAAM;MACnF,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClD;QACA,IAAI,CAACjB,SAAQ,GAAI;UACfC,KAAK,EAAE,CAAC;UACRC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,CAAC;UACVC,SAAS,EAAE,CAAC;UACZC,QAAQ,EAAE;QACZ,CAAC;MACH,UAAU;QACR,IAAI,CAACC,SAAQ,GAAI,KAAK;MACxB;IACF;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAACX,cAAc,CAAC,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}