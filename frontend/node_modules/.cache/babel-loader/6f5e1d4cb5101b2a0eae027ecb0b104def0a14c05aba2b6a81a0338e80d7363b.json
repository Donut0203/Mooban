{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"home\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"user-info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"Welcome to Your App\", -1 /* HOISTED */)), $options.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"User Information\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"User ID:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.userId), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Email:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.userEmail), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$options","user","_hoisted_2","_createTextVNode","_toDisplayString","$data","userId","userEmail","_createCommentVNode"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"home\">\r\n    <h1>Welcome to Your App</h1>\r\n    <div class=\"user-info\" v-if=\"user\">\r\n      <h2>User Information</h2>\r\n      <p><strong>User ID:</strong> {{ userId }}</p>\r\n      <p><strong>Email:</strong> {{ userEmail }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'HomeView',\r\n  data() {\r\n    return {\r\n      userId: localStorage.getItem('userId') || '',\r\n      userEmail: ''\r\n    }\r\n  },\r\n  computed: {\r\n    user() {\r\n      return this.userId ? true : false;\r\n    }\r\n  },\r\n  mounted() {\r\n    // In a real application, you would fetch user details from the backend here\r\n    // For this example, we're just using the stored userId\r\n    if (this.userId) {\r\n      // Simulate getting user email - in a real app you would fetch this from the backend\r\n      this.userEmail = localStorage.getItem('email') || 'User is logged in';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.home {\r\n  padding: 20px;\r\n}\r\n\r\n.user-info {\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n  text-align: left;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAM;;EADnBC,GAAA;EAGSD,KAAK,EAAC;;;uBAFbE,mBAAA,CAOM,OAPNC,UAOM,G,0BANJC,mBAAA,CAA4B,YAAxB,qBAAmB,sBACMC,QAAA,CAAAC,IAAI,I,cAAjCJ,mBAAA,CAIM,OAJNK,UAIM,G,0BAHJH,mBAAA,CAAyB,YAArB,kBAAgB,sBACpBA,mBAAA,CAA6C,Y,0BAA1CA,mBAAA,CAAyB,gBAAjB,UAAQ,sBALzBI,gBAAA,CAKkC,GAAC,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,MAAM,iB,GACtCP,mBAAA,CAA8C,Y,0BAA3CA,mBAAA,CAAuB,gBAAf,QAAM,sBANvBI,gBAAA,CAMgC,GAAC,GAAAC,gBAAA,CAAGC,KAAA,CAAAE,SAAS,iB,OAN7CC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}