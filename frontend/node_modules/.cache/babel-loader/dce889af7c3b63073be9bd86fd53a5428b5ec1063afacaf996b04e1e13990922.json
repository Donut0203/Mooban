{"ast":null,"code":"import api from '@/services/api';\nexport default {\n  data() {\n    return {\n      members: [],\n      selectedMemberId: '',\n      memberData: null,\n      memberBalance: {\n        deposit_balance: 0,\n        loan_balance: 0\n      },\n      memberLoans: [],\n      transactionType: '',\n      amount: '',\n      selectedLoanId: '',\n      transactions: [],\n      transactionFilter: 'all',\n      // เพิ่มตัวกรองประเภทธุรกรรม: 'all', 'deposit', 'loan'\n      showResultModal: false,\n      resultModalTitle: '',\n      resultMessage: '',\n      isSuccess: true,\n      updatedBalance: 0\n    };\n  },\n  computed: {\n    canWithdraw() {\n      return this.memberBalance && this.memberBalance.deposit_balance > 0;\n    },\n    hasLoans() {\n      return this.memberBalance && this.memberBalance.loan_balance > 0;\n    },\n    totalLoanAmount() {\n      if (!this.memberLoans || this.memberLoans.length === 0) {\n        return 0;\n      }\n\n      // Calculate total loan amount (principal + interest)\n      const principal = this.memberBalance.loan_balance || 0;\n      const monthlyInterest = principal * 0.01; // 1% monthly interest\n      const totalInterest = monthlyInterest * 12; // 12 months\n      return principal + totalInterest;\n    },\n    // กรองธุรกรรมตามประเภท\n    filteredTransactions() {\n      if (this.transactionFilter === 'all') {\n        return this.transactions.filter(t => t.transaction_status === 'deposit' || t.transaction_status === 'withdraw');\n      } else if (this.transactionFilter === 'deposit') {\n        return this.transactions.filter(t => t.transaction_status === 'deposit' || t.transaction_status === 'withdraw');\n      }\n      return this.transactions.filter(t => t.transaction_status === 'deposit' || t.transaction_status === 'withdraw');\n    }\n  },\n  mounted() {\n    this.fetchMembers().then(() => {\n      // ตรวจสอบ URL parameters\n      const urlParams = new URLSearchParams(window.location.search);\n      const memberIdParam = urlParams.get('member_id');\n\n      // ถ้ามีการส่ง member_id มาจากหน้าอื่น\n      if (memberIdParam) {\n        // ตั้งค่า selectedMemberId และโหลดข้อมูล\n        this.selectedMemberId = memberIdParam;\n        this.loadMemberData();\n      }\n    });\n  },\n  methods: {\n    async fetchMembers() {\n      try {\n        const response = await api.getMembers();\n        this.members = response.data;\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching members:', error);\n        alert('ไม่สามารถดึงข้อมูลสมาชิกได้');\n        return [];\n      }\n    },\n    async loadMemberData() {\n      if (!this.selectedMemberId) {\n        this.resetForm();\n        return;\n      }\n      try {\n        // ดึงข้อมูลสมาชิก\n        const memberResponse = await api.getMemberById(this.selectedMemberId);\n        this.memberData = memberResponse.data;\n\n        // ดึงข้อมูลยอดเงิน\n        const balanceResponse = await api.getMemberBalance(this.selectedMemberId);\n        this.memberBalance = balanceResponse.data;\n\n        // ดึงข้อมูลเงินกู้\n        const loansResponse = await api.getLoans();\n        this.memberLoans = loansResponse.data.filter(loan => loan.member_id === parseInt(this.selectedMemberId));\n\n        // ตรวจสอบว่ามีข้อมูลเงินกู้หรือไม่\n        console.log('Member loans:', this.memberLoans);\n\n        // ดึงประวัติธุรกรรม\n        const transactionsResponse = await api.getMemberTransactions(this.selectedMemberId);\n        this.transactions = transactionsResponse.data;\n\n        // รีเซ็ตฟอร์ม\n        this.resetTransactionForm();\n\n        // ตรวจสอบ URL parameters\n        const urlParams = new URLSearchParams(window.location.search);\n        const memberIdParam = urlParams.get('member_id');\n\n        // ถ้ามีการส่ง member_id มาจากหน้าอื่น และตรงกับที่เลือก\n        if (memberIdParam && memberIdParam === this.selectedMemberId) {\n          // ลบ parameter จาก URL โดยไม่ reload หน้า\n          const newUrl = window.location.pathname;\n          window.history.replaceState({}, document.title, newUrl);\n        }\n      } catch (error) {\n        console.error('Error loading member data:', error);\n        alert('ไม่สามารถโหลดข้อมูลสมาชิกได้');\n      }\n    },\n    selectTransactionType(type) {\n      this.transactionType = type;\n      this.amount = '';\n      this.selectedLoanId = '';\n    },\n    getTransactionTypeTitle() {\n      switch (this.transactionType) {\n        case 'deposit':\n          return 'ฝากเงิน';\n        case 'withdraw':\n          return 'ถอนเงิน';\n        default:\n          return '';\n      }\n    },\n    formatAddress(member) {\n      if (!member) return '';\n      const parts = [member.address_line1, member.subdistrict, member.district, member.province, member.postal_code].filter(part => part && part.trim() !== '');\n      return parts.join(' ');\n    },\n    formatCurrency(value) {\n      if (value === undefined || value === null) return '0.00 บาท';\n      return new Intl.NumberFormat('th-TH', {\n        style: 'currency',\n        currency: 'THB',\n        minimumFractionDigits: 2\n      }).format(value);\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('th-TH', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    formatTransactionType(type) {\n      switch (type) {\n        case 'deposit':\n          return 'ฝากเงิน';\n        case 'withdraw':\n          return 'ถอนเงิน';\n        default:\n          return type;\n      }\n    },\n    getAmountClass(type) {\n      switch (type) {\n        case 'deposit':\n          return 'amount-positive';\n        case 'withdraw':\n          return 'amount-negative';\n        default:\n          return '';\n      }\n    },\n    async submitDeposit() {\n      if (!this.selectedMemberId || !this.amount || this.amount <= 0) {\n        alert('กรุณากรอกข้อมูลให้ครบถ้วน');\n        return;\n      }\n      try {\n        const response = await api.depositMoney({\n          member_id: this.selectedMemberId,\n          amount: parseFloat(this.amount)\n        });\n        this.showSuccessResult('ฝากเงินสำเร็จ', `ฝากเงินจำนวน ${this.formatCurrency(this.amount)} เรียบร้อยแล้ว`, response.data.current_balance);\n\n        // รีเฟรชข้อมูล\n        this.loadMemberData();\n      } catch (error) {\n        console.error('Error depositing money:', error);\n        this.showErrorResult('เกิดข้อผิดพลาด', 'ไม่สามารถฝากเงินได้ กรุณาลองใหม่อีกครั้ง');\n      }\n    },\n    async submitWithdraw() {\n      if (!this.selectedMemberId || !this.amount || this.amount <= 0) {\n        alert('กรุณากรอกข้อมูลให้ครบถ้วน');\n        return;\n      }\n      if (parseFloat(this.amount) > this.memberBalance.deposit_balance) {\n        alert('จำนวนเงินที่ต้องการถอนมากกว่ายอดเงินคงเหลือ');\n        return;\n      }\n      try {\n        const response = await api.withdrawMoney({\n          member_id: this.selectedMemberId,\n          amount: parseFloat(this.amount)\n        });\n        this.showSuccessResult('ถอนเงินสำเร็จ', `ถอนเงินจำนวน ${this.formatCurrency(this.amount)} เรียบร้อยแล้ว`, response.data.current_balance);\n\n        // รีเฟรชข้อมูล\n        this.loadMemberData();\n      } catch (error) {\n        console.error('Error withdrawing money:', error);\n        let errorMessage = 'ไม่สามารถถอนเงินได้ กรุณาลองใหม่อีกครั้ง';\n        if (error.response && error.response.data && error.response.data.message) {\n          errorMessage = error.response.data.message;\n        }\n        this.showErrorResult('เกิดข้อผิดพลาด', errorMessage);\n      }\n    },\n    showSuccessResult(title, message, balance) {\n      this.resultModalTitle = title;\n      this.resultMessage = message;\n      this.isSuccess = true;\n      this.updatedBalance = balance;\n      this.showResultModal = true;\n    },\n    showErrorResult(title, message) {\n      this.resultModalTitle = title;\n      this.resultMessage = message;\n      this.isSuccess = false;\n      this.showResultModal = true;\n    },\n    closeResultModal() {\n      this.showResultModal = false;\n      this.resetTransactionForm();\n    },\n    resetTransactionForm() {\n      this.transactionType = '';\n      this.amount = '';\n      this.selectedLoanId = '';\n    },\n    resetForm() {\n      this.memberData = null;\n      this.memberBalance = {\n        deposit_balance: 0,\n        loan_balance: 0\n      };\n      this.memberLoans = [];\n      this.transactions = [];\n      this.resetTransactionForm();\n    }\n  }\n};","map":{"version":3,"names":["api","data","members","selectedMemberId","memberData","memberBalance","deposit_balance","loan_balance","memberLoans","transactionType","amount","selectedLoanId","transactions","transactionFilter","showResultModal","resultModalTitle","resultMessage","isSuccess","updatedBalance","computed","canWithdraw","hasLoans","totalLoanAmount","length","principal","monthlyInterest","totalInterest","filteredTransactions","filter","t","transaction_status","mounted","fetchMembers","then","urlParams","URLSearchParams","window","location","search","memberIdParam","get","loadMemberData","methods","response","getMembers","error","console","alert","resetForm","memberResponse","getMemberById","balanceResponse","getMemberBalance","loansResponse","getLoans","loan","member_id","parseInt","log","transactionsResponse","getMemberTransactions","resetTransactionForm","newUrl","pathname","history","replaceState","document","title","selectTransactionType","type","getTransactionTypeTitle","formatAddress","member","parts","address_line1","subdistrict","district","province","postal_code","part","trim","join","formatCurrency","value","undefined","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","dateString","date","Date","toLocaleDateString","year","month","day","hour","minute","formatTransactionType","getAmountClass","submitDeposit","depositMoney","parseFloat","showSuccessResult","current_balance","showErrorResult","submitWithdraw","withdrawMoney","errorMessage","message","balance","closeResultModal"],"sources":["C:\\Users\\HP\\Documents\\GitHub\\Mooban\\frontend\\src\\views\\TransactionForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"transaction-container\">\r\n    <h1>ระบบฝาก-ถอนเงิน</h1>\r\n    \r\n    <!-- เลือกสมาชิก -->\r\n    <div class=\"member-selection\">\r\n      <h2>เลือกสมาชิก</h2>\r\n      <div class=\"form-group\">\r\n        <label for=\"member_id\">สมาชิก *</label>\r\n        <select v-model=\"selectedMemberId\" id=\"member_id\" @change=\"loadMemberData\" required>\r\n          <option value=\"\">-- เลือกสมาชิก --</option>\r\n          <option v-for=\"member in members\" :key=\"member.member_id\" :value=\"member.member_id\">\r\n            {{ member.first_name }} {{ member.last_name }} (ID: {{ member.member_id }})\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- แสดงข้อมูลสมาชิกและยอดเงิน -->\r\n    <div v-if=\"selectedMemberId && memberData\" class=\"member-info\">\r\n      <div class=\"info-card\">\r\n        <h3>ข้อมูลสมาชิก</h3>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">ชื่อ-นามสกุล:</div>\r\n          <div class=\"info-value\">{{ memberData.first_name }} {{ memberData.last_name }}</div>\r\n        </div>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">เบอร์โทรศัพท์:</div>\r\n          <div class=\"info-value\">{{ memberData.phone || '-' }}</div>\r\n        </div>\r\n        <div class=\"info-row\">\r\n          <div class=\"info-label\">ที่อยู่:</div>\r\n          <div class=\"info-value\">{{ formatAddress(memberData) }}</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"balance-card\">\r\n        <h3>ยอดเงินปัจจุบัน</h3>\r\n        <div class=\"balance-row\">\r\n          <div class=\"balance-label\">ยอดเงินฝาก:</div>\r\n          <div class=\"balance-value deposit\">{{ formatCurrency(memberBalance.deposit_balance || 0) }}</div>\r\n        </div>\r\n        <div class=\"balance-row\">\r\n          <div class=\"balance-label\">ยอดเงินกู้คงเหลือ:</div>\r\n          <div class=\"balance-value loan\">{{ formatCurrency(memberBalance.loan_balance || 0) }}</div>\r\n        </div>\r\n        <div class=\"balance-row\" v-if=\"totalLoanAmount > 0\">\r\n          <div class=\"balance-label\">ยอดเงินรวม (เงินต้น+ดอกเบี้ย):</div>\r\n          <div class=\"balance-value loan\">{{ formatCurrency(totalLoanAmount) }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- เลือกประเภทธุรกรรม -->\r\n    <div v-if=\"selectedMemberId\" class=\"transaction-type-selection\">\r\n      <h2>เลือกประเภทธุรกรรม</h2>\r\n      <div class=\"transaction-types\">\r\n        <div \r\n          class=\"transaction-type-card\" \r\n          :class=\"{ active: transactionType === 'deposit' }\"\r\n          @click=\"selectTransactionType('deposit')\"\r\n        >\r\n          <div class=\"icon\">💰</div>\r\n          <div class=\"label\">ฝากเงิน</div>\r\n        </div>\r\n        <div \r\n          class=\"transaction-type-card\" \r\n          :class=\"{ active: transactionType === 'withdraw', disabled: !canWithdraw }\"\r\n          @click=\"canWithdraw && selectTransactionType('withdraw')\"\r\n        >\r\n          <div class=\"icon\">💸</div>\r\n          <div class=\"label\">ถอนเงิน</div>\r\n          <div v-if=\"!canWithdraw\" class=\"disabled-message\">ยอดเงินไม่เพียงพอ</div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- ฟอร์มทำธุรกรรม -->\r\n    <div v-if=\"transactionType\" class=\"transaction-form\">\r\n      <h2>{{ getTransactionTypeTitle() }}</h2>\r\n      \r\n      <!-- ฟอร์มฝากเงิน -->\r\n      <form v-if=\"transactionType === 'deposit'\" @submit.prevent=\"submitDeposit\" class=\"form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"deposit_amount\">จำนวนเงินฝาก (บาท) *</label>\r\n          <input \r\n            type=\"number\" \r\n            id=\"deposit_amount\" \r\n            v-model=\"amount\" \r\n            min=\"1\" \r\n            step=\"0.01\" \r\n            required\r\n            placeholder=\"กรุณาระบุจำนวนเงิน\"\r\n          >\r\n        </div>\r\n        <div class=\"form-actions\">\r\n          <button type=\"button\" class=\"btn-cancel\" @click=\"resetForm\">ยกเลิก</button>\r\n          <button type=\"submit\" class=\"btn-submit\">ยืนยันการฝากเงิน</button>\r\n        </div>\r\n      </form>\r\n      \r\n      <!-- ฟอร์มถอนเงิน -->\r\n      <form v-if=\"transactionType === 'withdraw'\" @submit.prevent=\"submitWithdraw\" class=\"form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"withdraw_amount\">จำนวนเงินถอน (บาท) *</label>\r\n          <input \r\n            type=\"number\" \r\n            id=\"withdraw_amount\" \r\n            v-model=\"amount\" \r\n            min=\"1\" \r\n            :max=\"memberBalance.deposit_balance\" \r\n            step=\"0.01\" \r\n            required\r\n            placeholder=\"กรุณาระบุจำนวนเงิน\"\r\n          >\r\n          <div class=\"hint\">ยอดเงินสูงสุดที่ถอนได้: {{ formatCurrency(memberBalance.deposit_balance) }}</div>\r\n        </div>\r\n        <div class=\"form-actions\">\r\n          <button type=\"button\" class=\"btn-cancel\" @click=\"resetForm\">ยกเลิก</button>\r\n          <button type=\"submit\" class=\"btn-submit\">ยืนยันการถอนเงิน</button>\r\n        </div>\r\n      </form>\r\n      \r\n\r\n    </div>\r\n    \r\n    <!-- ประวัติธุรกรรม -->\r\n    <div v-if=\"selectedMemberId && transactions.length > 0\" class=\"transaction-history\">\r\n      <h2>ประวัติธุรกรรม</h2>\r\n\r\n      <!-- แท็บเลือกประเภทธุรกรรม -->\r\n      <div class=\"transaction-tabs\">\r\n        <button\r\n          class=\"tab-button\"\r\n          :class=\"{ active: transactionFilter === 'all' }\"\r\n          @click=\"transactionFilter = 'all'\"\r\n        >\r\n          ทั้งหมด\r\n        </button>\r\n        <button\r\n          class=\"tab-button\"\r\n          :class=\"{ active: transactionFilter === 'deposit' }\"\r\n          @click=\"transactionFilter = 'deposit'\"\r\n        >\r\n          ฝาก-ถอน\r\n        </button>\r\n\r\n      </div>\r\n\r\n      <table class=\"transaction-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>วันที่</th>\r\n            <th>ประเภท</th>\r\n            <th>จำนวนเงิน</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"transaction in filteredTransactions\" :key=\"transaction.transaction_id\">\r\n            <td>{{ formatDate(transaction.transaction_date) }}</td>\r\n            <td>{{ formatTransactionType(transaction.transaction_status) }}</td>\r\n            <td :class=\"getAmountClass(transaction.transaction_status)\">\r\n              {{ formatCurrency(transaction.amount) }}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div v-if=\"filteredTransactions.length === 0\" class=\"no-transactions\">\r\n        ไม่พบรายการธุรกรรมในประเภทที่เลือก\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Modal แสดงผลการทำรายการ -->\r\n    <div v-if=\"showResultModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h2>{{ resultModalTitle }}</h2>\r\n          <span class=\"close\" @click=\"showResultModal = false\">&times;</span>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"result-message\" :class=\"{ success: isSuccess, error: !isSuccess }\">\r\n            {{ resultMessage }}\r\n          </div>\r\n          <div v-if=\"isSuccess\" class=\"balance-update\">\r\n            <div v-if=\"resultModalTitle.includes('ฝากเงิน') || resultModalTitle.includes('ถอนเงิน')\" class=\"balance-row\">\r\n              <div class=\"balance-label\">ยอดเงินฝากปัจจุบัน:</div>\r\n              <div class=\"balance-value deposit\">{{ formatCurrency(updatedBalance) }}</div>\r\n            </div>\r\n            <div v-if=\"resultModalTitle.includes('ชำระเงินกู้') || resultModalTitle.includes('รับเงินกู้')\" class=\"balance-row\">\r\n              <div class=\"balance-label\">ยอดเงินกู้คงเหลือ:</div>\r\n              <div class=\"balance-value loan\">{{ formatCurrency(updatedBalance) }}</div>\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-actions\">\r\n            <button class=\"btn-close\" @click=\"closeResultModal\">ปิด</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      members: [],\r\n      selectedMemberId: '',\r\n      memberData: null,\r\n      memberBalance: {\r\n        deposit_balance: 0,\r\n        loan_balance: 0\r\n      },\r\n      memberLoans: [],\r\n      transactionType: '',\r\n      amount: '',\r\n      selectedLoanId: '',\r\n      transactions: [],\r\n      transactionFilter: 'all', // เพิ่มตัวกรองประเภทธุรกรรม: 'all', 'deposit', 'loan'\r\n      showResultModal: false,\r\n      resultModalTitle: '',\r\n      resultMessage: '',\r\n      isSuccess: true,\r\n      updatedBalance: 0\r\n    };\r\n  },\r\n  computed: {\r\n    canWithdraw() {\r\n      return this.memberBalance && this.memberBalance.deposit_balance > 0;\r\n    },\r\n    hasLoans() {\r\n      return this.memberBalance && this.memberBalance.loan_balance > 0;\r\n    },\r\n    totalLoanAmount() {\r\n      if (!this.memberLoans || this.memberLoans.length === 0) {\r\n        return 0;\r\n      }\r\n\r\n      // Calculate total loan amount (principal + interest)\r\n      const principal = this.memberBalance.loan_balance || 0;\r\n      const monthlyInterest = principal * 0.01; // 1% monthly interest\r\n      const totalInterest = monthlyInterest * 12; // 12 months\r\n      return principal + totalInterest;\r\n    },\r\n    // กรองธุรกรรมตามประเภท\r\n    filteredTransactions() {\r\n      if (this.transactionFilter === 'all') {\r\n        return this.transactions.filter(t =>\r\n          t.transaction_status === 'deposit' || t.transaction_status === 'withdraw'\r\n        );\r\n      } else if (this.transactionFilter === 'deposit') {\r\n        return this.transactions.filter(t =>\r\n          t.transaction_status === 'deposit' || t.transaction_status === 'withdraw'\r\n        );\r\n      }\r\n      return this.transactions.filter(t =>\r\n        t.transaction_status === 'deposit' || t.transaction_status === 'withdraw'\r\n      );\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchMembers().then(() => {\r\n      // ตรวจสอบ URL parameters\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const memberIdParam = urlParams.get('member_id');\r\n\r\n      // ถ้ามีการส่ง member_id มาจากหน้าอื่น\r\n      if (memberIdParam) {\r\n        // ตั้งค่า selectedMemberId และโหลดข้อมูล\r\n        this.selectedMemberId = memberIdParam;\r\n        this.loadMemberData();\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    async fetchMembers() {\r\n      try {\r\n        const response = await api.getMembers();\r\n        this.members = response.data;\r\n        return response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching members:', error);\r\n        alert('ไม่สามารถดึงข้อมูลสมาชิกได้');\r\n        return [];\r\n      }\r\n    },\r\n    async loadMemberData() {\r\n      if (!this.selectedMemberId) {\r\n        this.resetForm();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // ดึงข้อมูลสมาชิก\r\n        const memberResponse = await api.getMemberById(this.selectedMemberId);\r\n        this.memberData = memberResponse.data;\r\n\r\n        // ดึงข้อมูลยอดเงิน\r\n        const balanceResponse = await api.getMemberBalance(this.selectedMemberId);\r\n        this.memberBalance = balanceResponse.data;\r\n\r\n        // ดึงข้อมูลเงินกู้\r\n        const loansResponse = await api.getLoans();\r\n        this.memberLoans = loansResponse.data.filter(loan =>\r\n          loan.member_id === parseInt(this.selectedMemberId)\r\n        );\r\n\r\n        // ตรวจสอบว่ามีข้อมูลเงินกู้หรือไม่\r\n        console.log('Member loans:', this.memberLoans);\r\n\r\n        // ดึงประวัติธุรกรรม\r\n        const transactionsResponse = await api.getMemberTransactions(this.selectedMemberId);\r\n        this.transactions = transactionsResponse.data;\r\n\r\n        // รีเซ็ตฟอร์ม\r\n        this.resetTransactionForm();\r\n\r\n        // ตรวจสอบ URL parameters\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const memberIdParam = urlParams.get('member_id');\r\n\r\n        // ถ้ามีการส่ง member_id มาจากหน้าอื่น และตรงกับที่เลือก\r\n        if (memberIdParam && memberIdParam === this.selectedMemberId) {\r\n          // ลบ parameter จาก URL โดยไม่ reload หน้า\r\n          const newUrl = window.location.pathname;\r\n          window.history.replaceState({}, document.title, newUrl);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading member data:', error);\r\n        alert('ไม่สามารถโหลดข้อมูลสมาชิกได้');\r\n      }\r\n    },\r\n    selectTransactionType(type) {\r\n      this.transactionType = type;\r\n      this.amount = '';\r\n      this.selectedLoanId = '';\r\n    },\r\n    getTransactionTypeTitle() {\r\n      switch (this.transactionType) {\r\n        case 'deposit':\r\n          return 'ฝากเงิน';\r\n        case 'withdraw':\r\n          return 'ถอนเงิน';\r\n        default:\r\n          return '';\r\n      }\r\n    },\r\n    formatAddress(member) {\r\n      if (!member) return '';\r\n      \r\n      const parts = [\r\n        member.address_line1,\r\n        member.subdistrict,\r\n        member.district,\r\n        member.province,\r\n        member.postal_code\r\n      ].filter(part => part && part.trim() !== '');\r\n      \r\n      return parts.join(' ');\r\n    },\r\n    formatCurrency(value) {\r\n      if (value === undefined || value === null) return '0.00 บาท';\r\n      \r\n      return new Intl.NumberFormat('th-TH', {\r\n        style: 'currency',\r\n        currency: 'THB',\r\n        minimumFractionDigits: 2\r\n      }).format(value);\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return '';\r\n      \r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('th-TH', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    },\r\n    formatTransactionType(type) {\r\n      switch (type) {\r\n        case 'deposit':\r\n          return 'ฝากเงิน';\r\n        case 'withdraw':\r\n          return 'ถอนเงิน';\r\n        default:\r\n          return type;\r\n      }\r\n    },\r\n    getAmountClass(type) {\r\n      switch (type) {\r\n        case 'deposit':\r\n          return 'amount-positive';\r\n        case 'withdraw':\r\n          return 'amount-negative';\r\n        default:\r\n          return '';\r\n      }\r\n    },\r\n    async submitDeposit() {\r\n      if (!this.selectedMemberId || !this.amount || this.amount <= 0) {\r\n        alert('กรุณากรอกข้อมูลให้ครบถ้วน');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const response = await api.depositMoney({\r\n          member_id: this.selectedMemberId,\r\n          amount: parseFloat(this.amount)\r\n        });\r\n        \r\n        this.showSuccessResult(\r\n          'ฝากเงินสำเร็จ',\r\n          `ฝากเงินจำนวน ${this.formatCurrency(this.amount)} เรียบร้อยแล้ว`,\r\n          response.data.current_balance\r\n        );\r\n        \r\n        // รีเฟรชข้อมูล\r\n        this.loadMemberData();\r\n      } catch (error) {\r\n        console.error('Error depositing money:', error);\r\n        this.showErrorResult('เกิดข้อผิดพลาด', 'ไม่สามารถฝากเงินได้ กรุณาลองใหม่อีกครั้ง');\r\n      }\r\n    },\r\n    async submitWithdraw() {\r\n      if (!this.selectedMemberId || !this.amount || this.amount <= 0) {\r\n        alert('กรุณากรอกข้อมูลให้ครบถ้วน');\r\n        return;\r\n      }\r\n      \r\n      if (parseFloat(this.amount) > this.memberBalance.deposit_balance) {\r\n        alert('จำนวนเงินที่ต้องการถอนมากกว่ายอดเงินคงเหลือ');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const response = await api.withdrawMoney({\r\n          member_id: this.selectedMemberId,\r\n          amount: parseFloat(this.amount)\r\n        });\r\n        \r\n        this.showSuccessResult(\r\n          'ถอนเงินสำเร็จ',\r\n          `ถอนเงินจำนวน ${this.formatCurrency(this.amount)} เรียบร้อยแล้ว`,\r\n          response.data.current_balance\r\n        );\r\n        \r\n        // รีเฟรชข้อมูล\r\n        this.loadMemberData();\r\n      } catch (error) {\r\n        console.error('Error withdrawing money:', error);\r\n        \r\n        let errorMessage = 'ไม่สามารถถอนเงินได้ กรุณาลองใหม่อีกครั้ง';\r\n        if (error.response && error.response.data && error.response.data.message) {\r\n          errorMessage = error.response.data.message;\r\n        }\r\n        \r\n        this.showErrorResult('เกิดข้อผิดพลาด', errorMessage);\r\n      }\r\n    },\r\n\r\n    showSuccessResult(title, message, balance) {\r\n      this.resultModalTitle = title;\r\n      this.resultMessage = message;\r\n      this.isSuccess = true;\r\n      this.updatedBalance = balance;\r\n      this.showResultModal = true;\r\n    },\r\n    showErrorResult(title, message) {\r\n      this.resultModalTitle = title;\r\n      this.resultMessage = message;\r\n      this.isSuccess = false;\r\n      this.showResultModal = true;\r\n    },\r\n    closeResultModal() {\r\n      this.showResultModal = false;\r\n      this.resetTransactionForm();\r\n    },\r\n    resetTransactionForm() {\r\n      this.transactionType = '';\r\n      this.amount = '';\r\n      this.selectedLoanId = '';\r\n    },\r\n    resetForm() {\r\n      this.memberData = null;\r\n      this.memberBalance = {\r\n        deposit_balance: 0,\r\n        loan_balance: 0\r\n      };\r\n      this.memberLoans = [];\r\n      this.transactions = [];\r\n      this.resetTransactionForm();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.transaction-container {\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Sarabun', sans-serif;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-bottom: 30px;\r\n  font-size: 28px;\r\n}\r\n\r\nh2 {\r\n  color: #2c3e50;\r\n  margin: 20px 0;\r\n  font-size: 22px;\r\n  border-bottom: 2px solid #4CAF50;\r\n  padding-bottom: 10px;\r\n}\r\n\r\nh3 {\r\n  color: #2c3e50;\r\n  margin: 15px 0;\r\n  font-size: 18px;\r\n}\r\n\r\n/* Member selection */\r\n.member-selection {\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\nselect, input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n}\r\n\r\nselect:focus, input:focus {\r\n  border-color: #4CAF50;\r\n  outline: none;\r\n}\r\n\r\n/* Member info */\r\n.member-info {\r\n  display: flex;\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.info-card, .balance-card {\r\n  flex: 1;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.info-row, .balance-row {\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px dotted #eee;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.info-label, .balance-label {\r\n  font-weight: bold;\r\n  width: 120px;\r\n  color: #555;\r\n}\r\n\r\n.info-value, .balance-value {\r\n  flex: 1;\r\n}\r\n\r\n.balance-value.deposit {\r\n  color: #4CAF50;\r\n  font-weight: bold;\r\n}\r\n\r\n.balance-value.loan {\r\n  color: #f44336;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Transaction type selection */\r\n.transaction-type-selection {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.transaction-types {\r\n  display: flex;\r\n  gap: 20px;\r\n  justify-content: space-between;\r\n}\r\n\r\n.transaction-type-card {\r\n  flex: 1;\r\n  background-color: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  position: relative;\r\n}\r\n\r\n.transaction-type-card:hover:not(.disabled) {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.transaction-type-card.active {\r\n  background-color: #e8f5e9;\r\n  border: 2px solid #4CAF50;\r\n}\r\n\r\n.transaction-type-card.disabled {\r\n  opacity: 0.6;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.transaction-type-card .icon {\r\n  font-size: 36px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.transaction-type-card .label {\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.disabled-message {\r\n  position: absolute;\r\n  bottom: 5px;\r\n  left: 0;\r\n  right: 0;\r\n  font-size: 12px;\r\n  color: #f44336;\r\n}\r\n\r\n/* Transaction form */\r\n.transaction-form {\r\n  background-color: #f9f9f9;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form {\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.hint {\r\n  font-size: 14px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 10px;\r\n  margin-top: 20px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn-cancel {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\n.btn-cancel:hover {\r\n  background-color: #d32f2f;\r\n}\r\n\r\n.btn-submit {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.btn-submit:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.btn-close {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  margin: 0 auto;\r\n  display: block;\r\n}\r\n\r\n.btn-close:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n/* Transaction history */\r\n.transaction-history {\r\n  margin-top: 30px;\r\n}\r\n\r\n.transaction-tabs {\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.tab-button {\r\n  padding: 8px 15px;\r\n  background-color: #f5f5f5;\r\n  border: none;\r\n  border-radius: 4px 4px 0 0;\r\n  cursor: pointer;\r\n  margin-right: 5px;\r\n  font-size: 14px;\r\n  color: #555;\r\n}\r\n\r\n.tab-button.active {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.no-transactions {\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  margin-top: 10px;\r\n  color: #666;\r\n  font-style: italic;\r\n}\r\n\r\n.transaction-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n  background-color: white;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n.transaction-table th, .transaction-table td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.transaction-table th {\r\n  background-color: #f5f5f5;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.amount-positive {\r\n  color: #4CAF50;\r\n  font-weight: bold;\r\n}\r\n\r\n.amount-negative {\r\n  color: #f44336;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Modal */\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  max-width: 500px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.modal-header h2 {\r\n  margin: 0;\r\n  border: none;\r\n  padding: 0;\r\n}\r\n\r\n.close {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  color: #aaa;\r\n}\r\n\r\n.close:hover {\r\n  color: #333;\r\n}\r\n\r\n.modal-body {\r\n  padding: 20px;\r\n}\r\n\r\n.result-message {\r\n  text-align: center;\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  border-radius: 4px;\r\n  font-size: 18px;\r\n}\r\n\r\n.result-message.success {\r\n  background-color: #e8f5e9;\r\n  color: #2e7d32;\r\n  border: 1px solid #c8e6c9;\r\n}\r\n\r\n.result-message.error {\r\n  background-color: #ffebee;\r\n  color: #c62828;\r\n  border: 1px solid #ffcdd2;\r\n}\r\n\r\n.balance-update {\r\n  background-color: #f5f5f5;\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.modal-actions {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .member-info {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .transaction-types {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .transaction-type-card {\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}