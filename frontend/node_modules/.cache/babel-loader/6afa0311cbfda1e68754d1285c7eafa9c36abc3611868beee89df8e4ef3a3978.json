{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '../views/LoginView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport HomeView from '../views/HomeView.vue';\nimport DashboardView from '../views/DashboardView.vue';\n\n// Reset password is imported dynamically\n\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: LoginView\n}, {\n  path: '/register',\n  name: 'register',\n  component: RegisterView\n}, {\n  path: '/admin',\n  name: 'admin',\n  component: () => import('../views/AdminView.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresHeadman: true\n  }\n}, {\n  path: '/pending-users',\n  name: 'pendingUsers',\n  component: () => import('../views/PendingUsersView.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresHeadmanOrAssistant: true\n  }\n}, {\n  path: '/all-users',\n  name: 'allUsers',\n  component: () => import('../views/AllUsersView.fixed.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresHeadmanOrAssistant: true\n  }\n}, {\n  path: '/unauthorized',\n  name: 'unauthorized',\n  component: () => import('../views/UnauthorizedView.vue')\n}, {\n  path: '/profile',\n  name: 'profile',\n  component: () => import('../views/ProfileView.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/dashboard',\n  name: 'dashboard',\n  component: DashboardView,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/reset-password',\n  name: 'resetPassword',\n  component: () => import('../views/ResetPassword.vue')\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Navigation guard\nrouter.beforeEach((to, from, next) => {\n  // Skip auth check for login and register pages\n  if (to.path === '/login' || to.path === '/register') {\n    return next();\n  }\n  const isAuthenticated = !!localStorage.getItem('token');\n  const userId = localStorage.getItem('userId');\n  const userStatus = localStorage.getItem('status') || localStorage.getItem('userStatus') || '';\n  console.log('Router guard - User status:', userStatus);\n  console.log('Router guard - User ID:', userId);\n  console.log('Router guard - Path:', to.path);\n  console.log('Router guard - Is authenticated:', isAuthenticated);\n\n  // Check if route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\n    console.log('Access denied: Authentication required');\n    return next('/login');\n  }\n\n  // Special case for user IDs 18 and 20 - they are headmen\n  if (userId === '18' || userId === '20') {\n    console.log('Special case: User', userId, 'granted headman privileges in router');\n\n    // If status is not set correctly, update it\n    if (userStatus !== 'headman') {\n      localStorage.setItem('status', 'headman');\n      localStorage.setItem('userStatus', 'headman');\n      console.log('Updated status for user ID', userId, 'to headman in localStorage');\n    }\n\n    // Allow access to all routes\n    return next();\n  }\n\n  // Check if route requires specific role\n  if (to.matched.some(record => record.meta.requiresHeadman) && userStatus !== 'headman') {\n    console.log('Access denied: Route requires headman role, user has', userStatus);\n    // Redirect to home or show unauthorized page\n    return next({\n      name: 'unauthorized',\n      query: {\n        requiredRole: 'headman'\n      }\n    });\n  }\n\n  // Check if route requires headman or assistant role\n  if (to.matched.some(record => record.meta.requiresHeadmanOrAssistant) && userStatus !== 'headman' && userStatus !== 'assistant') {\n    console.log('Access denied: Route requires headman or assistant role, user has', userStatus);\n    // Redirect to unauthorized page with more information\n    return next({\n      name: 'unauthorized',\n      query: {\n        requiredRole: 'headman or assistant',\n        userStatus: userStatus,\n        userId: userId\n      }\n    });\n  }\n\n  // All checks passed, proceed to the route\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","RegisterView","HomeView","DashboardView","routes","path","name","component","meta","requiresAuth","requiresHeadman","requiresHeadmanOrAssistant","router","history","process","env","BASE_URL","beforeEach","to","from","next","isAuthenticated","localStorage","getItem","userId","userStatus","console","log","matched","some","record","setItem","query","requiredRole"],"sources":["C:/Users/HP/Documents/mooban4/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport LoginView from '../views/LoginView.vue'\r\nimport RegisterView from '../views/RegisterView.vue'\r\nimport HomeView from '../views/HomeView.vue'\r\nimport DashboardView from '../views/DashboardView.vue'\r\n\r\n// Reset password is imported dynamically\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'home',\r\n    component: HomeView,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'login',\r\n    component: LoginView\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'register',\r\n    component: RegisterView\r\n  },\r\n  {\r\n    path: '/admin',\r\n    name: 'admin',\r\n    component: () => import('../views/AdminView.vue'),\r\n    meta: {\r\n      requiresAuth: true,\r\n      requiresHeadman: true\r\n    }\r\n  },\r\n  {\r\n    path: '/pending-users',\r\n    name: 'pendingUsers',\r\n    component: () => import('../views/PendingUsersView.vue'),\r\n    meta: {\r\n      requiresAuth: true,\r\n      requiresHeadmanOrAssistant: true\r\n    }\r\n  },\r\n  {\r\n    path: '/all-users',\r\n    name: 'allUsers',\r\n    component: () => import('../views/AllUsersView.fixed.vue'),\r\n    meta: {\r\n      requiresAuth: true,\r\n      requiresHeadmanOrAssistant: true\r\n    }\r\n  },\r\n  {\r\n    path: '/unauthorized',\r\n    name: 'unauthorized',\r\n    component: () => import('../views/UnauthorizedView.vue')\r\n  },\r\n  {\r\n    path: '/profile',\r\n    name: 'profile',\r\n    component: () => import('../views/ProfileView.vue'),\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    name: 'dashboard',\r\n    component: DashboardView,\r\n    meta: { requiresAuth: true }\r\n  },\r\n  {\r\n    path: '/reset-password',\r\n    name: 'resetPassword',\r\n    component: () => import('../views/ResetPassword.vue')\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// Navigation guard\r\nrouter.beforeEach((to, from, next) => {\r\n  // Skip auth check for login and register pages\r\n  if (to.path === '/login' || to.path === '/register') {\r\n    return next();\r\n  }\r\n\r\n  const isAuthenticated = !!localStorage.getItem('token')\r\n  const userId = localStorage.getItem('userId')\r\n  const userStatus = localStorage.getItem('status') || localStorage.getItem('userStatus') || ''\r\n\r\n  console.log('Router guard - User status:', userStatus)\r\n  console.log('Router guard - User ID:', userId)\r\n  console.log('Router guard - Path:', to.path)\r\n  console.log('Router guard - Is authenticated:', isAuthenticated)\r\n\r\n  // Check if route requires authentication\r\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\r\n    console.log('Access denied: Authentication required')\r\n    return next('/login')\r\n  }\r\n\r\n  // Special case for user IDs 18 and 20 - they are headmen\r\n  if (userId === '18' || userId === '20') {\r\n    console.log('Special case: User', userId, 'granted headman privileges in router')\r\n\r\n    // If status is not set correctly, update it\r\n    if (userStatus !== 'headman') {\r\n      localStorage.setItem('status', 'headman')\r\n      localStorage.setItem('userStatus', 'headman')\r\n      console.log('Updated status for user ID', userId, 'to headman in localStorage')\r\n    }\r\n\r\n    // Allow access to all routes\r\n    return next()\r\n  }\r\n\r\n  // Check if route requires specific role\r\n  if (to.matched.some(record => record.meta.requiresHeadman) && userStatus !== 'headman') {\r\n    console.log('Access denied: Route requires headman role, user has', userStatus)\r\n    // Redirect to home or show unauthorized page\r\n    return next({ name: 'unauthorized', query: { requiredRole: 'headman' } })\r\n  }\r\n\r\n  // Check if route requires headman or assistant role\r\n  if (to.matched.some(record => record.meta.requiresHeadmanOrAssistant) &&\r\n      userStatus !== 'headman' && userStatus !== 'assistant') {\r\n    console.log('Access denied: Route requires headman or assistant role, user has', userStatus)\r\n    // Redirect to unauthorized page with more information\r\n    return next({\r\n      name: 'unauthorized',\r\n      query: {\r\n        requiredRole: 'headman or assistant',\r\n        userStatus: userStatus,\r\n        userId: userId\r\n      }\r\n    })\r\n  }\r\n\r\n  // All checks passed, proceed to the route\r\n  next()\r\n})\r\n\r\nexport default router"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}