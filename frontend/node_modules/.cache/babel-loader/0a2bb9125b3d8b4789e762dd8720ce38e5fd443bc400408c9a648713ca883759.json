{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'LoginView',\n  data() {\n    return {\n      email: '',\n      password: '',\n      error: null,\n      loading: false,\n      showPassword: false,\n      loginAttempts: 0,\n      isLocked: false,\n      lockCountdown: 0,\n      countdownInterval: null\n    };\n  },\n  created() {\n    // Check if there's a stored login attempt count in localStorage\n    const storedAttempts = localStorage.getItem('loginAttempts');\n    if (storedAttempts) {\n      this.loginAttempts = parseInt(storedAttempts);\n    }\n\n    // Check if account is locked\n    const lockExpiry = localStorage.getItem('lockExpiry');\n    if (lockExpiry) {\n      const expiryTime = parseInt(lockExpiry);\n      const currentTime = new Date().getTime();\n      if (expiryTime > currentTime) {\n        // Account is still locked\n        this.isLocked = true;\n        this.lockCountdown = Math.ceil((expiryTime - currentTime) / 1000);\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\n\n        // Start countdown\n        this.countdownInterval = setInterval(() => {\n          this.lockCountdown--;\n          this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\n          if (this.lockCountdown <= 0) {\n            this.unlockAccount();\n          }\n        }, 1000);\n      } else {\n        // Lock has expired\n        localStorage.removeItem('lockExpiry');\n      }\n    }\n  },\n  beforeUnmount() {\n    // Clear any intervals when component is destroyed\n    if (this.countdownInterval) {\n      clearInterval(this.countdownInterval);\n    }\n  },\n  methods: {\n    ...mapActions(['login']),\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    async handleLogin() {\n      // Check if account is locked\n      if (this.isLocked) {\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      try {\n        await this.login({\n          email: this.email,\n          password: this.password\n        });\n\n        // Reset login attempts on successful login\n        this.loginAttempts = 0;\n        localStorage.removeItem('loginAttempts');\n        localStorage.removeItem('lockExpiry');\n\n        // Check user status to determine redirect page\n        const userStatus = localStorage.getItem('userStatus');\n        let redirectPath = '/';\n\n        // If user is headman or assistant, redirect to all-users page\n        if (userStatus === 'headman' || userStatus === 'assistant') {\n          redirectPath = '/all-users';\n        }\n\n        // Force page reload after successful login\n        window.location.href = redirectPath;\n      } catch (error) {\n        console.error('Login error:', error);\n\n        // Check if the error message contains \"locked\" or \"locked until\"\n        const errorMessage = error.response?.data?.message || '';\n        if (errorMessage.includes('locked') || errorMessage.includes('locked until')) {\n          // Override the server's lock with our own 10-second lock\n          this.lockAccount();\n          this.loading = false;\n          return;\n        }\n        this.error = errorMessage || 'Login failed. Please try again.';\n        this.loading = false;\n\n        // Increment login attempts\n        this.loginAttempts++;\n        localStorage.setItem('loginAttempts', this.loginAttempts.toString());\n\n        // Lock account after 3 failed attempts\n        if (this.loginAttempts >= 3) {\n          this.lockAccount();\n        }\n      }\n    },\n    lockAccount() {\n      this.isLocked = true;\n      this.lockCountdown = 10; // 10 seconds\n      this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\n\n      // Store login attempts and lock expiry in localStorage\n      localStorage.setItem('loginAttempts', this.loginAttempts.toString());\n      const expiryTime = new Date().getTime() + this.lockCountdown * 1000;\n      localStorage.setItem('lockExpiry', expiryTime.toString());\n\n      // Clear any existing interval\n      if (this.countdownInterval) {\n        clearInterval(this.countdownInterval);\n      }\n\n      // Start countdown\n      this.countdownInterval = setInterval(() => {\n        this.lockCountdown--;\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\n        if (this.lockCountdown <= 0) {\n          this.unlockAccount();\n        }\n      }, 1000);\n    },\n    unlockAccount() {\n      this.isLocked = false;\n      this.loginAttempts = 0;\n\n      // Clear localStorage\n      localStorage.removeItem('loginAttempts');\n      localStorage.removeItem('lockExpiry');\n\n      // Clear the interval\n      if (this.countdownInterval) {\n        clearInterval(this.countdownInterval);\n        this.countdownInterval = null;\n      }\n      this.error = 'บัญชีถูกปลดล็อคแล้ว คุณสามารถลองเข้าสู่ระบบได้อีกครั้ง';\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","email","password","error","loading","showPassword","loginAttempts","isLocked","lockCountdown","countdownInterval","created","storedAttempts","localStorage","getItem","parseInt","lockExpiry","expiryTime","currentTime","Date","getTime","Math","ceil","setInterval","unlockAccount","removeItem","beforeUnmount","clearInterval","methods","togglePasswordVisibility","handleLogin","login","userStatus","redirectPath","window","location","href","console","errorMessage","response","message","includes","lockAccount","setItem","toString"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <h1>Login</h1>\r\n    <div class=\"form-container\">\r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            v-model=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n          >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <div class=\"password-input-container\">\r\n            <input\r\n              :type=\"showPassword ? 'text' : 'password'\"\r\n              id=\"password\"\r\n              v-model=\"password\"\r\n              required\r\n              placeholder=\"Enter your password\"\r\n            >\r\n            <button\r\n              type=\"button\"\r\n              class=\"toggle-password-btn\"\r\n              @click=\"togglePasswordVisibility\"\r\n            >\r\n              <i :class=\"showPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" :disabled=\"loading || isLocked\">\r\n          {{ loading ? 'Logging in...' : (isLocked ? `รอ ${lockCountdown} วินาที` : 'Login') }}\r\n        </button>\r\n\r\n        <p v-if=\"error\" class=\"error-message\" :class=\"{ 'locked-message': isLocked }\">{{ error }}</p>\r\n        <p v-if=\"loginAttempts > 0 && !isLocked\" class=\"warning-message\">\r\n          ความพยายามในการเข้าสู่ระบบที่ล้มเหลว: {{ loginAttempts }}/3\r\n        </p>\r\n      </form>\r\n\r\n      <p>\r\n        Don't have an account?\r\n        <router-link to=\"/register\" class=\"link\">Register here</router-link>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'LoginView',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      error: null,\r\n      loading: false,\r\n      showPassword: false,\r\n      loginAttempts: 0,\r\n      isLocked: false,\r\n      lockCountdown: 0,\r\n      countdownInterval: null\r\n    }\r\n  },\r\n  created() {\r\n    // Check if there's a stored login attempt count in localStorage\r\n    const storedAttempts = localStorage.getItem('loginAttempts');\r\n    if (storedAttempts) {\r\n      this.loginAttempts = parseInt(storedAttempts);\r\n    }\r\n\r\n    // Check if account is locked\r\n    const lockExpiry = localStorage.getItem('lockExpiry');\r\n    if (lockExpiry) {\r\n      const expiryTime = parseInt(lockExpiry);\r\n      const currentTime = new Date().getTime();\r\n\r\n      if (expiryTime > currentTime) {\r\n        // Account is still locked\r\n        this.isLocked = true;\r\n        this.lockCountdown = Math.ceil((expiryTime - currentTime) / 1000);\r\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\r\n\r\n        // Start countdown\r\n        this.countdownInterval = setInterval(() => {\r\n          this.lockCountdown--;\r\n          this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\r\n\r\n          if (this.lockCountdown <= 0) {\r\n            this.unlockAccount();\r\n          }\r\n        }, 1000);\r\n      } else {\r\n        // Lock has expired\r\n        localStorage.removeItem('lockExpiry');\r\n      }\r\n    }\r\n  },\r\n\r\n  beforeUnmount() {\r\n    // Clear any intervals when component is destroyed\r\n    if (this.countdownInterval) {\r\n      clearInterval(this.countdownInterval);\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['login']),\r\n    togglePasswordVisibility() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n    async handleLogin() {\r\n      // Check if account is locked\r\n      if (this.isLocked) {\r\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      this.error = null\r\n\r\n      try {\r\n        await this.login({\r\n          email: this.email,\r\n          password: this.password\r\n        })\r\n\r\n        // Reset login attempts on successful login\r\n        this.loginAttempts = 0\r\n        localStorage.removeItem('loginAttempts')\r\n        localStorage.removeItem('lockExpiry')\r\n\r\n        // Check user status to determine redirect page\r\n        const userStatus = localStorage.getItem('userStatus');\r\n        let redirectPath = '/';\r\n\r\n        // If user is headman or assistant, redirect to all-users page\r\n        if (userStatus === 'headman' || userStatus === 'assistant') {\r\n          redirectPath = '/all-users';\r\n        }\r\n\r\n        // Force page reload after successful login\r\n        window.location.href = redirectPath;\r\n      } catch (error) {\r\n        console.error('Login error:', error)\r\n\r\n        // Check if the error message contains \"locked\" or \"locked until\"\r\n        const errorMessage = error.response?.data?.message || '';\r\n        if (errorMessage.includes('locked') || errorMessage.includes('locked until')) {\r\n          // Override the server's lock with our own 10-second lock\r\n          this.lockAccount()\r\n          this.loading = false\r\n          return\r\n        }\r\n\r\n        this.error = errorMessage || 'Login failed. Please try again.'\r\n        this.loading = false\r\n\r\n        // Increment login attempts\r\n        this.loginAttempts++\r\n        localStorage.setItem('loginAttempts', this.loginAttempts.toString())\r\n\r\n        // Lock account after 3 failed attempts\r\n        if (this.loginAttempts >= 3) {\r\n          this.lockAccount()\r\n        }\r\n      }\r\n    },\r\n\r\n    lockAccount() {\r\n      this.isLocked = true\r\n      this.lockCountdown = 10 // 10 seconds\r\n      this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`\r\n\r\n      // Store login attempts and lock expiry in localStorage\r\n      localStorage.setItem('loginAttempts', this.loginAttempts.toString())\r\n      const expiryTime = new Date().getTime() + (this.lockCountdown * 1000)\r\n      localStorage.setItem('lockExpiry', expiryTime.toString())\r\n\r\n      // Clear any existing interval\r\n      if (this.countdownInterval) {\r\n        clearInterval(this.countdownInterval)\r\n      }\r\n\r\n      // Start countdown\r\n      this.countdownInterval = setInterval(() => {\r\n        this.lockCountdown--\r\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`\r\n\r\n        if (this.lockCountdown <= 0) {\r\n          this.unlockAccount()\r\n        }\r\n      }, 1000)\r\n    },\r\n\r\n    unlockAccount() {\r\n      this.isLocked = false\r\n      this.loginAttempts = 0\r\n\r\n      // Clear localStorage\r\n      localStorage.removeItem('loginAttempts')\r\n      localStorage.removeItem('lockExpiry')\r\n\r\n      // Clear the interval\r\n      if (this.countdownInterval) {\r\n        clearInterval(this.countdownInterval)\r\n        this.countdownInterval = null\r\n      }\r\n\r\n      this.error = 'บัญชีถูกปลดล็อคแล้ว คุณสามารถลองเข้าสู่ระบบได้อีกครั้ง'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 80vh;\r\n  padding: 20px;\r\n}\r\n\r\n.form-container {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n  font-size: 28px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #4CAF50;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\nbutton[type=\"submit\"]:disabled {\r\n  background-color: #9e9e9e;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error-message {\r\n  color: #f44336;\r\n  margin-top: 15px;\r\n  text-align: center;\r\n}\r\n\r\n.locked-message {\r\n  color: #ff9800;\r\n  font-weight: bold;\r\n}\r\n\r\n.warning-message {\r\n  color: #ff9800;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\np {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #666;\r\n}\r\n\r\n.link {\r\n  color: #4CAF50;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n}\r\n\r\n.link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.password-input-container {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.password-input-container input {\r\n  width: 100%;\r\n  padding-right: 40px; /* Make room for the button */\r\n}\r\n\r\n.toggle-password-btn {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  color: #666;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.toggle-password-btn:hover {\r\n  color: #333;\r\n}\r\n\r\n.toggle-password-btn:focus {\r\n  outline: none;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}