{"ast":null,"code":"import api from '@/services/api';\nexport default {\n  data() {\n    return {\n      transactions: [],\n      loans: [],\n      // เพิ่มตัวแปรเก็บข้อมูลเงินกู้\n      users: {},\n      loading: true,\n      memberFilter: '',\n      typeFilter: '',\n      dateFrom: '',\n      dateTo: '',\n      sortKey: 'transaction_date',\n      sortOrder: -1,\n      // -1 for descending, 1 for ascending\n      currentPage: 1,\n      itemsPerPage: 10\n    };\n  },\n  computed: {\n    uniqueMembers() {\n      const members = [];\n      const memberIds = new Set();\n      this.transactions.forEach(transaction => {\n        if (!memberIds.has(transaction.member_id)) {\n          memberIds.add(transaction.member_id);\n          members.push({\n            member_id: transaction.member_id,\n            name: transaction.name\n          });\n        }\n      });\n      return members.sort((a, b) => a.name.localeCompare(b.name));\n    },\n    filteredTransactions() {\n      return this.transactions.filter(transaction => {\n        // Only include loan-related transactions\n        if (transaction.transaction_status !== 'loan_repayment' && transaction.transaction_status !== 'loan_disbursement') {\n          return false;\n        }\n\n        // Filter by member\n        if (this.memberFilter && transaction.member_id !== parseInt(this.memberFilter)) {\n          return false;\n        }\n\n        // Filter by transaction type\n        if (this.typeFilter && transaction.transaction_status !== this.typeFilter) {\n          return false;\n        }\n\n        // Filter by date range\n        if (this.dateFrom || this.dateTo) {\n          const transactionDate = new Date(transaction.transaction_date);\n          if (this.dateFrom) {\n            const fromDate = new Date(this.dateFrom);\n            if (transactionDate < fromDate) {\n              return false;\n            }\n          }\n          if (this.dateTo) {\n            const toDate = new Date(this.dateTo);\n            toDate.setHours(23, 59, 59, 999); // End of the day\n            if (transactionDate > toDate) {\n              return false;\n            }\n          }\n        }\n        return true;\n      }).sort((a, b) => {\n        let valueA = a[this.sortKey];\n        let valueB = b[this.sortKey];\n\n        // Handle special case for sorting by name\n        if (this.sortKey === 'name') {\n          valueA = a.name.toLowerCase();\n          valueB = b.name.toLowerCase();\n        }\n\n        // Handle date sorting\n        if (this.sortKey === 'transaction_date') {\n          valueA = new Date(valueA).getTime();\n          valueB = new Date(valueB).getTime();\n        }\n        if (valueA < valueB) return -1 * this.sortOrder;\n        if (valueA > valueB) return 1 * this.sortOrder;\n        return 0;\n      });\n    },\n    paginatedTransactions() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredTransactions.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredTransactions.length / this.itemsPerPage);\n    },\n    totalDisbursement() {\n      // ใช้ข้อมูลจากทั้งตาราง transactions และ loans\n      let total = 0;\n\n      // 1. คำนวณจากธุรกรรมรับเงินกู้ (loan_disbursement)\n      const disbursementTransactions = this.filteredTransactions.filter(t => t.transaction_status === 'loan_disbursement');\n      console.log('Disbursement transactions:', disbursementTransactions);\n      if (disbursementTransactions.length > 0) {\n        // คำนวณยอดรวมจากธุรกรรมรับเงินกู้\n        const transactionTotal = disbursementTransactions.reduce((sum, t) => {\n          const amount = t.amount !== undefined && t.amount !== null ? t.amount : 0;\n          const parsedAmount = parseFloat(amount);\n          if (isNaN(parsedAmount)) {\n            console.error('Invalid amount value:', amount, 'in transaction:', t);\n            return sum;\n          }\n          console.log('Adding transaction amount:', parsedAmount, 'from transaction:', t.transaction_id);\n          return sum + parsedAmount;\n        }, 0);\n        total += transactionTotal;\n      }\n\n      // 2. คำนวณจากข้อมูลเงินกู้ (loanagreement)\n      // กรองข้อมูลเงินกู้ตามเงื่อนไขการกรอง (สมาชิก, วันที่)\n      const filteredLoans = this.loans.filter(loan => {\n        // กรองตามสมาชิก\n        if (this.memberFilter && loan.member_id !== parseInt(this.memberFilter)) {\n          return false;\n        }\n\n        // กรองตามวันที่\n        if (this.dateFrom || this.dateTo) {\n          const loanDate = new Date(loan.created_at);\n          if (this.dateFrom) {\n            const fromDate = new Date(this.dateFrom);\n            if (loanDate < fromDate) {\n              return false;\n            }\n          }\n          if (this.dateTo) {\n            const toDate = new Date(this.dateTo);\n            toDate.setHours(23, 59, 59, 999); // End of the day\n            if (loanDate > toDate) {\n              return false;\n            }\n          }\n        }\n        return true;\n      });\n      console.log('Filtered loans:', filteredLoans);\n\n      // ถ้าไม่มีธุรกรรมรับเงินกู้ ให้ใช้ข้อมูลจากตาราง loans แทน\n      if (disbursementTransactions.length === 0 && filteredLoans.length > 0) {\n        const loanTotal = filteredLoans.reduce((sum, loan) => {\n          const amount = loan.loan_balance !== undefined && loan.loan_balance !== null ? loan.loan_balance : 0;\n          const parsedAmount = parseFloat(amount);\n          if (isNaN(parsedAmount)) {\n            console.error('Invalid loan amount:', amount, 'in loan:', loan);\n            return sum;\n          }\n          console.log('Adding loan amount:', parsedAmount, 'from loan:', loan.loan_id);\n          return sum + parsedAmount;\n        }, 0);\n        total += loanTotal;\n      }\n      return total;\n    },\n    totalRepayment() {\n      // ตรวจสอบและแสดงข้อมูลเพื่อการแก้ไขปัญหา\n      const repaymentTransactions = this.filteredTransactions.filter(t => t.transaction_status === 'loan_repayment');\n      console.log('Repayment transactions:', repaymentTransactions);\n\n      // ตรวจสอบว่ามีธุรกรรมชำระเงินกู้หรือไม่\n      if (repaymentTransactions.length === 0) {\n        console.log('No loan repayment transactions found');\n        return 0;\n      }\n\n      // คำนวณยอดรวมโดยตรวจสอบและแปลงค่าให้ถูกต้อง\n      return repaymentTransactions.reduce((sum, t) => {\n        // ตรวจสอบว่า amount เป็นค่าที่ถูกต้องหรือไม่\n        const amount = t.amount !== undefined && t.amount !== null ? t.amount : 0;\n\n        // แปลงเป็นตัวเลขและตรวจสอบว่าเป็นตัวเลขที่ถูกต้องหรือไม่\n        const parsedAmount = parseFloat(amount);\n        if (isNaN(parsedAmount)) {\n          console.error('Invalid amount value:', amount, 'in transaction:', t);\n          return sum;\n        }\n        console.log('Adding amount:', parsedAmount, 'from transaction:', t.transaction_id);\n        return sum + parsedAmount;\n      }, 0);\n    }\n  },\n  mounted() {\n    this.fetchTransactions();\n    this.fetchUsers();\n    this.fetchLoans(); // เพิ่มการดึงข้อมูลเงินกู้\n  },\n  methods: {\n    async fetchTransactions() {\n      this.loading = true;\n      try {\n        const response = await api.getAllTransactions();\n        console.log('All transactions data:', response.data);\n\n        // ตรวจสอบว่าข้อมูลที่ได้รับมาถูกต้องหรือไม่\n        if (!response.data || !Array.isArray(response.data)) {\n          console.error('Invalid transactions data format:', response.data);\n          alert('ข้อมูลธุรกรรมไม่ถูกต้อง');\n          this.transactions = [];\n          return;\n        }\n\n        // ตรวจสอบและแสดงข้อมูลธุรกรรมเงินกู้\n        const loanTransactions = response.data.filter(t => t.transaction_status === 'loan_disbursement' || t.transaction_status === 'loan_repayment');\n        console.log('Loan transactions:', loanTransactions);\n\n        // ตรวจสอบว่ามีธุรกรรมเงินกู้หรือไม่\n        if (loanTransactions.length === 0) {\n          console.log('No loan transactions found');\n        }\n\n        // ตรวจสอบและแก้ไขข้อมูล amount ที่อาจไม่ถูกต้อง\n        this.transactions = response.data.map(transaction => {\n          // ตรวจสอบว่า amount เป็นค่าที่ถูกต้องหรือไม่\n          if (transaction.amount === undefined || transaction.amount === null) {\n            console.error('Transaction with undefined or null amount:', transaction);\n            transaction.amount = 0;\n          } else if (typeof transaction.amount === 'string') {\n            // แปลงค่า amount จาก string เป็น number\n            const parsedAmount = parseFloat(transaction.amount);\n            if (isNaN(parsedAmount)) {\n              console.error('Transaction with invalid amount string:', transaction);\n              transaction.amount = 0;\n            } else {\n              transaction.amount = parsedAmount;\n            }\n          }\n          return transaction;\n        });\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n        alert('ไม่สามารถดึงข้อมูลธุรกรรมได้');\n        this.transactions = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchUsers() {\n      try {\n        const response = await api.getAllUsers();\n        const users = response.data.users;\n\n        // Create a map of user IDs to names\n        this.users = users.reduce((map, user) => {\n          map[user.user_id] = `${user.first_name} ${user.last_name}`;\n          return map;\n        }, {});\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    },\n    // เพิ่มเมธอดสำหรับดึงข้อมูลเงินกู้\n    async fetchLoans() {\n      try {\n        const response = await api.getLoans();\n        console.log('All loans data:', response.data);\n\n        // ตรวจสอบว่าข้อมูลที่ได้รับมาถูกต้องหรือไม่\n        if (!response.data || !Array.isArray(response.data)) {\n          console.error('Invalid loans data format:', response.data);\n          this.loans = [];\n          return;\n        }\n\n        // แปลงข้อมูลเงินกู้ให้อยู่ในรูปแบบที่ถูกต้อง\n        this.loans = response.data.map(loan => {\n          // ตรวจสอบว่า loan_balance เป็นค่าที่ถูกต้องหรือไม่\n          if (loan.loan_balance === undefined || loan.loan_balance === null) {\n            console.error('Loan with undefined or null loan_balance:', loan);\n            loan.loan_balance = 0;\n          } else if (typeof loan.loan_balance === 'string') {\n            // แปลงค่า loan_balance จาก string เป็น number\n            const parsedAmount = parseFloat(loan.loan_balance);\n            if (isNaN(parsedAmount)) {\n              console.error('Loan with invalid loan_balance string:', loan);\n              loan.loan_balance = 0;\n            } else {\n              loan.loan_balance = parsedAmount;\n            }\n          }\n\n          // เพิ่มชื่อผู้กู้\n          loan.borrower_name = `${loan.member_first_name || ''} ${loan.member_last_name || ''}`.trim() || 'ไม่ระบุชื่อ';\n          return loan;\n        });\n        console.log('Processed loans:', this.loans);\n      } catch (error) {\n        console.error('Error fetching loans:', error);\n        this.loans = [];\n      }\n    },\n    sortBy(key) {\n      if (this.sortKey === key) {\n        this.sortOrder = -this.sortOrder;\n      } else {\n        this.sortKey = key;\n        this.sortOrder = 1;\n      }\n\n      // Reset to first page when sorting changes\n      this.currentPage = 1;\n    },\n    resetFilters() {\n      this.memberFilter = '';\n      this.typeFilter = '';\n      this.dateFrom = '';\n      this.dateTo = '';\n      this.currentPage = 1;\n    },\n    formatCurrency(value) {\n      if (value === undefined || value === null) return '0.00 บาท';\n      return new Intl.NumberFormat('th-TH', {\n        style: 'currency',\n        currency: 'THB',\n        minimumFractionDigits: 2\n      }).format(value);\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('th-TH', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    formatTransactionType(type) {\n      switch (type) {\n        case 'loan_repayment':\n          return 'ชำระเงินกู้';\n        case 'loan_disbursement':\n          return 'รับเงินกู้';\n        default:\n          return type;\n      }\n    },\n    getAmountClass(type) {\n      switch (type) {\n        case 'loan_disbursement':\n          return 'amount-positive';\n        case 'loan_repayment':\n          return 'amount-negative';\n        default:\n          return '';\n      }\n    },\n    getCreatorName(userId) {\n      return this.users[userId] || `ผู้ใช้ #${userId}`;\n    },\n    exportToPDF() {\n      // Create a new window for printing\n      const printWindow = window.open('', '_blank');\n      if (!printWindow) {\n        alert('กรุณาอนุญาตให้เปิดหน้าต่างป๊อปอัพเพื่อพิมพ์เอกสาร');\n        return;\n      }\n\n      // Prepare data for the report\n      const title = 'รายงานการกู้ยืมและชำระเงินกู้';\n      const date = new Date().toLocaleDateString('th-TH', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n\n      // Create filters description\n      let filtersText = 'ทั้งหมด';\n      if (this.memberFilter) {\n        const member = this.uniqueMembers.find(m => m.member_id === parseInt(this.memberFilter));\n        filtersText = `สมาชิก: ${member ? member.name : this.memberFilter}`;\n      }\n      if (this.typeFilter) {\n        filtersText += ` | ประเภท: ${this.formatTransactionType(this.typeFilter)}`;\n      }\n      if (this.dateFrom || this.dateTo) {\n        filtersText += ` | วันที่: ${this.dateFrom || '-'} ถึง ${this.dateTo || '-'}`;\n      }\n\n      // Create HTML content for the print window\n      let htmlContent = `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>${title}</title>\n          <meta charset=\"utf-8\">\n          <style>\n            body {\n              font-family: 'Sarabun', sans-serif;\n              margin: 20px;\n              line-height: 1.5;\n            }\n            h1 {\n              text-align: center;\n              margin-bottom: 10px;\n            }\n            .report-info {\n              text-align: right;\n              margin-bottom: 20px;\n            }\n            .filters {\n              margin-bottom: 20px;\n              padding: 10px;\n              background-color: #f5f5f5;\n              border-radius: 5px;\n            }\n            .summary {\n              display: flex;\n              justify-content: space-between;\n              margin-bottom: 20px;\n            }\n            .summary-card {\n              flex: 1;\n              padding: 10px;\n              border: 1px solid #ddd;\n              border-radius: 5px;\n              text-align: center;\n              margin: 0 5px;\n            }\n            .summary-title {\n              font-weight: bold;\n              margin-bottom: 5px;\n            }\n            .disbursement {\n              color: #4CAF50;\n            }\n            .repayment {\n              color: #f44336;\n            }\n            table {\n              width: 100%;\n              border-collapse: collapse;\n              margin-bottom: 20px;\n            }\n            th, td {\n              border: 1px solid #ddd;\n              padding: 8px;\n              text-align: left;\n            }\n            th {\n              background-color: #f2f2f2;\n              font-weight: bold;\n            }\n            .amount-positive {\n              color: #4CAF50;\n            }\n            .amount-negative {\n              color: #f44336;\n            }\n            .footer {\n              text-align: center;\n              margin-top: 30px;\n              font-size: 14px;\n              color: #666;\n            }\n            @media print {\n              .no-print {\n                display: none;\n              }\n            }\n          </style>\n        </head>\n        <body>\n          <h1>${title}</h1>\n          \n          <div class=\"report-info\">\n            <p>วันที่พิมพ์: ${date}</p>\n          </div>\n          \n          <div class=\"filters\">\n            <strong>ตัวกรอง:</strong> ${filtersText}\n          </div>\n          \n          <div class=\"summary\">\n            <div class=\"summary-card\">\n              <div class=\"summary-title\">จำนวนธุรกรรม</div>\n              <div>${this.filteredTransactions.length} รายการ</div>\n            </div>\n            \n            <div class=\"summary-card\">\n              <div class=\"summary-title\">ยอดรับเงินกู้รวม</div>\n              <div class=\"disbursement\">${this.formatCurrency(this.totalDisbursement)}</div>\n            </div>\n            \n            <div class=\"summary-card\">\n              <div class=\"summary-title\">ยอดชำระเงินกู้รวม</div>\n              <div class=\"repayment\">${this.formatCurrency(this.totalRepayment)}</div>\n            </div>\n          </div>\n          \n          <table>\n            <thead>\n              <tr>\n                <th>รหัสธุรกรรม</th>\n                <th>ชื่อสมาชิก</th>\n                <th>ประเภทธุรกรรม</th>\n                <th>จำนวนเงิน</th>\n                <th>วันที่ทำรายการ</th>\n                <th>ผู้บันทึกรายการ</th>\n              </tr>\n            </thead>\n            <tbody>\n      `;\n\n      // Add table rows\n      this.filteredTransactions.forEach(transaction => {\n        htmlContent += `\n          <tr>\n            <td>${transaction.transaction_id}</td>\n            <td>${transaction.name}</td>\n            <td>${this.formatTransactionType(transaction.transaction_status)}</td>\n            <td class=\"${this.getAmountClass(transaction.transaction_status)}\">\n              ${this.formatCurrency(transaction.amount)}\n            </td>\n            <td>${this.formatDate(transaction.transaction_date)}</td>\n            <td>${this.getCreatorName(transaction.created_by)}</td>\n          </tr>\n        `;\n      });\n\n      // Close the table and add footer\n      htmlContent += `\n            </tbody>\n          </table>\n          \n          <div class=\"footer\">\n            <p>รายงานนี้สร้างขึ้นโดยระบบจัดการธุรกรรมทางการเงิน</p>\n          </div>\n          \n          <div class=\"no-print\" style=\"text-align: center; margin-top: 20px;\">\n            <button onclick=\"window.print();\" style=\"padding: 10px 20px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer;\">พิมพ์รายงาน</button>\n            <button onclick=\"window.close();\" style=\"padding: 10px 20px; background-color: #f44336; color: white; border: none; border-radius: 4px; cursor: pointer; margin-left: 10px;\">ปิด</button>\n          </div>\n        </body>\n        </html>\n      `;\n\n      // Write the HTML content to the new window\n      printWindow.document.open();\n      printWindow.document.write(htmlContent);\n      printWindow.document.close();\n    }\n  },\n  watch: {\n    // Reset to first page when filters change\n    memberFilter() {\n      this.currentPage = 1;\n    },\n    typeFilter() {\n      this.currentPage = 1;\n    },\n    dateFrom() {\n      this.currentPage = 1;\n    },\n    dateTo() {\n      this.currentPage = 1;\n    }\n  }\n};","map":{"version":3,"names":["api","data","transactions","loans","users","loading","memberFilter","typeFilter","dateFrom","dateTo","sortKey","sortOrder","currentPage","itemsPerPage","computed","uniqueMembers","members","memberIds","Set","forEach","transaction","has","member_id","add","push","name","sort","a","b","localeCompare","filteredTransactions","filter","transaction_status","parseInt","transactionDate","Date","transaction_date","fromDate","toDate","setHours","valueA","valueB","toLowerCase","getTime","paginatedTransactions","start","end","slice","totalPages","Math","ceil","length","totalDisbursement","total","disbursementTransactions","t","console","log","transactionTotal","reduce","sum","amount","undefined","parsedAmount","parseFloat","isNaN","error","transaction_id","filteredLoans","loan","loanDate","created_at","loanTotal","loan_balance","loan_id","totalRepayment","repaymentTransactions","mounted","fetchTransactions","fetchUsers","fetchLoans","methods","response","getAllTransactions","Array","isArray","alert","loanTransactions","map","getAllUsers","user","user_id","first_name","last_name","getLoans","borrower_name","member_first_name","member_last_name","trim","sortBy","key","resetFilters","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formatDate","dateString","date","toLocaleDateString","year","month","day","hour","minute","formatTransactionType","type","getAmountClass","getCreatorName","userId","exportToPDF","printWindow","window","open","title","filtersText","member","find","m","htmlContent","created_by","document","write","close","watch"],"sources":["C:\\Users\\HP\\Documents\\GitHub\\Mooban\\frontend\\src\\views\\LoanTransactionHistory.vue"],"sourcesContent":["<template>\r\n  <div class=\"transaction-history-container\">\r\n    <h1>ประวัติการกู้ยืมและชำระเงินกู้</h1>\r\n    \r\n    <!-- ตัวกรองข้อมูล -->\r\n    <div class=\"filters\">\r\n      <div class=\"filter-group\">\r\n        <label for=\"member-filter\">กรองตามสมาชิก</label>\r\n        <select id=\"member-filter\" v-model=\"memberFilter\">\r\n          <option value=\"\">ทั้งหมด</option>\r\n          <option v-for=\"member in uniqueMembers\" :key=\"member.member_id\" :value=\"member.member_id\">\r\n            {{ member.name }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div class=\"filter-group\">\r\n        <label for=\"type-filter\">กรองตามประเภทธุรกรรม</label>\r\n        <select id=\"type-filter\" v-model=\"typeFilter\">\r\n          <option value=\"\">ทั้งหมด</option>\r\n          <option value=\"loan_repayment\">ชำระเงินกู้</option>\r\n          <option value=\"loan_disbursement\">รับเงินกู้</option>\r\n        </select>\r\n      </div>\r\n      \r\n      <div class=\"filter-group\">\r\n        <label for=\"date-filter\">กรองตามวันที่</label>\r\n        <div class=\"date-range\">\r\n          <input type=\"date\" id=\"date-from\" v-model=\"dateFrom\" placeholder=\"จาก\">\r\n          <span>ถึง</span>\r\n          <input type=\"date\" id=\"date-to\" v-model=\"dateTo\" placeholder=\"ถึง\">\r\n        </div>\r\n      </div>\r\n      \r\n      <button class=\"btn-reset\" @click=\"resetFilters\">รีเซ็ตตัวกรอง</button>\r\n    </div>\r\n    \r\n    <!-- สรุปข้อมูล -->\r\n    <div class=\"summary\">\r\n      <div class=\"summary-card\">\r\n        <div class=\"summary-title\">จำนวนธุรกรรมทั้งหมด</div>\r\n        <div class=\"summary-value\">{{ filteredTransactions.length }}</div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card\">\r\n        <div class=\"summary-title\">ยอดรับเงินกู้รวม</div>\r\n        <div class=\"summary-value disbursement\">{{ formatCurrency(totalDisbursement) }}</div>\r\n      </div>\r\n      \r\n      <div class=\"summary-card\">\r\n        <div class=\"summary-title\">ยอดชำระเงินกู้รวม</div>\r\n        <div class=\"summary-value repayment\">{{ formatCurrency(totalRepayment) }}</div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- ตารางแสดงข้อมูล -->\r\n    <div class=\"table-container\">\r\n      <table class=\"transaction-table\">\r\n        <thead>\r\n          <tr>\r\n            <th @click=\"sortBy('transaction_id')\">\r\n              รหัสธุรกรรม\r\n              <span v-if=\"sortKey === 'transaction_id'\" :class=\"sortOrder === 1 ? 'sort-asc' : 'sort-desc'\"></span>\r\n            </th>\r\n            <th @click=\"sortBy('name')\">\r\n              ชื่อสมาชิก\r\n              <span v-if=\"sortKey === 'name'\" :class=\"sortOrder === 1 ? 'sort-asc' : 'sort-desc'\"></span>\r\n            </th>\r\n            <th @click=\"sortBy('transaction_status')\">\r\n              ประเภทธุรกรรม\r\n              <span v-if=\"sortKey === 'transaction_status'\" :class=\"sortOrder === 1 ? 'sort-asc' : 'sort-desc'\"></span>\r\n            </th>\r\n            <th @click=\"sortBy('amount')\">\r\n              จำนวนเงิน\r\n              <span v-if=\"sortKey === 'amount'\" :class=\"sortOrder === 1 ? 'sort-asc' : 'sort-desc'\"></span>\r\n            </th>\r\n            <th @click=\"sortBy('transaction_date')\">\r\n              วันที่ทำรายการ\r\n              <span v-if=\"sortKey === 'transaction_date'\" :class=\"sortOrder === 1 ? 'sort-asc' : 'sort-desc'\"></span>\r\n            </th>\r\n            <th>ผู้บันทึกรายการ</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"loading\">\r\n            <td colspan=\"6\" class=\"loading\">กำลังโหลดข้อมูล...</td>\r\n          </tr>\r\n          <tr v-else-if=\"filteredTransactions.length === 0\">\r\n            <td colspan=\"6\" class=\"no-data\">ไม่พบข้อมูลธุรกรรม</td>\r\n          </tr>\r\n          <tr v-for=\"transaction in paginatedTransactions\" :key=\"transaction.transaction_id\">\r\n            <td>{{ transaction.transaction_id }}</td>\r\n            <td>{{ transaction.name }}</td>\r\n            <td>{{ formatTransactionType(transaction.transaction_status) }}</td>\r\n            <td :class=\"getAmountClass(transaction.transaction_status)\">\r\n              {{ formatCurrency(transaction.amount) }}\r\n            </td>\r\n            <td>{{ formatDate(transaction.transaction_date) }}</td>\r\n            <td>{{ getCreatorName(transaction.created_by) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    <!-- การแบ่งหน้า -->\r\n    <div class=\"pagination\" v-if=\"totalPages > 1\">\r\n      <button \r\n        class=\"page-btn\" \r\n        :class=\"{ disabled: currentPage === 1 }\"\r\n        @click=\"currentPage > 1 && (currentPage--)\"\r\n      >\r\n        &laquo; ก่อนหน้า\r\n      </button>\r\n      \r\n      <div class=\"page-info\">\r\n        หน้า {{ currentPage }} จาก {{ totalPages }}\r\n      </div>\r\n      \r\n      <button \r\n        class=\"page-btn\" \r\n        :class=\"{ disabled: currentPage === totalPages }\"\r\n        @click=\"currentPage < totalPages && (currentPage++)\"\r\n      >\r\n        ถัดไป &raquo;\r\n      </button>\r\n    </div>\r\n    \r\n    <!-- ปุ่มพิมพ์รายงาน -->\r\n    <div class=\"export-actions\">\r\n      <button class=\"btn-export\" @click=\"exportToPDF\">\r\n        <i class=\"fas fa-file-pdf\"></i> พิมพ์รายงาน PDF\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      transactions: [],\r\n      loans: [], // เพิ่มตัวแปรเก็บข้อมูลเงินกู้\r\n      users: {},\r\n      loading: true,\r\n      memberFilter: '',\r\n      typeFilter: '',\r\n      dateFrom: '',\r\n      dateTo: '',\r\n      sortKey: 'transaction_date',\r\n      sortOrder: -1, // -1 for descending, 1 for ascending\r\n      currentPage: 1,\r\n      itemsPerPage: 10\r\n    };\r\n  },\r\n  computed: {\r\n    uniqueMembers() {\r\n      const members = [];\r\n      const memberIds = new Set();\r\n      \r\n      this.transactions.forEach(transaction => {\r\n        if (!memberIds.has(transaction.member_id)) {\r\n          memberIds.add(transaction.member_id);\r\n          members.push({\r\n            member_id: transaction.member_id,\r\n            name: transaction.name\r\n          });\r\n        }\r\n      });\r\n      \r\n      return members.sort((a, b) => a.name.localeCompare(b.name));\r\n    },\r\n    filteredTransactions() {\r\n      return this.transactions.filter(transaction => {\r\n        // Only include loan-related transactions\r\n        if (transaction.transaction_status !== 'loan_repayment' && transaction.transaction_status !== 'loan_disbursement') {\r\n          return false;\r\n        }\r\n        \r\n        // Filter by member\r\n        if (this.memberFilter && transaction.member_id !== parseInt(this.memberFilter)) {\r\n          return false;\r\n        }\r\n        \r\n        // Filter by transaction type\r\n        if (this.typeFilter && transaction.transaction_status !== this.typeFilter) {\r\n          return false;\r\n        }\r\n        \r\n        // Filter by date range\r\n        if (this.dateFrom || this.dateTo) {\r\n          const transactionDate = new Date(transaction.transaction_date);\r\n          \r\n          if (this.dateFrom) {\r\n            const fromDate = new Date(this.dateFrom);\r\n            if (transactionDate < fromDate) {\r\n              return false;\r\n            }\r\n          }\r\n          \r\n          if (this.dateTo) {\r\n            const toDate = new Date(this.dateTo);\r\n            toDate.setHours(23, 59, 59, 999); // End of the day\r\n            if (transactionDate > toDate) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        \r\n        return true;\r\n      }).sort((a, b) => {\r\n        let valueA = a[this.sortKey];\r\n        let valueB = b[this.sortKey];\r\n        \r\n        // Handle special case for sorting by name\r\n        if (this.sortKey === 'name') {\r\n          valueA = a.name.toLowerCase();\r\n          valueB = b.name.toLowerCase();\r\n        }\r\n        \r\n        // Handle date sorting\r\n        if (this.sortKey === 'transaction_date') {\r\n          valueA = new Date(valueA).getTime();\r\n          valueB = new Date(valueB).getTime();\r\n        }\r\n        \r\n        if (valueA < valueB) return -1 * this.sortOrder;\r\n        if (valueA > valueB) return 1 * this.sortOrder;\r\n        return 0;\r\n      });\r\n    },\r\n    paginatedTransactions() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.filteredTransactions.slice(start, end);\r\n    },\r\n    totalPages() {\r\n      return Math.ceil(this.filteredTransactions.length / this.itemsPerPage);\r\n    },\r\n    totalDisbursement() {\r\n      // ใช้ข้อมูลจากทั้งตาราง transactions และ loans\r\n      let total = 0;\r\n\r\n      // 1. คำนวณจากธุรกรรมรับเงินกู้ (loan_disbursement)\r\n      const disbursementTransactions = this.filteredTransactions.filter(t => t.transaction_status === 'loan_disbursement');\r\n      console.log('Disbursement transactions:', disbursementTransactions);\r\n\r\n      if (disbursementTransactions.length > 0) {\r\n        // คำนวณยอดรวมจากธุรกรรมรับเงินกู้\r\n        const transactionTotal = disbursementTransactions.reduce((sum, t) => {\r\n          const amount = t.amount !== undefined && t.amount !== null ? t.amount : 0;\r\n          const parsedAmount = parseFloat(amount);\r\n\r\n          if (isNaN(parsedAmount)) {\r\n            console.error('Invalid amount value:', amount, 'in transaction:', t);\r\n            return sum;\r\n          }\r\n\r\n          console.log('Adding transaction amount:', parsedAmount, 'from transaction:', t.transaction_id);\r\n          return sum + parsedAmount;\r\n        }, 0);\r\n\r\n        total += transactionTotal;\r\n      }\r\n\r\n      // 2. คำนวณจากข้อมูลเงินกู้ (loanagreement)\r\n      // กรองข้อมูลเงินกู้ตามเงื่อนไขการกรอง (สมาชิก, วันที่)\r\n      const filteredLoans = this.loans.filter(loan => {\r\n        // กรองตามสมาชิก\r\n        if (this.memberFilter && loan.member_id !== parseInt(this.memberFilter)) {\r\n          return false;\r\n        }\r\n\r\n        // กรองตามวันที่\r\n        if (this.dateFrom || this.dateTo) {\r\n          const loanDate = new Date(loan.created_at);\r\n\r\n          if (this.dateFrom) {\r\n            const fromDate = new Date(this.dateFrom);\r\n            if (loanDate < fromDate) {\r\n              return false;\r\n            }\r\n          }\r\n\r\n          if (this.dateTo) {\r\n            const toDate = new Date(this.dateTo);\r\n            toDate.setHours(23, 59, 59, 999); // End of the day\r\n            if (loanDate > toDate) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n\r\n        return true;\r\n      });\r\n\r\n      console.log('Filtered loans:', filteredLoans);\r\n\r\n      // ถ้าไม่มีธุรกรรมรับเงินกู้ ให้ใช้ข้อมูลจากตาราง loans แทน\r\n      if (disbursementTransactions.length === 0 && filteredLoans.length > 0) {\r\n        const loanTotal = filteredLoans.reduce((sum, loan) => {\r\n          const amount = loan.loan_balance !== undefined && loan.loan_balance !== null ? loan.loan_balance : 0;\r\n          const parsedAmount = parseFloat(amount);\r\n\r\n          if (isNaN(parsedAmount)) {\r\n            console.error('Invalid loan amount:', amount, 'in loan:', loan);\r\n            return sum;\r\n          }\r\n\r\n          console.log('Adding loan amount:', parsedAmount, 'from loan:', loan.loan_id);\r\n          return sum + parsedAmount;\r\n        }, 0);\r\n\r\n        total += loanTotal;\r\n      }\r\n\r\n      return total;\r\n    },\r\n    totalRepayment() {\r\n      // ตรวจสอบและแสดงข้อมูลเพื่อการแก้ไขปัญหา\r\n      const repaymentTransactions = this.filteredTransactions.filter(t => t.transaction_status === 'loan_repayment');\r\n      console.log('Repayment transactions:', repaymentTransactions);\r\n\r\n      // ตรวจสอบว่ามีธุรกรรมชำระเงินกู้หรือไม่\r\n      if (repaymentTransactions.length === 0) {\r\n        console.log('No loan repayment transactions found');\r\n        return 0;\r\n      }\r\n\r\n      // คำนวณยอดรวมโดยตรวจสอบและแปลงค่าให้ถูกต้อง\r\n      return repaymentTransactions.reduce((sum, t) => {\r\n        // ตรวจสอบว่า amount เป็นค่าที่ถูกต้องหรือไม่\r\n        const amount = t.amount !== undefined && t.amount !== null ? t.amount : 0;\r\n\r\n        // แปลงเป็นตัวเลขและตรวจสอบว่าเป็นตัวเลขที่ถูกต้องหรือไม่\r\n        const parsedAmount = parseFloat(amount);\r\n\r\n        if (isNaN(parsedAmount)) {\r\n          console.error('Invalid amount value:', amount, 'in transaction:', t);\r\n          return sum;\r\n        }\r\n\r\n        console.log('Adding amount:', parsedAmount, 'from transaction:', t.transaction_id);\r\n        return sum + parsedAmount;\r\n      }, 0);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchTransactions();\r\n    this.fetchUsers();\r\n    this.fetchLoans(); // เพิ่มการดึงข้อมูลเงินกู้\r\n  },\r\n  methods: {\r\n    async fetchTransactions() {\r\n      this.loading = true;\r\n      try {\r\n        const response = await api.getAllTransactions();\r\n        console.log('All transactions data:', response.data);\r\n\r\n        // ตรวจสอบว่าข้อมูลที่ได้รับมาถูกต้องหรือไม่\r\n        if (!response.data || !Array.isArray(response.data)) {\r\n          console.error('Invalid transactions data format:', response.data);\r\n          alert('ข้อมูลธุรกรรมไม่ถูกต้อง');\r\n          this.transactions = [];\r\n          return;\r\n        }\r\n\r\n        // ตรวจสอบและแสดงข้อมูลธุรกรรมเงินกู้\r\n        const loanTransactions = response.data.filter(t =>\r\n          t.transaction_status === 'loan_disbursement' || t.transaction_status === 'loan_repayment'\r\n        );\r\n        console.log('Loan transactions:', loanTransactions);\r\n\r\n        // ตรวจสอบว่ามีธุรกรรมเงินกู้หรือไม่\r\n        if (loanTransactions.length === 0) {\r\n          console.log('No loan transactions found');\r\n        }\r\n\r\n        // ตรวจสอบและแก้ไขข้อมูล amount ที่อาจไม่ถูกต้อง\r\n        this.transactions = response.data.map(transaction => {\r\n          // ตรวจสอบว่า amount เป็นค่าที่ถูกต้องหรือไม่\r\n          if (transaction.amount === undefined || transaction.amount === null) {\r\n            console.error('Transaction with undefined or null amount:', transaction);\r\n            transaction.amount = 0;\r\n          } else if (typeof transaction.amount === 'string') {\r\n            // แปลงค่า amount จาก string เป็น number\r\n            const parsedAmount = parseFloat(transaction.amount);\r\n            if (isNaN(parsedAmount)) {\r\n              console.error('Transaction with invalid amount string:', transaction);\r\n              transaction.amount = 0;\r\n            } else {\r\n              transaction.amount = parsedAmount;\r\n            }\r\n          }\r\n          return transaction;\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching transactions:', error);\r\n        alert('ไม่สามารถดึงข้อมูลธุรกรรมได้');\r\n        this.transactions = [];\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await api.getAllUsers();\r\n        const users = response.data.users;\r\n\r\n        // Create a map of user IDs to names\r\n        this.users = users.reduce((map, user) => {\r\n          map[user.user_id] = `${user.first_name} ${user.last_name}`;\r\n          return map;\r\n        }, {});\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    },\r\n\r\n    // เพิ่มเมธอดสำหรับดึงข้อมูลเงินกู้\r\n    async fetchLoans() {\r\n      try {\r\n        const response = await api.getLoans();\r\n        console.log('All loans data:', response.data);\r\n\r\n        // ตรวจสอบว่าข้อมูลที่ได้รับมาถูกต้องหรือไม่\r\n        if (!response.data || !Array.isArray(response.data)) {\r\n          console.error('Invalid loans data format:', response.data);\r\n          this.loans = [];\r\n          return;\r\n        }\r\n\r\n        // แปลงข้อมูลเงินกู้ให้อยู่ในรูปแบบที่ถูกต้อง\r\n        this.loans = response.data.map(loan => {\r\n          // ตรวจสอบว่า loan_balance เป็นค่าที่ถูกต้องหรือไม่\r\n          if (loan.loan_balance === undefined || loan.loan_balance === null) {\r\n            console.error('Loan with undefined or null loan_balance:', loan);\r\n            loan.loan_balance = 0;\r\n          } else if (typeof loan.loan_balance === 'string') {\r\n            // แปลงค่า loan_balance จาก string เป็น number\r\n            const parsedAmount = parseFloat(loan.loan_balance);\r\n            if (isNaN(parsedAmount)) {\r\n              console.error('Loan with invalid loan_balance string:', loan);\r\n              loan.loan_balance = 0;\r\n            } else {\r\n              loan.loan_balance = parsedAmount;\r\n            }\r\n          }\r\n\r\n          // เพิ่มชื่อผู้กู้\r\n          loan.borrower_name = `${loan.member_first_name || ''} ${loan.member_last_name || ''}`.trim() || 'ไม่ระบุชื่อ';\r\n\r\n          return loan;\r\n        });\r\n\r\n        console.log('Processed loans:', this.loans);\r\n      } catch (error) {\r\n        console.error('Error fetching loans:', error);\r\n        this.loans = [];\r\n      }\r\n    },\r\n    sortBy(key) {\r\n      if (this.sortKey === key) {\r\n        this.sortOrder = -this.sortOrder;\r\n      } else {\r\n        this.sortKey = key;\r\n        this.sortOrder = 1;\r\n      }\r\n      \r\n      // Reset to first page when sorting changes\r\n      this.currentPage = 1;\r\n    },\r\n    resetFilters() {\r\n      this.memberFilter = '';\r\n      this.typeFilter = '';\r\n      this.dateFrom = '';\r\n      this.dateTo = '';\r\n      this.currentPage = 1;\r\n    },\r\n    formatCurrency(value) {\r\n      if (value === undefined || value === null) return '0.00 บาท';\r\n      \r\n      return new Intl.NumberFormat('th-TH', {\r\n        style: 'currency',\r\n        currency: 'THB',\r\n        minimumFractionDigits: 2\r\n      }).format(value);\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return '';\r\n      \r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('th-TH', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      });\r\n    },\r\n    formatTransactionType(type) {\r\n      switch (type) {\r\n        case 'loan_repayment':\r\n          return 'ชำระเงินกู้';\r\n        case 'loan_disbursement':\r\n          return 'รับเงินกู้';\r\n        default:\r\n          return type;\r\n      }\r\n    },\r\n    getAmountClass(type) {\r\n      switch (type) {\r\n        case 'loan_disbursement':\r\n          return 'amount-positive';\r\n        case 'loan_repayment':\r\n          return 'amount-negative';\r\n        default:\r\n          return '';\r\n      }\r\n    },\r\n    getCreatorName(userId) {\r\n      return this.users[userId] || `ผู้ใช้ #${userId}`;\r\n    },\r\n    exportToPDF() {\r\n      // Create a new window for printing\r\n      const printWindow = window.open('', '_blank');\r\n      \r\n      if (!printWindow) {\r\n        alert('กรุณาอนุญาตให้เปิดหน้าต่างป๊อปอัพเพื่อพิมพ์เอกสาร');\r\n        return;\r\n      }\r\n      \r\n      // Prepare data for the report\r\n      const title = 'รายงานการกู้ยืมและชำระเงินกู้';\r\n      const date = new Date().toLocaleDateString('th-TH', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      });\r\n      \r\n      // Create filters description\r\n      let filtersText = 'ทั้งหมด';\r\n      if (this.memberFilter) {\r\n        const member = this.uniqueMembers.find(m => m.member_id === parseInt(this.memberFilter));\r\n        filtersText = `สมาชิก: ${member ? member.name : this.memberFilter}`;\r\n      }\r\n      if (this.typeFilter) {\r\n        filtersText += ` | ประเภท: ${this.formatTransactionType(this.typeFilter)}`;\r\n      }\r\n      if (this.dateFrom || this.dateTo) {\r\n        filtersText += ` | วันที่: ${this.dateFrom || '-'} ถึง ${this.dateTo || '-'}`;\r\n      }\r\n      \r\n      // Create HTML content for the print window\r\n      let htmlContent = `\r\n        <!DOCTYPE html>\r\n        <html>\r\n        <head>\r\n          <title>${title}</title>\r\n          <meta charset=\"utf-8\">\r\n          <style>\r\n            body {\r\n              font-family: 'Sarabun', sans-serif;\r\n              margin: 20px;\r\n              line-height: 1.5;\r\n            }\r\n            h1 {\r\n              text-align: center;\r\n              margin-bottom: 10px;\r\n            }\r\n            .report-info {\r\n              text-align: right;\r\n              margin-bottom: 20px;\r\n            }\r\n            .filters {\r\n              margin-bottom: 20px;\r\n              padding: 10px;\r\n              background-color: #f5f5f5;\r\n              border-radius: 5px;\r\n            }\r\n            .summary {\r\n              display: flex;\r\n              justify-content: space-between;\r\n              margin-bottom: 20px;\r\n            }\r\n            .summary-card {\r\n              flex: 1;\r\n              padding: 10px;\r\n              border: 1px solid #ddd;\r\n              border-radius: 5px;\r\n              text-align: center;\r\n              margin: 0 5px;\r\n            }\r\n            .summary-title {\r\n              font-weight: bold;\r\n              margin-bottom: 5px;\r\n            }\r\n            .disbursement {\r\n              color: #4CAF50;\r\n            }\r\n            .repayment {\r\n              color: #f44336;\r\n            }\r\n            table {\r\n              width: 100%;\r\n              border-collapse: collapse;\r\n              margin-bottom: 20px;\r\n            }\r\n            th, td {\r\n              border: 1px solid #ddd;\r\n              padding: 8px;\r\n              text-align: left;\r\n            }\r\n            th {\r\n              background-color: #f2f2f2;\r\n              font-weight: bold;\r\n            }\r\n            .amount-positive {\r\n              color: #4CAF50;\r\n            }\r\n            .amount-negative {\r\n              color: #f44336;\r\n            }\r\n            .footer {\r\n              text-align: center;\r\n              margin-top: 30px;\r\n              font-size: 14px;\r\n              color: #666;\r\n            }\r\n            @media print {\r\n              .no-print {\r\n                display: none;\r\n              }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <h1>${title}</h1>\r\n          \r\n          <div class=\"report-info\">\r\n            <p>วันที่พิมพ์: ${date}</p>\r\n          </div>\r\n          \r\n          <div class=\"filters\">\r\n            <strong>ตัวกรอง:</strong> ${filtersText}\r\n          </div>\r\n          \r\n          <div class=\"summary\">\r\n            <div class=\"summary-card\">\r\n              <div class=\"summary-title\">จำนวนธุรกรรม</div>\r\n              <div>${this.filteredTransactions.length} รายการ</div>\r\n            </div>\r\n            \r\n            <div class=\"summary-card\">\r\n              <div class=\"summary-title\">ยอดรับเงินกู้รวม</div>\r\n              <div class=\"disbursement\">${this.formatCurrency(this.totalDisbursement)}</div>\r\n            </div>\r\n            \r\n            <div class=\"summary-card\">\r\n              <div class=\"summary-title\">ยอดชำระเงินกู้รวม</div>\r\n              <div class=\"repayment\">${this.formatCurrency(this.totalRepayment)}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>รหัสธุรกรรม</th>\r\n                <th>ชื่อสมาชิก</th>\r\n                <th>ประเภทธุรกรรม</th>\r\n                <th>จำนวนเงิน</th>\r\n                <th>วันที่ทำรายการ</th>\r\n                <th>ผู้บันทึกรายการ</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n      `;\r\n      \r\n      // Add table rows\r\n      this.filteredTransactions.forEach(transaction => {\r\n        htmlContent += `\r\n          <tr>\r\n            <td>${transaction.transaction_id}</td>\r\n            <td>${transaction.name}</td>\r\n            <td>${this.formatTransactionType(transaction.transaction_status)}</td>\r\n            <td class=\"${this.getAmountClass(transaction.transaction_status)}\">\r\n              ${this.formatCurrency(transaction.amount)}\r\n            </td>\r\n            <td>${this.formatDate(transaction.transaction_date)}</td>\r\n            <td>${this.getCreatorName(transaction.created_by)}</td>\r\n          </tr>\r\n        `;\r\n      });\r\n      \r\n      // Close the table and add footer\r\n      htmlContent += `\r\n            </tbody>\r\n          </table>\r\n          \r\n          <div class=\"footer\">\r\n            <p>รายงานนี้สร้างขึ้นโดยระบบจัดการธุรกรรมทางการเงิน</p>\r\n          </div>\r\n          \r\n          <div class=\"no-print\" style=\"text-align: center; margin-top: 20px;\">\r\n            <button onclick=\"window.print();\" style=\"padding: 10px 20px; background-color: #4CAF50; color: white; border: none; border-radius: 4px; cursor: pointer;\">พิมพ์รายงาน</button>\r\n            <button onclick=\"window.close();\" style=\"padding: 10px 20px; background-color: #f44336; color: white; border: none; border-radius: 4px; cursor: pointer; margin-left: 10px;\">ปิด</button>\r\n          </div>\r\n        </body>\r\n        </html>\r\n      `;\r\n      \r\n      // Write the HTML content to the new window\r\n      printWindow.document.open();\r\n      printWindow.document.write(htmlContent);\r\n      printWindow.document.close();\r\n    }\r\n  },\r\n  watch: {\r\n    // Reset to first page when filters change\r\n    memberFilter() {\r\n      this.currentPage = 1;\r\n    },\r\n    typeFilter() {\r\n      this.currentPage = 1;\r\n    },\r\n    dateFrom() {\r\n      this.currentPage = 1;\r\n    },\r\n    dateTo() {\r\n      this.currentPage = 1;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.transaction-history-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  font-family: 'Sarabun', sans-serif;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-bottom: 30px;\r\n  font-size: 28px;\r\n}\r\n\r\n/* Filters */\r\n.filters {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  background-color: #f9f9f9;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n  align-items: flex-end;\r\n}\r\n\r\n.filter-group {\r\n  flex: 1;\r\n  min-width: 200px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\nselect, input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  background-color: white;\r\n}\r\n\r\n.date-range {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n.date-range input {\r\n  flex: 1;\r\n}\r\n\r\n.btn-reset {\r\n  background-color: #f44336;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n  height: 42px;\r\n}\r\n\r\n.btn-reset:hover {\r\n  background-color: #d32f2f;\r\n}\r\n\r\n/* Summary */\r\n.summary {\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.summary-card {\r\n  flex: 1;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.summary-title {\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n  color: #555;\r\n}\r\n\r\n.summary-value {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.summary-value.disbursement {\r\n  color: #4CAF50;\r\n}\r\n\r\n.summary-value.repayment {\r\n  color: #f44336;\r\n}\r\n\r\n/* Table */\r\n.table-container {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.transaction-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.transaction-table th, .transaction-table td {\r\n  padding: 12px 15px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.transaction-table th {\r\n  background-color: #f5f5f5;\r\n  font-weight: bold;\r\n  color: #333;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\n.transaction-table th:hover {\r\n  background-color: #e9ecef;\r\n}\r\n\r\n.sort-asc::after {\r\n  content: \" ▲\";\r\n  font-size: 0.8em;\r\n}\r\n\r\n.sort-desc::after {\r\n  content: \" ▼\";\r\n  font-size: 0.8em;\r\n}\r\n\r\n.loading, .no-data {\r\n  text-align: center;\r\n  padding: 30px;\r\n  color: #666;\r\n}\r\n\r\n.amount-positive {\r\n  color: #4CAF50;\r\n  font-weight: bold;\r\n}\r\n\r\n.amount-negative {\r\n  color: #f44336;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Pagination */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 15px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.page-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 8px 15px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.page-btn:hover:not(.disabled) {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.page-btn.disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.page-info {\r\n  font-size: 16px;\r\n  color: #555;\r\n}\r\n\r\n/* Export actions */\r\n.export-actions {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.btn-export {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.btn-export:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .filters {\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .filter-group {\r\n    width: 100%;\r\n  }\r\n  \r\n  .summary {\r\n    flex-wrap: wrap;\r\n  }\r\n  \r\n  .summary-card {\r\n    min-width: calc(50% - 15px);\r\n    margin-bottom: 15px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}