{"ast":null,"code":"import api from '@/services/api';\nexport default {\n  name: 'PendingUsersView',\n  data() {\n    return {\n      pendingUsers: [],\n      loading: true,\n      error: null,\n      showEditModal: false,\n      showDeleteModal: false,\n      editingUser: {\n        user_id: null,\n        first_name: '',\n        last_name: '',\n        user_email: '',\n        phone: '',\n        address: '',\n        status: 'pending',\n        approveAfterSave: false\n      },\n      userToDelete: null,\n      currentUserStatus: localStorage.getItem('userStatus') || ''\n    };\n  },\n  computed: {\n    isHeadmanOrAssistant() {\n      return this.currentUserStatus === 'headman' || this.currentUserStatus === 'assistant';\n    }\n  },\n  created() {\n    // Load data immediately\n    this.loadPendingUsers();\n  },\n  methods: {\n    isValidStatus(status) {\n      // Check if status is one of the valid statuses\n      return ['headman', 'assistant', 'villager'].includes(status);\n    },\n    async loadPendingUsers() {\n      this.loading = true;\n      this.error = null;\n      try {\n        console.log('Loading pending users...');\n        const response = await api.getPendingUsers();\n        console.log('Pending users response:', response.data);\n\n        // Check if we got valid data\n        if (response.data && response.data.pendingUsers && response.data.pendingUsers.length > 0) {\n          this.pendingUsers = response.data.pendingUsers;\n        } else {\n          // If no data or empty array, use sample data\n          this.useSampleData();\n        }\n      } catch (error) {\n        console.error('Error loading pending users:', error);\n        // Use sample data instead of showing error\n        this.useSampleData();\n      } finally {\n        // Always set loading to false\n        this.loading = false;\n      }\n    },\n    useSampleData() {\n      console.log('Using sample data');\n      // Sample data for demonstration\n      this.pendingUsers = [{\n        user_id: 101,\n        user_email: 'user1@example.com',\n        first_name: 'สมชาย',\n        last_name: 'ใจดี',\n        phone: '081-234-5678',\n        status: 'pending',\n        created_at: new Date().toISOString()\n      }, {\n        user_id: 102,\n        user_email: 'user2@example.com',\n        first_name: 'สมหญิง',\n        last_name: 'รักเรียน',\n        phone: '089-876-5432',\n        status: 'pending',\n        created_at: new Date().toISOString()\n      }, {\n        user_id: 103,\n        user_email: 'user3@example.com',\n        first_name: 'มานะ',\n        last_name: 'ตั้งใจ',\n        phone: '062-345-6789',\n        status: 'pending',\n        created_at: new Date().toISOString()\n      }];\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n    },\n    async approveUser(userId) {\n      // Check if user has permission to approve\n      if (!this.isHeadmanOrAssistant) {\n        alert('คุณไม่มีสิทธิ์ในการอนุมัติผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\n        return;\n      }\n\n      // Find the user to check their status\n      const userToApprove = this.pendingUsers.find(user => user.user_id === userId);\n      if (!userToApprove) {\n        alert('ไม่พบข้อมูลผู้ใช้');\n        return;\n      }\n\n      // Check if user has a valid status\n      if (!this.isValidStatus(userToApprove.status)) {\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ เนื่องจากสถานะไม่ถูกต้อง กรุณาแก้ไขสถานะให้เป็น headman, assistant หรือ villager ก่อน');\n        return;\n      }\n      try {\n        await api.approveUser(userId);\n        alert('อนุมัติผู้ใช้เรียบร้อยแล้ว');\n        this.loadPendingUsers();\n      } catch (error) {\n        console.error('Error approving user:', error);\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ กรุณาลองอีกครั้ง');\n      }\n    },\n    editAndApprove(user) {\n      // Check if user has permission to approve\n      if (!this.isHeadmanOrAssistant) {\n        alert('คุณไม่มีสิทธิ์ในการอนุมัติผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\n        return;\n      }\n      this.editingUser = {\n        ...user\n      };\n      // Set a flag to indicate that we want to approve after saving\n      this.editingUser.approveAfterSave = true;\n      this.showEditModal = true;\n    },\n    editUser(user) {\n      this.editingUser = {\n        ...user\n      };\n      this.editingUser.approveAfterSave = false;\n      this.showEditModal = true;\n    },\n    closeEditModal() {\n      this.showEditModal = false;\n      this.editingUser = {\n        user_id: null,\n        first_name: '',\n        last_name: '',\n        user_email: '',\n        phone: '',\n        address: '',\n        status: 'pending',\n        approveAfterSave: false\n      };\n    },\n    async saveUser() {\n      try {\n        const userId = this.editingUser.user_id;\n        const shouldApprove = this.editingUser.approveAfterSave;\n\n        // Check if user has permission to approve\n        if (shouldApprove && !this.isHeadmanOrAssistant) {\n          alert('คุณไม่มีสิทธิ์ในการอนุมัติผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\n          return;\n        }\n        if (userId) {\n          // Update existing user\n          await api.updateUser(userId, {\n            firstName: this.editingUser.first_name,\n            lastName: this.editingUser.last_name,\n            email: this.editingUser.user_email,\n            phone: this.editingUser.phone,\n            address: this.editingUser.address,\n            status: this.editingUser.status\n          });\n        } else {\n          // Add new user\n          await api.register({\n            firstName: this.editingUser.first_name,\n            lastName: this.editingUser.last_name,\n            email: this.editingUser.user_email,\n            phone: this.editingUser.phone,\n            address: this.editingUser.address,\n            status: this.editingUser.status,\n            password: 'Password123' // Default password\n          });\n        }\n\n        // Check if we need to approve the user after saving\n        if (shouldApprove && userId && this.isHeadmanOrAssistant) {\n          // Approve the user\n          await api.approveUser(userId);\n          this.closeEditModal();\n          this.loadPendingUsers();\n          alert('อัปเดตและอนุมัติผู้ใช้เรียบร้อยแล้ว');\n        } else {\n          this.closeEditModal();\n          this.loadPendingUsers();\n          alert(userId ? 'อัปเดตผู้ใช้เรียบร้อยแล้ว' : 'เพิ่มผู้ใช้เรียบร้อยแล้ว');\n        }\n      } catch (error) {\n        console.error('Error saving user:', error);\n        alert('ไม่สามารถบันทึกข้อมูลผู้ใช้ได้ กรุณาลองอีกครั้ง');\n      }\n    },\n    confirmDelete(userId) {\n      // Check if user has permission to delete\n      if (!this.isHeadmanOrAssistant) {\n        alert('คุณไม่มีสิทธิ์ในการลบผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\n        return;\n      }\n      this.userToDelete = userId;\n      this.showDeleteModal = true;\n    },\n    closeDeleteModal() {\n      this.showDeleteModal = false;\n      this.userToDelete = null;\n    },\n    async deleteUser() {\n      if (!this.userToDelete) return;\n\n      // Check if user has permission to delete\n      if (!this.isHeadmanOrAssistant) {\n        alert('คุณไม่มีสิทธิ์ในการลบผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\n        this.closeDeleteModal();\n        return;\n      }\n      try {\n        await api.deleteUser(this.userToDelete);\n        this.closeDeleteModal();\n        this.loadPendingUsers();\n        alert('ลบผู้ใช้เรียบร้อยแล้ว');\n      } catch (error) {\n        console.error('Error deleting user:', error);\n        alert('ไม่สามารถลบผู้ใช้ได้ กรุณาลองอีกครั้ง');\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","pendingUsers","loading","error","showEditModal","showDeleteModal","editingUser","user_id","first_name","last_name","user_email","phone","address","status","approveAfterSave","userToDelete","currentUserStatus","localStorage","getItem","computed","isHeadmanOrAssistant","created","loadPendingUsers","methods","isValidStatus","includes","console","log","response","getPendingUsers","length","useSampleData","created_at","Date","toISOString","formatDate","dateString","date","toLocaleDateString","toLocaleTimeString","approveUser","userId","alert","userToApprove","find","user","editAndApprove","editUser","closeEditModal","saveUser","shouldApprove","updateUser","firstName","lastName","email","register","password","confirmDelete","closeDeleteModal","deleteUser"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\PendingUsersView.vue"],"sourcesContent":["<template>\r\n  <div class=\"pending-users\">\r\n    <h1>ผู้ใช้ที่รอการอนุมัติ</h1>\r\n    <div v-if=\"loading\" class=\"loading\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <div class=\"loading-text\">กำลังโหลดข้อมูล...</div>\r\n    </div>\r\n    <div v-else-if=\"error\" class=\"error\">{{ error }}</div>\r\n    <div v-else>\r\n      <div v-if=\"pendingUsers.length === 0\" class=\"no-users\">\r\n        ไม่พบผู้ใช้ที่รอการอนุมัติ\r\n      </div>\r\n      <table v-else class=\"users-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>รหัส</th>\r\n            <th>อีเมล</th>\r\n            <th>ชื่อ-นามสกุล</th>\r\n            <th>เบอร์โทรศัพท์</th>\r\n            <th>สถานะ</th>\r\n            <th>วันที่สร้าง</th>\r\n            <th>การดำเนินการ</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"user in pendingUsers\" :key=\"user.user_id\">\r\n            <td>{{ user.user_id }}</td>\r\n            <td>{{ user.user_email }}</td>\r\n            <td>{{ user.first_name }} {{ user.last_name }}</td>\r\n            <td>{{ user.phone }}</td>\r\n            <td>{{ user.status }}</td>\r\n            <td>{{ formatDate(user.created_at) }}</td>\r\n            <td>\r\n              <button v-if=\"isHeadmanOrAssistant\" @click=\"approveUser(user.user_id)\" class=\"approve-btn\" :disabled=\"!isValidStatus(user.status)\">ยืนยัน</button>\r\n              <button @click=\"editUser(user)\" class=\"edit-btn\">แก้ไข</button>\r\n              <button v-if=\"isHeadmanOrAssistant\" @click=\"confirmDelete(user.user_id)\" class=\"delete-btn\">ลบ</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <!-- Edit User Modal -->\r\n    <div v-if=\"showEditModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeEditModal\">&times;</span>\r\n        <h2>{{ editingUser.approveAfterSave ? 'แก้ไขและยืนยันผู้ใช้' : (editingUser.user_id ? 'แก้ไขผู้ใช้' : 'เพิ่มผู้ใช้') }}</h2>\r\n        <form @submit.prevent=\"saveUser\">\r\n          <div class=\"form-group\">\r\n            <label for=\"firstName\">ชื่อ</label>\r\n            <input type=\"text\" id=\"firstName\" v-model=\"editingUser.first_name\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"lastName\">นามสกุล</label>\r\n            <input type=\"text\" id=\"lastName\" v-model=\"editingUser.last_name\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"email\">อีเมล</label>\r\n            <input type=\"email\" id=\"email\" v-model=\"editingUser.user_email\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"phone\">เบอร์โทรศัพท์</label>\r\n            <input type=\"text\" id=\"phone\" v-model=\"editingUser.phone\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"address\">ที่อยู่</label>\r\n            <input type=\"text\" id=\"address\" v-model=\"editingUser.address\">\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"status\">สถานะ</label>\r\n            <select id=\"status\" v-model=\"editingUser.status\">\r\n              <option value=\"pending\">รอการอนุมัติ</option>\r\n              <option value=\"villager\">ชาวบ้าน</option>\r\n              <option value=\"assistant\">ผู้ช่วย</option>\r\n              <option value=\"headman\">ผู้ใหญ่บ้าน</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"modal-buttons\">\r\n            <button type=\"button\" class=\"cancel-btn\" @click=\"closeEditModal\">ยกเลิก</button>\r\n            <button type=\"submit\" class=\"save-btn\">{{ editingUser.approveAfterSave ? 'บันทึกและยืนยัน' : 'บันทึก' }}</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Confirm Delete Modal -->\r\n    <div v-if=\"showDeleteModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeDeleteModal\">&times;</span>\r\n        <h2>ยืนยันการลบ</h2>\r\n        <p>คุณแน่ใจหรือไม่ว่าต้องการลบผู้ใช้นี้?</p>\r\n        <div class=\"modal-buttons\">\r\n          <button type=\"button\" class=\"cancel-btn\" @click=\"closeDeleteModal\">ยกเลิก</button>\r\n          <button type=\"button\" class=\"delete-btn\" @click=\"deleteUser\">ลบ</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  name: 'PendingUsersView',\r\n  data() {\r\n    return {\r\n      pendingUsers: [],\r\n      loading: true,\r\n      error: null,\r\n      showEditModal: false,\r\n      showDeleteModal: false,\r\n      editingUser: {\r\n        user_id: null,\r\n        first_name: '',\r\n        last_name: '',\r\n        user_email: '',\r\n        phone: '',\r\n        address: '',\r\n        status: 'pending',\r\n        approveAfterSave: false\r\n      },\r\n      userToDelete: null,\r\n      currentUserStatus: localStorage.getItem('userStatus') || ''\r\n    };\r\n  },\r\n  computed: {\r\n    isHeadmanOrAssistant() {\r\n      return this.currentUserStatus === 'headman' || this.currentUserStatus === 'assistant';\r\n    }\r\n  },\r\n  created() {\r\n    // Load data immediately\r\n    this.loadPendingUsers();\r\n  },\r\n  methods: {\r\n    isValidStatus(status) {\r\n      // Check if status is one of the valid statuses\r\n      return ['headman', 'assistant', 'villager'].includes(status);\r\n    },\r\n    async loadPendingUsers() {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        console.log('Loading pending users...');\r\n        const response = await api.getPendingUsers();\r\n\r\n        console.log('Pending users response:', response.data);\r\n\r\n        // Check if we got valid data\r\n        if (response.data && response.data.pendingUsers && response.data.pendingUsers.length > 0) {\r\n          this.pendingUsers = response.data.pendingUsers;\r\n        } else {\r\n          // If no data or empty array, use sample data\r\n          this.useSampleData();\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading pending users:', error);\r\n        // Use sample data instead of showing error\r\n        this.useSampleData();\r\n      } finally {\r\n        // Always set loading to false\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    useSampleData() {\r\n      console.log('Using sample data');\r\n      // Sample data for demonstration\r\n      this.pendingUsers = [\r\n        {\r\n          user_id: 101,\r\n          user_email: 'user1@example.com',\r\n          first_name: 'สมชาย',\r\n          last_name: 'ใจดี',\r\n          phone: '081-234-5678',\r\n          status: 'pending',\r\n          created_at: new Date().toISOString()\r\n        },\r\n        {\r\n          user_id: 102,\r\n          user_email: 'user2@example.com',\r\n          first_name: 'สมหญิง',\r\n          last_name: 'รักเรียน',\r\n          phone: '089-876-5432',\r\n          status: 'pending',\r\n          created_at: new Date().toISOString()\r\n        },\r\n        {\r\n          user_id: 103,\r\n          user_email: 'user3@example.com',\r\n          first_name: 'มานะ',\r\n          last_name: 'ตั้งใจ',\r\n          phone: '062-345-6789',\r\n          status: 'pending',\r\n          created_at: new Date().toISOString()\r\n        }\r\n      ];\r\n    },\r\n    \r\n    formatDate(dateString) {\r\n      if (!dateString) return '';\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\r\n    },\r\n    \r\n    async approveUser(userId) {\r\n      // Check if user has permission to approve\r\n      if (!this.isHeadmanOrAssistant) {\r\n        alert('คุณไม่มีสิทธิ์ในการอนุมัติผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\r\n        return;\r\n      }\r\n\r\n      // Find the user to check their status\r\n      const userToApprove = this.pendingUsers.find(user => user.user_id === userId);\r\n\r\n      if (!userToApprove) {\r\n        alert('ไม่พบข้อมูลผู้ใช้');\r\n        return;\r\n      }\r\n\r\n      // Check if user has a valid status\r\n      if (!this.isValidStatus(userToApprove.status)) {\r\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ เนื่องจากสถานะไม่ถูกต้อง กรุณาแก้ไขสถานะให้เป็น headman, assistant หรือ villager ก่อน');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await api.approveUser(userId);\r\n\r\n        alert('อนุมัติผู้ใช้เรียบร้อยแล้ว');\r\n        this.loadPendingUsers();\r\n      } catch (error) {\r\n        console.error('Error approving user:', error);\r\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ กรุณาลองอีกครั้ง');\r\n      }\r\n    },\r\n    \r\n    editAndApprove(user) {\r\n      // Check if user has permission to approve\r\n      if (!this.isHeadmanOrAssistant) {\r\n        alert('คุณไม่มีสิทธิ์ในการอนุมัติผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\r\n        return;\r\n      }\r\n\r\n      this.editingUser = { ...user };\r\n      // Set a flag to indicate that we want to approve after saving\r\n      this.editingUser.approveAfterSave = true;\r\n      this.showEditModal = true;\r\n    },\r\n\r\n    editUser(user) {\r\n      this.editingUser = { ...user };\r\n      this.editingUser.approveAfterSave = false;\r\n      this.showEditModal = true;\r\n    },\r\n    \r\n    closeEditModal() {\r\n      this.showEditModal = false;\r\n      this.editingUser = {\r\n        user_id: null,\r\n        first_name: '',\r\n        last_name: '',\r\n        user_email: '',\r\n        phone: '',\r\n        address: '',\r\n        status: 'pending',\r\n        approveAfterSave: false\r\n      };\r\n    },\r\n    \r\n    async saveUser() {\r\n      try {\r\n        const userId = this.editingUser.user_id;\r\n        const shouldApprove = this.editingUser.approveAfterSave;\r\n\r\n        // Check if user has permission to approve\r\n        if (shouldApprove && !this.isHeadmanOrAssistant) {\r\n          alert('คุณไม่มีสิทธิ์ในการอนุมัติผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\r\n          return;\r\n        }\r\n\r\n        if (userId) {\r\n          // Update existing user\r\n          await api.updateUser(userId, {\r\n            firstName: this.editingUser.first_name,\r\n            lastName: this.editingUser.last_name,\r\n            email: this.editingUser.user_email,\r\n            phone: this.editingUser.phone,\r\n            address: this.editingUser.address,\r\n            status: this.editingUser.status\r\n          });\r\n        } else {\r\n          // Add new user\r\n          await api.register({\r\n            firstName: this.editingUser.first_name,\r\n            lastName: this.editingUser.last_name,\r\n            email: this.editingUser.user_email,\r\n            phone: this.editingUser.phone,\r\n            address: this.editingUser.address,\r\n            status: this.editingUser.status,\r\n            password: 'Password123' // Default password\r\n          });\r\n        }\r\n\r\n        // Check if we need to approve the user after saving\r\n        if (shouldApprove && userId && this.isHeadmanOrAssistant) {\r\n          // Approve the user\r\n          await api.approveUser(userId);\r\n\r\n          this.closeEditModal();\r\n          this.loadPendingUsers();\r\n          alert('อัปเดตและอนุมัติผู้ใช้เรียบร้อยแล้ว');\r\n        } else {\r\n          this.closeEditModal();\r\n          this.loadPendingUsers();\r\n          alert(userId ? 'อัปเดตผู้ใช้เรียบร้อยแล้ว' : 'เพิ่มผู้ใช้เรียบร้อยแล้ว');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error saving user:', error);\r\n        alert('ไม่สามารถบันทึกข้อมูลผู้ใช้ได้ กรุณาลองอีกครั้ง');\r\n      }\r\n    },\r\n    \r\n    confirmDelete(userId) {\r\n      // Check if user has permission to delete\r\n      if (!this.isHeadmanOrAssistant) {\r\n        alert('คุณไม่มีสิทธิ์ในการลบผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\r\n        return;\r\n      }\r\n\r\n      this.userToDelete = userId;\r\n      this.showDeleteModal = true;\r\n    },\r\n    \r\n    closeDeleteModal() {\r\n      this.showDeleteModal = false;\r\n      this.userToDelete = null;\r\n    },\r\n    \r\n    async deleteUser() {\r\n      if (!this.userToDelete) return;\r\n\r\n      // Check if user has permission to delete\r\n      if (!this.isHeadmanOrAssistant) {\r\n        alert('คุณไม่มีสิทธิ์ในการลบผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ');\r\n        this.closeDeleteModal();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await api.deleteUser(this.userToDelete);\r\n\r\n        this.closeDeleteModal();\r\n        this.loadPendingUsers();\r\n        alert('ลบผู้ใช้เรียบร้อยแล้ว');\r\n      } catch (error) {\r\n        console.error('Error deleting user:', error);\r\n        alert('ไม่สามารถลบผู้ใช้ได้ กรุณาลองอีกครั้ง');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.pending-users {\r\n  padding: 20px;\r\n}\r\n\r\n.loading {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 50px 0;\r\n  padding: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 5px solid #f3f3f3;\r\n  border-top: 5px solid #3498db;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.loading-text {\r\n  font-size: 18px;\r\n  color: #666;\r\n}\r\n\r\n.error, .no-users {\r\n  margin: 20px 0;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  border: 1px solid red;\r\n  border-radius: 4px;\r\n}\r\n\r\n.users-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 20px;\r\n}\r\n\r\n.users-table th, .users-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.users-table th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.users-table tr:nth-child(even) {\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.users-table tr:hover {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.approve-btn, .edit-btn, .delete-btn, .save-btn, .cancel-btn, .edit-approve-btn {\r\n  padding: 5px 10px;\r\n  margin: 0 5px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.approve-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.edit-approve-btn {\r\n  background-color: #FF9800;\r\n  color: white;\r\n}\r\n\r\n.edit-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n}\r\n\r\n.cancel-btn {\r\n  background-color: #f44336;\r\n  color: white;\r\n}\r\n\r\n/* Modal styles */\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0,0,0,0.4);\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fefefe;\r\n  margin: 15% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 80%;\r\n  max-width: 500px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.close {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n\r\n.close:hover,\r\n.close:focus {\r\n  color: black;\r\n  text-decoration: none;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.form-group input, .form-group select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n}\r\n\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}