{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelDynamic as _vModelDynamic, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"password-input-container\"\n};\nconst _hoisted_6 = [\"type\"];\nconst _hoisted_7 = {\n  class: \"button-group\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = [\"disabled\"];\nconst _hoisted_10 = {\n  key: 2,\n  class: \"warning-message\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_12 = {\n  class: \"modal-content\"\n};\nconst _hoisted_13 = {\n  key: 0\n};\nconst _hoisted_14 = {\n  class: \"form-group\"\n};\nconst _hoisted_15 = {\n  class: \"form-group\"\n};\nconst _hoisted_16 = {\n  class: \"password-input-container\"\n};\nconst _hoisted_17 = [\"type\"];\nconst _hoisted_18 = {\n  class: \"form-group\"\n};\nconst _hoisted_19 = {\n  class: \"password-input-container\"\n};\nconst _hoisted_20 = [\"type\"];\nconst _hoisted_21 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_22 = {\n  key: 1\n};\nconst _hoisted_23 = {\n  class: \"success-message\"\n};\nconst _hoisted_24 = {\n  key: 1,\n  class: \"modal\"\n};\nconst _hoisted_25 = {\n  class: \"modal-content\"\n};\nconst _hoisted_26 = {\n  key: 0\n};\nconst _hoisted_27 = {\n  class: \"form-group\"\n};\nconst _hoisted_28 = [\"disabled\"];\nconst _hoisted_29 = {\n  key: 0,\n  class: \"test-code-box\"\n};\nconst _hoisted_30 = {\n  class: \"code-display\"\n};\nconst _hoisted_31 = {\n  key: 1\n};\nconst _hoisted_32 = {\n  class: \"form-group otp-input\"\n};\nconst _hoisted_33 = {\n  key: 0,\n  class: \"timer\"\n};\nconst _hoisted_34 = [\"disabled\"];\nconst _hoisted_35 = {\n  key: 2\n};\nconst _hoisted_36 = {\n  class: \"form-group\"\n};\nconst _hoisted_37 = [\"type\"];\nconst _hoisted_38 = {\n  class: \"form-group\"\n};\nconst _hoisted_39 = [\"type\"];\nconst _hoisted_40 = [\"disabled\"];\nconst _hoisted_41 = {\n  key: 3\n};\nconst _hoisted_42 = {\n  key: 4,\n  class: \"error-message\"\n};\nconst _hoisted_43 = {\n  key: 5,\n  class: \"test-code-box fixed-code\"\n};\nconst _hoisted_44 = {\n  class: \"code-display\"\n};\nconst _hoisted_45 = {\n  class: \"note\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[46] || (_cache[46] = _createElementVNode(\"h1\", null, \"Login\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[26] || (_cache[26] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    required: \"\",\n    placeholder: \"Enter your email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[27] || (_cache[27] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"Password\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showPassword ? 'text' : 'password',\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\",\n    placeholder: \"Enter your password\"\n  }, null, 8 /* PROPS */, _hoisted_6), [[_vModelDynamic, $data.password]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"toggle-password-btn\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.togglePasswordVisibility && $options.togglePasswordVisibility(...args))\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass($data.showPassword ? 'fas fa-eye-slash' : 'fas fa-eye')\n  }, null, 2 /* CLASS */)])])]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $data.loading || $data.isLocked,\n    class: \"login-btn\"\n  }, _toDisplayString($data.loading ? 'Logging in...' : $data.isLocked ? `รอ ${$data.lockCountdown} วินาที` : 'Login'), 9 /* TEXT, PROPS */, _hoisted_8), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.testBackendConnection && $options.testBackendConnection(...args)),\n    disabled: $data.testingConnection,\n    class: \"test-connection-btn\"\n  }, _toDisplayString($data.testingConnection ? 'กำลังทดสอบ...' : 'ทดสอบการเชื่อมต่อ'), 9 /* TEXT, PROPS */, _hoisted_9)]), $data.error ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    class: _normalizeClass([\"error-message\", {\n      'locked-message': $data.isLocked\n    }])\n  }, _toDisplayString($data.error), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), $data.connectionStatus ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 1,\n    class: _normalizeClass([\"connection-status\", $data.connectionStatusClass])\n  }, _toDisplayString($data.connectionStatus), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true), $data.loginAttempts > 0 && !$data.isLocked && !$data.isPendingAccount ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \" ความพยายามในการเข้าสู่ระบบที่ล้มเหลว: \" + _toDisplayString($data.loginAttempts) + \"/3 \", 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createElementVNode(\"p\", null, [_cache[29] || (_cache[29] = _createTextVNode(\" Don't have an account? \")), _createVNode(_component_router_link, {\n    to: \"/register\",\n    class: \"link\"\n  }, {\n    default: _withCtx(() => _cache[28] || (_cache[28] = [_createTextVNode(\"Register here\")])),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"p\", null, [_createElementVNode(\"a\", {\n    href: \"#\",\n    class: \"link\",\n    onClick: _cache[5] || (_cache[5] = _withModifiers($event => $data.showSimpleReset = true, [\"prevent\"]))\n  }, \"ลืมรหัสผ่าน?\")]), _createCommentVNode(\" Simple Reset Password Form \"), $data.showSimpleReset ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[6] || (_cache[6] = $event => $data.showSimpleReset = false)\n  }, \"×\"), _cache[35] || (_cache[35] = _createElementVNode(\"h2\", null, \"รีเซ็ตรหัสผ่าน\", -1 /* HOISTED */)), !$data.resetSuccess ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_cache[33] || (_cache[33] = _createElementVNode(\"p\", null, \"หมายเหตุ: การรีเซ็ตรหัสผ่านนี้สำหรับผู้ใหญ่บ้านและผู้ช่วยผู้ใหญ่บ้านเท่านั้น\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_14, [_cache[30] || (_cache[30] = _createElementVNode(\"label\", {\n    for: \"resetEmail\"\n  }, \"อีเมล\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"resetEmail\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.resetEmail = $event),\n    placeholder: \"กรอกอีเมลของคุณ\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.resetEmail]])]), _createElementVNode(\"div\", _hoisted_15, [_cache[31] || (_cache[31] = _createElementVNode(\"label\", {\n    for: \"newPass\"\n  }, \"รหัสผ่านใหม่\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_16, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showNewPass ? 'text' : 'password',\n    id: \"newPass\",\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.newPass = $event),\n    placeholder: \"กรอกรหัสผ่านใหม่\"\n  }, null, 8 /* PROPS */, _hoisted_17), [[_vModelDynamic, $data.newPass]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"toggle-password-btn\",\n    onClick: _cache[9] || (_cache[9] = $event => $data.showNewPass = !$data.showNewPass)\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass($data.showNewPass ? 'fas fa-eye-slash' : 'fas fa-eye')\n  }, null, 2 /* CLASS */)])])]), _createElementVNode(\"div\", _hoisted_18, [_cache[32] || (_cache[32] = _createElementVNode(\"label\", {\n    for: \"confirmPass\"\n  }, \"ยืนยันรหัสผ่านใหม่\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_19, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showConfirmPass ? 'text' : 'password',\n    id: \"confirmPass\",\n    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = $event => $data.confirmPass = $event),\n    placeholder: \"กรอกรหัสผ่านใหม่อีกครั้ง\"\n  }, null, 8 /* PROPS */, _hoisted_20), [[_vModelDynamic, $data.confirmPass]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"toggle-password-btn\",\n    onClick: _cache[11] || (_cache[11] = $event => $data.showConfirmPass = !$data.showConfirmPass)\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass($data.showConfirmPass ? 'fas fa-eye-slash' : 'fas fa-eye')\n  }, null, 2 /* CLASS */)])])]), _cache[34] || (_cache[34] = _createElementVNode(\"p\", {\n    class: \"password-requirements\"\n  }, \" รหัสผ่านต้องมีความยาวไม่เกิน 10 ตัวอักษร และประกอบด้วยตัวอักษรพิมพ์ใหญ่ ตัวอักษรพิมพ์เล็ก และตัวเลข \", -1 /* HOISTED */)), $data.resetError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, _toDisplayString($data.resetError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.simpleResetPassword && $options.simpleResetPassword(...args)),\n    class: \"btn-primary\"\n  }, _toDisplayString($data.isResetting ? 'กำลังรีเซ็ต...' : 'รีเซ็ตรหัสผ่าน'), 1 /* TEXT */)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [_createElementVNode(\"p\", _hoisted_23, _toDisplayString($data.resetSuccessMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[13] || (_cache[13] = $event => $data.showSimpleReset = false),\n    class: \"btn-primary\"\n  }, \"กลับไปยังหน้าเข้าสู่ระบบ\")]))])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Forgot Password Modal \"), $data.showForgotPassword ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[14] || (_cache[14] = $event => $data.showForgotPassword = false)\n  }, \"×\"), _cache[45] || (_cache[45] = _createElementVNode(\"h2\", null, \"รีเซ็ตรหัสผ่าน\", -1 /* HOISTED */)), $data.forgotPasswordStep === 'email' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_cache[38] || (_cache[38] = _createElementVNode(\"p\", null, \"กรอกอีเมลของคุณเพื่อรับรหัสยืนยัน\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_27, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[15] || (_cache[15] = $event => $data.forgotPasswordEmail = $event),\n    placeholder: \"กรอกอีเมลของคุณ\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.forgotPasswordEmail]])]), _createElementVNode(\"button\", {\n    onClick: _cache[16] || (_cache[16] = (...args) => $options.sendResetCode && $options.sendResetCode(...args)),\n    disabled: $data.sendingCode || !$data.forgotPasswordEmail,\n    class: \"btn-primary\"\n  }, _toDisplayString($data.sendingCode ? 'กำลังส่ง...' : 'ส่งรหัสยืนยัน'), 9 /* TEXT, PROPS */, _hoisted_28), _createCommentVNode(\" Display verification code for testing \"), $data.testVerificationCode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [_cache[36] || (_cache[36] = _createElementVNode(\"p\", null, \"รหัสยืนยันของคุณ:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_30, _toDisplayString($data.testVerificationCode), 1 /* TEXT */), _cache[37] || (_cache[37] = _createElementVNode(\"p\", {\n    class: \"note\"\n  }, \"กรุณาใช้รหัสนี้ในขั้นตอนถัดไป รหัสนี้จะหมดอายุใน 5 นาที\", -1 /* HOISTED */))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), $data.forgotPasswordStep === 'verify' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [_cache[39] || (_cache[39] = _createElementVNode(\"p\", null, \"กรอกรหัสยืนยันที่ส่งไปยังอีเมลของคุณ\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_32, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => $data.verificationCode = $event),\n    placeholder: \"กรอกรหัสยืนยัน 6 หลัก\",\n    maxlength: \"6\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.verificationCode]])]), $data.otpTimer > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_33, \"รหัสจะหมดอายุใน: \" + _toDisplayString($options.formatTime($data.otpTimer)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[18] || (_cache[18] = (...args) => $options.verifyCode && $options.verifyCode(...args)),\n    disabled: $data.verifyingCode || !$data.verificationCode,\n    class: \"btn-primary\"\n  }, _toDisplayString($data.verifyingCode ? 'กำลังตรวจสอบ...' : 'ตรวจสอบรหัส'), 9 /* TEXT, PROPS */, _hoisted_34), _createElementVNode(\"p\", null, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[19] || (_cache[19] = _withModifiers((...args) => $options.resendCode && $options.resendCode(...args), [\"prevent\"])),\n    class: _normalizeClass({\n      'disabled': $data.otpTimer > 0\n    })\n  }, _toDisplayString($data.otpTimer > 0 ? `ส่งรหัสใหม่ใน ${$options.formatTime($data.otpTimer)}` : 'ส่งรหัสใหม่'), 3 /* TEXT, CLASS */)])])) : _createCommentVNode(\"v-if\", true), $data.forgotPasswordStep === 'reset' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_35, [_cache[40] || (_cache[40] = _createElementVNode(\"p\", null, \"กรอกรหัสผ่านใหม่ของคุณ\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_36, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showNewPassword ? 'text' : 'password',\n    \"onUpdate:modelValue\": _cache[20] || (_cache[20] = $event => $data.newPassword = $event),\n    placeholder: \"รหัสผ่านใหม่\",\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_37), [[_vModelDynamic, $data.newPassword]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"toggle-password-btn\",\n    onClick: _cache[21] || (_cache[21] = $event => $data.showNewPassword = !$data.showNewPassword)\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass($data.showNewPassword ? 'fas fa-eye-slash' : 'fas fa-eye')\n  }, null, 2 /* CLASS */)])]), _createElementVNode(\"div\", _hoisted_38, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showConfirmPassword ? 'text' : 'password',\n    \"onUpdate:modelValue\": _cache[22] || (_cache[22] = $event => $data.confirmPassword = $event),\n    placeholder: \"ยืนยันรหัสผ่านใหม่\",\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_39), [[_vModelDynamic, $data.confirmPassword]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"toggle-password-btn\",\n    onClick: _cache[23] || (_cache[23] = $event => $data.showConfirmPassword = !$data.showConfirmPassword)\n  }, [_createElementVNode(\"i\", {\n    class: _normalizeClass($data.showConfirmPassword ? 'fas fa-eye-slash' : 'fas fa-eye')\n  }, null, 2 /* CLASS */)])]), _cache[41] || (_cache[41] = _createElementVNode(\"p\", {\n    class: \"password-requirements\"\n  }, \" รหัสผ่านต้องมีความยาวไม่เกิน 10 ตัวอักษร และประกอบด้วยตัวอักษรพิมพ์ใหญ่ ตัวอักษรพิมพ์เล็ก และตัวเลข \", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[24] || (_cache[24] = (...args) => $options.resetPassword && $options.resetPassword(...args)),\n    disabled: $data.resettingPassword || !$data.newPassword || !$data.confirmPassword || $data.newPassword !== $data.confirmPassword,\n    class: \"btn-primary\"\n  }, _toDisplayString($data.resettingPassword ? 'กำลังรีเซ็ต...' : 'รีเซ็ตรหัสผ่าน'), 9 /* TEXT, PROPS */, _hoisted_40)])) : _createCommentVNode(\"v-if\", true), $data.forgotPasswordStep === 'success' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_41, [_cache[42] || (_cache[42] = _createElementVNode(\"p\", {\n    class: \"success-message\"\n  }, \"รีเซ็ตรหัสผ่านสำเร็จแล้ว!\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[25] || (_cache[25] = (...args) => $options.closeForgotPassword && $options.closeForgotPassword(...args)),\n    class: \"btn-primary\"\n  }, \"กลับไปหน้าเข้าสู่ระบบ\")])) : _createCommentVNode(\"v-if\", true), $data.forgotPasswordError ? (_openBlock(), _createElementBlock(\"p\", _hoisted_42, _toDisplayString($data.forgotPasswordError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Only show verification code in development mode or if email sending failed \"), $data.testVerificationCode && $data.forgotPasswordStep !== 'email' && $data.forgotPasswordStep !== 'success' && !$data.emailSent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_43, [_cache[43] || (_cache[43] = _createElementVNode(\"p\", null, \"รหัสยืนยันของคุณ:\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_44, _toDisplayString($data.testVerificationCode), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_45, \"กรุณาใช้รหัสนี้ด้านบน รหัสนี้จะหมดอายุใน \" + _toDisplayString($options.formatTime($data.otpTimer)), 1 /* TEXT */), _cache[44] || (_cache[44] = _createElementVNode(\"p\", {\n    class: \"note\"\n  }, \"(รหัสนี้แสดงเนื่องจากไม่สามารถส่งอีเมลได้)\", -1 /* HOISTED */))])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handleLogin","_hoisted_3","for","type","id","$event","$data","email","required","placeholder","_hoisted_4","_hoisted_5","showPassword","password","_hoisted_6","onClick","togglePasswordVisibility","_normalizeClass","_hoisted_7","disabled","loading","isLocked","lockCountdown","_hoisted_8","testBackendConnection","testingConnection","_hoisted_9","error","_createCommentVNode","connectionStatus","connectionStatusClass","loginAttempts","isPendingAccount","_hoisted_10","_toDisplayString","_createTextVNode","_createVNode","_component_router_link","to","default","_withCtx","_","href","showSimpleReset","_hoisted_11","_hoisted_12","resetSuccess","_hoisted_13","_hoisted_14","resetEmail","_hoisted_15","_hoisted_16","showNewPass","newPass","_hoisted_17","_hoisted_18","_hoisted_19","showConfirmPass","confirmPass","_hoisted_20","resetError","_hoisted_21","simpleResetPassword","isResetting","_hoisted_22","_hoisted_23","resetSuccessMessage","showForgotPassword","_hoisted_24","_hoisted_25","forgotPasswordStep","_hoisted_26","_hoisted_27","forgotPasswordEmail","sendResetCode","sendingCode","_hoisted_28","testVerificationCode","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","verificationCode","maxlength","otpTimer","_hoisted_33","formatTime","verifyCode","verifyingCode","_hoisted_34","resendCode","_hoisted_35","_hoisted_36","showNewPassword","newPassword","_hoisted_37","_hoisted_38","showConfirmPassword","confirmPassword","_hoisted_39","resetPassword","resettingPassword","_hoisted_40","_hoisted_41","closeForgotPassword","forgotPasswordError","_hoisted_42","emailSent","_hoisted_43","_hoisted_44","_hoisted_45"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <h1>Login</h1>\r\n    <div class=\"form-container\">\r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            v-model=\"email\"\r\n            required\r\n            placeholder=\"Enter your email\"\r\n          >\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <div class=\"password-input-container\">\r\n            <input\r\n              :type=\"showPassword ? 'text' : 'password'\"\r\n              id=\"password\"\r\n              v-model=\"password\"\r\n              required\r\n              placeholder=\"Enter your password\"\r\n            >\r\n            <button\r\n              type=\"button\"\r\n              class=\"toggle-password-btn\"\r\n              @click=\"togglePasswordVisibility\"\r\n            >\r\n              <i :class=\"showPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"button-group\">\r\n          <button type=\"submit\" :disabled=\"loading || isLocked\" class=\"login-btn\">\r\n            {{ loading ? 'Logging in...' : (isLocked ? `รอ ${lockCountdown} วินาที` : 'Login') }}\r\n          </button>\r\n\r\n          <button type=\"button\" @click=\"testBackendConnection\" :disabled=\"testingConnection\" class=\"test-connection-btn\">\r\n            {{ testingConnection ? 'กำลังทดสอบ...' : 'ทดสอบการเชื่อมต่อ' }}\r\n          </button>\r\n        </div>\r\n\r\n        <p v-if=\"error\" class=\"error-message\" :class=\"{ 'locked-message': isLocked }\">{{ error }}</p>\r\n        <p v-if=\"connectionStatus\" class=\"connection-status\" :class=\"connectionStatusClass\">\r\n          {{ connectionStatus }}\r\n        </p>\r\n        <p v-if=\"loginAttempts > 0 && !isLocked && !isPendingAccount\" class=\"warning-message\">\r\n          ความพยายามในการเข้าสู่ระบบที่ล้มเหลว: {{ loginAttempts }}/3\r\n        </p>\r\n      </form>\r\n\r\n      <p>\r\n        Don't have an account?\r\n        <router-link to=\"/register\" class=\"link\">Register here</router-link>\r\n      </p>\r\n      <p>\r\n        <a href=\"#\" class=\"link\" @click.prevent=\"showSimpleReset = true\">ลืมรหัสผ่าน?</a>\r\n      </p>\r\n\r\n      <!-- Simple Reset Password Form -->\r\n      <div v-if=\"showSimpleReset\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <span class=\"close\" @click=\"showSimpleReset = false\">&times;</span>\r\n          <h2>รีเซ็ตรหัสผ่าน</h2>\r\n\r\n          <div v-if=\"!resetSuccess\">\r\n            <p>หมายเหตุ: การรีเซ็ตรหัสผ่านนี้สำหรับผู้ใหญ่บ้านและผู้ช่วยผู้ใหญ่บ้านเท่านั้น</p>\r\n            <div class=\"form-group\">\r\n              <label for=\"resetEmail\">อีเมล</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"resetEmail\"\r\n                v-model=\"resetEmail\"\r\n                placeholder=\"กรอกอีเมลของคุณ\"\r\n              >\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"newPass\">รหัสผ่านใหม่</label>\r\n              <div class=\"password-input-container\">\r\n                <input\r\n                  :type=\"showNewPass ? 'text' : 'password'\"\r\n                  id=\"newPass\"\r\n                  v-model=\"newPass\"\r\n                  placeholder=\"กรอกรหัสผ่านใหม่\"\r\n                >\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"toggle-password-btn\"\r\n                  @click=\"showNewPass = !showNewPass\"\r\n                >\r\n                  <i :class=\"showNewPass ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"confirmPass\">ยืนยันรหัสผ่านใหม่</label>\r\n              <div class=\"password-input-container\">\r\n                <input\r\n                  :type=\"showConfirmPass ? 'text' : 'password'\"\r\n                  id=\"confirmPass\"\r\n                  v-model=\"confirmPass\"\r\n                  placeholder=\"กรอกรหัสผ่านใหม่อีกครั้ง\"\r\n                >\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"toggle-password-btn\"\r\n                  @click=\"showConfirmPass = !showConfirmPass\"\r\n                >\r\n                  <i :class=\"showConfirmPass ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <p class=\"password-requirements\">\r\n              รหัสผ่านต้องมีความยาวไม่เกิน 10 ตัวอักษร และประกอบด้วยตัวอักษรพิมพ์ใหญ่ ตัวอักษรพิมพ์เล็ก และตัวเลข\r\n            </p>\r\n\r\n            <div v-if=\"resetError\" class=\"error-message\">{{ resetError }}</div>\r\n\r\n            <button @click=\"simpleResetPassword\" class=\"btn-primary\">\r\n              {{ isResetting ? 'กำลังรีเซ็ต...' : 'รีเซ็ตรหัสผ่าน' }}\r\n            </button>\r\n          </div>\r\n\r\n          <div v-else>\r\n            <p class=\"success-message\">{{ resetSuccessMessage }}</p>\r\n            <button @click=\"showSimpleReset = false\" class=\"btn-primary\">กลับไปยังหน้าเข้าสู่ระบบ</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Forgot Password Modal -->\r\n      <div v-if=\"showForgotPassword\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <span class=\"close\" @click=\"showForgotPassword = false\">&times;</span>\r\n          <h2>รีเซ็ตรหัสผ่าน</h2>\r\n\r\n          <div v-if=\"forgotPasswordStep === 'email'\">\r\n            <p>กรอกอีเมลของคุณเพื่อรับรหัสยืนยัน</p>\r\n            <div class=\"form-group\">\r\n              <input\r\n                type=\"email\"\r\n                v-model=\"forgotPasswordEmail\"\r\n                placeholder=\"กรอกอีเมลของคุณ\"\r\n                required\r\n              >\r\n            </div>\r\n            <button\r\n              @click=\"sendResetCode\"\r\n              :disabled=\"sendingCode || !forgotPasswordEmail\"\r\n              class=\"btn-primary\"\r\n            >\r\n              {{ sendingCode ? 'กำลังส่ง...' : 'ส่งรหัสยืนยัน' }}\r\n            </button>\r\n\r\n            <!-- Display verification code for testing -->\r\n            <div v-if=\"testVerificationCode\" class=\"test-code-box\">\r\n              <p>รหัสยืนยันของคุณ:</p>\r\n              <div class=\"code-display\">{{ testVerificationCode }}</div>\r\n              <p class=\"note\">กรุณาใช้รหัสนี้ในขั้นตอนถัดไป รหัสนี้จะหมดอายุใน 5 นาที</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div v-if=\"forgotPasswordStep === 'verify'\">\r\n            <p>กรอกรหัสยืนยันที่ส่งไปยังอีเมลของคุณ</p>\r\n\r\n\r\n\r\n            <div class=\"form-group otp-input\">\r\n              <input\r\n                type=\"text\"\r\n                v-model=\"verificationCode\"\r\n                placeholder=\"กรอกรหัสยืนยัน 6 หลัก\"\r\n                maxlength=\"6\"\r\n                required\r\n              >\r\n            </div>\r\n            <p class=\"timer\" v-if=\"otpTimer > 0\">รหัสจะหมดอายุใน: {{ formatTime(otpTimer) }}</p>\r\n            <button\r\n              @click=\"verifyCode\"\r\n              :disabled=\"verifyingCode || !verificationCode\"\r\n              class=\"btn-primary\"\r\n            >\r\n              {{ verifyingCode ? 'กำลังตรวจสอบ...' : 'ตรวจสอบรหัส' }}\r\n            </button>\r\n            <p>\r\n              <a href=\"#\" @click.prevent=\"resendCode\" :class=\"{ 'disabled': otpTimer > 0 }\">\r\n                {{ otpTimer > 0 ? `ส่งรหัสใหม่ใน ${formatTime(otpTimer)}` : 'ส่งรหัสใหม่' }}\r\n              </a>\r\n            </p>\r\n          </div>\r\n\r\n          <div v-if=\"forgotPasswordStep === 'reset'\">\r\n            <p>กรอกรหัสผ่านใหม่ของคุณ</p>\r\n            <div class=\"form-group\">\r\n              <input\r\n                :type=\"showNewPassword ? 'text' : 'password'\"\r\n                v-model=\"newPassword\"\r\n                placeholder=\"รหัสผ่านใหม่\"\r\n                required\r\n              >\r\n              <button\r\n                type=\"button\"\r\n                class=\"toggle-password-btn\"\r\n                @click=\"showNewPassword = !showNewPassword\"\r\n              >\r\n                <i :class=\"showNewPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n              </button>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <input\r\n                :type=\"showConfirmPassword ? 'text' : 'password'\"\r\n                v-model=\"confirmPassword\"\r\n                placeholder=\"ยืนยันรหัสผ่านใหม่\"\r\n                required\r\n              >\r\n              <button\r\n                type=\"button\"\r\n                class=\"toggle-password-btn\"\r\n                @click=\"showConfirmPassword = !showConfirmPassword\"\r\n              >\r\n                <i :class=\"showConfirmPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n              </button>\r\n            </div>\r\n            <p class=\"password-requirements\">\r\n              รหัสผ่านต้องมีความยาวไม่เกิน 10 ตัวอักษร และประกอบด้วยตัวอักษรพิมพ์ใหญ่ ตัวอักษรพิมพ์เล็ก และตัวเลข\r\n            </p>\r\n            <button\r\n              @click=\"resetPassword\"\r\n              :disabled=\"resettingPassword || !newPassword || !confirmPassword || newPassword !== confirmPassword\"\r\n              class=\"btn-primary\"\r\n            >\r\n              {{ resettingPassword ? 'กำลังรีเซ็ต...' : 'รีเซ็ตรหัสผ่าน' }}\r\n            </button>\r\n          </div>\r\n\r\n          <div v-if=\"forgotPasswordStep === 'success'\">\r\n            <p class=\"success-message\">รีเซ็ตรหัสผ่านสำเร็จแล้ว!</p>\r\n            <button @click=\"closeForgotPassword\" class=\"btn-primary\">กลับไปหน้าเข้าสู่ระบบ</button>\r\n          </div>\r\n\r\n          <p v-if=\"forgotPasswordError\" class=\"error-message\">{{ forgotPasswordError }}</p>\r\n\r\n          <!-- Only show verification code in development mode or if email sending failed -->\r\n          <div v-if=\"testVerificationCode && forgotPasswordStep !== 'email' && forgotPasswordStep !== 'success' && !emailSent\" class=\"test-code-box fixed-code\">\r\n            <p>รหัสยืนยันของคุณ:</p>\r\n            <div class=\"code-display\">{{ testVerificationCode }}</div>\r\n            <p class=\"note\">กรุณาใช้รหัสนี้ด้านบน รหัสนี้จะหมดอายุใน {{ formatTime(otpTimer) }}</p>\r\n            <p class=\"note\">(รหัสนี้แสดงเนื่องจากไม่สามารถส่งอีเมลได้)</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'LoginView',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      error: null,\r\n      loading: false,\r\n      showPassword: false,\r\n      loginAttempts: 0,\r\n      testingConnection: false,\r\n      connectionStatus: null,\r\n      connectionStatusClass: '',\r\n      isLocked: false,\r\n      lockCountdown: 0,\r\n      countdownInterval: null,\r\n      isPendingAccount: false,\r\n      isPendingAccount: false,\r\n\r\n      // Forgot password\r\n      showForgotPassword: false,\r\n      forgotPasswordStep: 'email', // email, verify, reset, success\r\n      forgotPasswordEmail: '',\r\n      verificationCode: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      forgotPasswordError: null,\r\n      sendingCode: false,\r\n      verifyingCode: false,\r\n      resettingPassword: false,\r\n      otpTimer: 0,\r\n      otpTimerInterval: null,\r\n      showNewPassword: false,\r\n      showConfirmPassword: false,\r\n      testVerificationCode: null, // For testing only\r\n      emailSent: false, // Track if email was sent successfully\r\n\r\n      // Simple reset password\r\n      showSimpleReset: false,\r\n      resetEmail: '',\r\n      newPass: '',\r\n      confirmPass: '',\r\n      resetError: null,\r\n      isResetting: false,\r\n      resetSuccess: false,\r\n      resetSuccessMessage: '',\r\n      showNewPass: false,\r\n      showConfirmPass: false\r\n    }\r\n  },\r\n  created() {\r\n    // Check if there's a stored login attempt count in localStorage\r\n    const storedAttempts = localStorage.getItem('loginAttempts');\r\n    if (storedAttempts) {\r\n      this.loginAttempts = parseInt(storedAttempts);\r\n    }\r\n\r\n    // Check if account is locked\r\n    const lockExpiry = localStorage.getItem('lockExpiry');\r\n    if (lockExpiry) {\r\n      const expiryTime = parseInt(lockExpiry);\r\n      const currentTime = new Date().getTime();\r\n\r\n      if (expiryTime > currentTime) {\r\n        // Account is still locked\r\n        this.isLocked = true;\r\n        this.lockCountdown = Math.ceil((expiryTime - currentTime) / 1000);\r\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\r\n\r\n        // Start countdown\r\n        this.countdownInterval = setInterval(() => {\r\n          this.lockCountdown--;\r\n          this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`;\r\n\r\n          if (this.lockCountdown <= 0) {\r\n            this.unlockAccount();\r\n          }\r\n        }, 1000);\r\n      } else {\r\n        // Lock has expired\r\n        localStorage.removeItem('lockExpiry');\r\n      }\r\n    }\r\n  },\r\n\r\n  beforeUnmount() {\r\n    // Clear any intervals when component is destroyed\r\n    if (this.countdownInterval) {\r\n      clearInterval(this.countdownInterval);\r\n    }\r\n    if (this.otpTimerInterval) {\r\n      clearInterval(this.otpTimerInterval);\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions(['login']),\r\n    togglePasswordVisibility() {\r\n      this.showPassword = !this.showPassword;\r\n    },\r\n    async testBackendConnection() {\r\n      if (this.testingConnection) return;\r\n\r\n      this.testingConnection = true;\r\n      this.error = null;\r\n      this.connectionStatus = \"กำลังทดสอบการเชื่อมต่อกับเซิร์ฟเวอร์...\";\r\n      this.connectionStatusClass = 'status-testing';\r\n\r\n      try {\r\n        const api = require('@/services/api').default;\r\n\r\n        const response = await api.testConnection();\r\n        console.log('Backend connection test successful:', response.data);\r\n\r\n        this.connectionStatus = \"✅ การเชื่อมต่อกับเซิร์ฟเวอร์สำเร็จ กรุณาลองเข้าสู่ระบบ\";\r\n        this.connectionStatusClass = 'status-success';\r\n\r\n        // Auto-hide the message after 5 seconds\r\n        setTimeout(() => {\r\n          if (this.connectionStatus && this.connectionStatus.includes(\"สำเร็จ\")) {\r\n            this.connectionStatus = null;\r\n          }\r\n        }, 5000);\r\n\r\n        return true;\r\n      } catch (error) {\r\n        console.error('Backend connection test failed:', error);\r\n\r\n        this.connectionStatus = \"❌ ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้ กรุณาตรวจสอบว่าเซิร์ฟเวอร์กำลังทำงานอยู่\";\r\n        this.connectionStatusClass = 'status-error';\r\n\r\n        return false;\r\n      } finally {\r\n        this.testingConnection = false;\r\n      }\r\n    },\r\n\r\n    async handleLogin() {\r\n      // Check if account is locked\r\n      if (this.isLocked) {\r\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`\r\n        return\r\n      }\r\n\r\n      // Reset pending account status on each login attempt\r\n      this.isPendingAccount = false\r\n\r\n      this.loading = true\r\n      this.error = null\r\n\r\n      try {\r\n        // First test the connection to the backend\r\n        console.log('Testing backend connection before login...');\r\n\r\n        // Proceed with login\r\n        console.log('Attempting login with:', {\r\n          email: this.email,\r\n          passwordLength: this.password?.length || 0\r\n        });\r\n\r\n        await this.login({\r\n          email: this.email,\r\n          password: this.password\r\n        })\r\n\r\n        // Reset login attempts on successful login\r\n        this.loginAttempts = 0\r\n        localStorage.removeItem('loginAttempts')\r\n        localStorage.removeItem('lockExpiry')\r\n\r\n        // Check user status to determine redirect page\r\n        const userStatus = localStorage.getItem('userStatus');\r\n        let redirectPath = '/';\r\n\r\n        // If user is headman or assistant, redirect to all-users page\r\n        if (userStatus === 'headman' || userStatus === 'assistant') {\r\n          redirectPath = '/all-users';\r\n        }\r\n\r\n        console.log('Login successful, redirecting to:', redirectPath);\r\n\r\n        // Force page reload after successful login\r\n        window.location.href = redirectPath;\r\n      } catch (error) {\r\n        console.error('Login error:', error)\r\n\r\n        // Check if it's a network error (no response from server)\r\n        if (!error.response) {\r\n          this.error = \"ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้ กรุณาตรวจสอบการเชื่อมต่อของคุณ\";\r\n          // Offer to test the connection\r\n          this.error += \" <a href='#' @click.prevent='testBackendConnection'>ทดสอบการเชื่อมต่อ</a>\";\r\n          this.loading = false;\r\n          return;\r\n        }\r\n\r\n        // Check if the error message contains \"locked\" or \"locked until\"\r\n        const errorMessage = error.response?.data?.message || '';\r\n        if (errorMessage.includes('locked') || errorMessage.includes('locked until')) {\r\n          // Override the server's lock with our own 10-second lock\r\n          this.lockAccount()\r\n          this.loading = false\r\n          return\r\n        }\r\n\r\n        // Check if account is pending approval\r\n        if (errorMessage.includes('รออนุมัติ') || errorMessage.includes('pending approval') || error.response?.data?.isPending) {\r\n          this.isPendingAccount = true;\r\n          this.error = 'บัญชีของคุณกำลังรออนุมัติ กรุณาติดต่อผู้ใหญ่บ้าน';\r\n          this.loginAttempts = 0; // Reset login attempts for pending accounts\r\n          localStorage.removeItem('loginAttempts'); // Clear from localStorage\r\n          this.loading = false;\r\n          return;\r\n        }\r\n\r\n        // If the error message is about invalid credentials but the account is pending\r\n        // This can happen when the password is wrong for a pending account\r\n        if (errorMessage.includes('Invalid credentials') && error.response?.data?.isPending) {\r\n          this.isPendingAccount = true;\r\n          this.error = 'บัญชีของคุณกำลังรออนุมัติ กรุณาติดต่อผู้ใหญ่บ้าน';\r\n          this.loginAttempts = 0; // Reset login attempts for pending accounts\r\n          localStorage.removeItem('loginAttempts'); // Clear from localStorage\r\n          this.loading = false;\r\n          return;\r\n        }\r\n\r\n        // For any other error, make sure isPendingAccount is false\r\n        this.isPendingAccount = false;\r\n\r\n        this.error = errorMessage || 'Login failed. Please try again.'\r\n        this.loading = false\r\n\r\n        // Increment login attempts (we already checked for pending account above)\r\n        this.loginAttempts++\r\n        localStorage.setItem('loginAttempts', this.loginAttempts.toString())\r\n\r\n        // Lock account after 3 failed attempts\r\n        if (this.loginAttempts >= 3) {\r\n          this.lockAccount()\r\n        }\r\n      }\r\n    },\r\n\r\n    lockAccount() {\r\n      this.isLocked = true\r\n      this.lockCountdown = 10 // 10 seconds\r\n      this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`\r\n\r\n      // Store login attempts and lock expiry in localStorage\r\n      localStorage.setItem('loginAttempts', this.loginAttempts.toString())\r\n      const expiryTime = new Date().getTime() + (this.lockCountdown * 1000)\r\n      localStorage.setItem('lockExpiry', expiryTime.toString())\r\n\r\n      // Clear any existing interval\r\n      if (this.countdownInterval) {\r\n        clearInterval(this.countdownInterval)\r\n      }\r\n\r\n      // Start countdown\r\n      this.countdownInterval = setInterval(() => {\r\n        this.lockCountdown--\r\n        this.error = `บัญชีถูกล็อคชั่วคราว กรุณารอ ${this.lockCountdown} วินาที`\r\n\r\n        if (this.lockCountdown <= 0) {\r\n          this.unlockAccount()\r\n        }\r\n      }, 1000)\r\n    },\r\n\r\n    unlockAccount() {\r\n      this.isLocked = false\r\n      this.loginAttempts = 0\r\n\r\n      // Clear localStorage\r\n      localStorage.removeItem('loginAttempts')\r\n      localStorage.removeItem('lockExpiry')\r\n\r\n      // Clear the interval\r\n      if (this.countdownInterval) {\r\n        clearInterval(this.countdownInterval)\r\n        this.countdownInterval = null\r\n      }\r\n\r\n      this.error = 'บัญชีถูกปลดล็อคแล้ว คุณสามารถลองเข้าสู่ระบบได้อีกครั้ง'\r\n    },\r\n\r\n    // Forgot password methods\r\n    async sendResetCode() {\r\n      if (!this.forgotPasswordEmail) {\r\n        this.forgotPasswordError = 'Please enter your email address';\r\n        return;\r\n      }\r\n\r\n      this.forgotPasswordError = null;\r\n      this.sendingCode = true;\r\n      this.testVerificationCode = null; // Reset test code\r\n\r\n      try {\r\n        // Call API to send verification code\r\n        const response = await fetch('/api/auth/forgot-password', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ email: this.forgotPasswordEmail })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          // Move to verification step\r\n          this.forgotPasswordStep = 'verify';\r\n\r\n          // Start OTP timer (5 minutes)\r\n          this.otpTimer = 300;\r\n          this.startOtpTimer();\r\n\r\n          // Store test verification code if provided by the API\r\n          if (data.code) {\r\n            this.testVerificationCode = data.code;\r\n            console.log('Test verification code:', data.code);\r\n          }\r\n\r\n          // Store email sent status\r\n          this.emailSent = data.emailSent;\r\n\r\n          // Show appropriate message\r\n          this.forgotPasswordError = null;\r\n          if (data.emailSent) {\r\n            this.forgotPasswordError = 'รหัสยืนยันได้ถูกส่งไปยังอีเมลของคุณแล้ว กรุณาตรวจสอบกล่องจดหมายของคุณ (รวมถึงโฟลเดอร์สแปม)';\r\n          }\r\n        } else {\r\n          // If we got a code but there was an error sending email, show the code\r\n          if (data.code) {\r\n            this.testVerificationCode = data.code;\r\n            this.forgotPasswordStep = 'verify';\r\n            this.otpTimer = 300;\r\n            this.startOtpTimer();\r\n          } else {\r\n            this.forgotPasswordError = data.message || 'Failed to send verification code';\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error sending reset code:', error);\r\n        this.forgotPasswordError = 'An error occurred. Please try again.';\r\n      } finally {\r\n        this.sendingCode = false;\r\n      }\r\n    },\r\n\r\n    startOtpTimer() {\r\n      // Clear any existing timer\r\n      if (this.otpTimerInterval) {\r\n        clearInterval(this.otpTimerInterval);\r\n      }\r\n\r\n      // Start countdown\r\n      this.otpTimerInterval = setInterval(() => {\r\n        this.otpTimer--;\r\n\r\n        if (this.otpTimer <= 0) {\r\n          clearInterval(this.otpTimerInterval);\r\n          this.otpTimerInterval = null;\r\n        }\r\n      }, 1000);\r\n    },\r\n\r\n    formatTime(seconds) {\r\n      const minutes = Math.floor(seconds / 60);\r\n      const remainingSeconds = seconds % 60;\r\n      return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\r\n    },\r\n\r\n    async simpleResetPassword() {\r\n      // Validate inputs\r\n      if (!this.resetEmail) {\r\n        this.resetError = 'กรุณากรอกอีเมล';\r\n        return;\r\n      }\r\n\r\n      if (!this.newPass) {\r\n        this.resetError = 'กรุณากรอกรหัสผ่านใหม่';\r\n        return;\r\n      }\r\n\r\n      if (this.newPass !== this.confirmPass) {\r\n        this.resetError = 'รหัสผ่านไม่ตรงกัน';\r\n        return;\r\n      }\r\n\r\n      // Validate password complexity\r\n      if (this.newPass.length > 10) {\r\n        this.resetError = 'รหัสผ่านต้องมีความยาวไม่เกิน 10 ตัวอักษร';\r\n        return;\r\n      }\r\n\r\n      const hasUpperCase = /[A-Z]/.test(this.newPass);\r\n      const hasLowerCase = /[a-z]/.test(this.newPass);\r\n      const hasNumbers = /[0-9]/.test(this.newPass);\r\n\r\n      if (!hasUpperCase || !hasLowerCase || !hasNumbers) {\r\n        this.resetError = 'รหัสผ่านต้องประกอบด้วยตัวอักษรพิมพ์ใหญ่ ตัวอักษรพิมพ์เล็ก และตัวเลข';\r\n        return;\r\n      }\r\n\r\n      this.isResetting = true;\r\n      this.resetError = null;\r\n\r\n      try {\r\n        const response = await fetch('/api/auth/reset-password', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email: this.resetEmail,\r\n            newPassword: this.newPass\r\n          })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          this.resetSuccess = true;\r\n          this.resetSuccessMessage = data.message || 'รหัสผ่านของคุณได้ถูกรีเซ็ตเรียบร้อยแล้ว';\r\n\r\n          // Clear form\r\n          this.resetEmail = '';\r\n          this.newPass = '';\r\n          this.confirmPass = '';\r\n        } else {\r\n          this.resetError = data.message || 'เกิดข้อผิดพลาดในการรีเซ็ตรหัสผ่าน';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error resetting password:', error);\r\n        this.resetError = 'เกิดข้อผิดพลาดในการเชื่อมต่อกับเซิร์ฟเวอร์';\r\n      } finally {\r\n        this.isResetting = false;\r\n      }\r\n    },\r\n\r\n    async resendCode() {\r\n      if (this.otpTimer > 0) return;\r\n\r\n      await this.sendResetCode();\r\n    },\r\n\r\n    async verifyCode() {\r\n      if (!this.verificationCode) {\r\n        this.forgotPasswordError = 'Please enter the verification code';\r\n        return;\r\n      }\r\n\r\n      this.forgotPasswordError = null;\r\n      this.verifyingCode = true;\r\n\r\n      try {\r\n        // Call API to verify code\r\n        const response = await fetch('/api/auth/verify-reset-code', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email: this.forgotPasswordEmail,\r\n            code: this.verificationCode\r\n          })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          // Move to reset password step\r\n          this.forgotPasswordStep = 'reset';\r\n\r\n          // Clear the OTP timer\r\n          if (this.otpTimerInterval) {\r\n            clearInterval(this.otpTimerInterval);\r\n            this.otpTimerInterval = null;\r\n          }\r\n        } else {\r\n          this.forgotPasswordError = data.message || 'Invalid verification code';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error verifying code:', error);\r\n        this.forgotPasswordError = 'An error occurred. Please try again.';\r\n      } finally {\r\n        this.verifyingCode = false;\r\n      }\r\n    },\r\n\r\n    async resetPassword() {\r\n      if (!this.newPassword) {\r\n        this.forgotPasswordError = 'Please enter a new password';\r\n        return;\r\n      }\r\n\r\n      if (this.newPassword !== this.confirmPassword) {\r\n        this.forgotPasswordError = 'Passwords do not match';\r\n        return;\r\n      }\r\n\r\n      // Validate password length (max 10 characters)\r\n      if (this.newPassword.length > 10) {\r\n        this.forgotPasswordError = 'Password must be 10 characters or less';\r\n        return;\r\n      }\r\n\r\n      // Validate password complexity\r\n      const hasUpperCase = /[A-Z]/.test(this.newPassword);\r\n      const hasLowerCase = /[a-z]/.test(this.newPassword);\r\n      const hasNumbers = /[0-9]/.test(this.newPassword);\r\n\r\n      if (!hasUpperCase || !hasLowerCase || !hasNumbers) {\r\n        this.forgotPasswordError = 'Password must contain uppercase letters, lowercase letters, and numbers';\r\n        return;\r\n      }\r\n\r\n      this.forgotPasswordError = null;\r\n      this.resettingPassword = true;\r\n\r\n      try {\r\n        // Call API to reset password\r\n        const response = await fetch('/api/auth/reset-password', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email: this.forgotPasswordEmail,\r\n            code: this.verificationCode,\r\n            newPassword: this.newPassword\r\n          })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          // Show success message\r\n          this.forgotPasswordStep = 'success';\r\n        } else {\r\n          this.forgotPasswordError = data.message || 'Failed to reset password';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error resetting password:', error);\r\n        this.forgotPasswordError = 'An error occurred. Please try again.';\r\n      } finally {\r\n        this.resettingPassword = false;\r\n      }\r\n    },\r\n\r\n    closeForgotPassword() {\r\n      this.showForgotPassword = false;\r\n      this.forgotPasswordStep = 'email';\r\n      this.forgotPasswordEmail = '';\r\n      this.verificationCode = '';\r\n      this.newPassword = '';\r\n      this.confirmPassword = '';\r\n      this.forgotPasswordError = null;\r\n\r\n      if (this.otpTimerInterval) {\r\n        clearInterval(this.otpTimerInterval);\r\n        this.otpTimerInterval = null;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: 80vh;\r\n  padding: 20px;\r\n}\r\n\r\n.form-container {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.login-btn {\r\n  flex: 2;\r\n  background-color: #4CAF50;\r\n}\r\n\r\n.test-connection-btn {\r\n  flex: 1;\r\n  background-color: #2196F3;\r\n  font-size: 14px;\r\n}\r\n\r\n.test-connection-btn:hover {\r\n  background-color: #0b7dda;\r\n}\r\n\r\n.connection-status {\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n}\r\n\r\n.status-testing {\r\n  background-color: #f8f9fa;\r\n  color: #6c757d;\r\n  border: 1px solid #dee2e6;\r\n}\r\n\r\n.status-success {\r\n  background-color: #d4edda;\r\n  color: #155724;\r\n  border: 1px solid #c3e6cb;\r\n}\r\n\r\n.status-error {\r\n  background-color: #f8d7da;\r\n  color: #721c24;\r\n  border: 1px solid #f5c6cb;\r\n}\r\n\r\nh1 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n  font-size: 28px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #4CAF50;\r\n  outline: none;\r\n  box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\nbutton[type=\"submit\"]:disabled {\r\n  background-color: #9e9e9e;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error-message {\r\n  color: #f44336;\r\n  margin-top: 15px;\r\n  text-align: center;\r\n}\r\n\r\n.locked-message {\r\n  color: #ff9800;\r\n  font-weight: bold;\r\n}\r\n\r\n.warning-message {\r\n  color: #ff9800;\r\n  margin-top: 10px;\r\n  text-align: center;\r\n  font-size: 14px;\r\n}\r\n\r\np {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n  color: #666;\r\n}\r\n\r\n.link {\r\n  color: #4CAF50;\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n}\r\n\r\n.link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.password-input-container {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.password-input-container input {\r\n  width: 100%;\r\n  padding-right: 40px; /* Make room for the button */\r\n}\r\n\r\n.toggle-password-btn {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  color: #666;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n  font-size: 16px;\r\n}\r\n\r\n.toggle-password-btn:hover {\r\n  color: #333;\r\n}\r\n\r\n.toggle-password-btn:focus {\r\n  outline: none;\r\n}\r\n\r\n/* Modal styles */\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.test-code-box {\r\n  background-color: #f8f9fa;\r\n  border: 1px dashed #4CAF50;\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  margin: 15px 0;\r\n  text-align: center;\r\n}\r\n\r\n.fixed-code {\r\n  position: sticky;\r\n  top: 10px;\r\n  z-index: 100;\r\n  box-shadow: 0 2px 10px rgba(0,0,0,0.1);\r\n  background-color: #f0f8f0;\r\n  border: 2px solid #4CAF50;\r\n}\r\n\r\n.code-display {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  letter-spacing: 5px;\r\n  color: #4CAF50;\r\n  margin: 10px 0;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.note {\r\n  font-size: 12px;\r\n  color: #666;\r\n  font-style: italic;\r\n  margin-top: 10px;\r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  padding: 30px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);\r\n  width: 90%;\r\n  max-width: 400px;\r\n  position: relative;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 20px;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  color: #666;\r\n}\r\n\r\n.close:hover {\r\n  color: #333;\r\n}\r\n\r\n.modal h2 {\r\n  margin-top: 0;\r\n  margin-bottom: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.otp-input input {\r\n  letter-spacing: 4px;\r\n  font-size: 18px;\r\n  text-align: center;\r\n}\r\n\r\n.timer {\r\n  text-align: center;\r\n  color: #666;\r\n  font-size: 14px;\r\n  margin: 10px 0;\r\n}\r\n\r\n.success-message {\r\n  color: #4CAF50;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  margin: 20px 0;\r\n}\r\n\r\n.btn-primary {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  margin-top: 10px;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.btn-primary:disabled {\r\n  background-color: #9e9e9e;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.password-requirements {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\na.disabled {\r\n  color: #999;\r\n  cursor: not-allowed;\r\n  text-decoration: none;\r\n}\r\n\r\n.test-code-box {\r\n  background-color: #f8f9fa;\r\n  border: 1px dashed #ccc;\r\n  border-radius: 5px;\r\n  padding: 15px;\r\n  margin: 15px 0;\r\n  text-align: center;\r\n}\r\n\r\n.test-code {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  letter-spacing: 5px;\r\n  color: #4CAF50;\r\n  margin: 10px 0;\r\n  background-color: #fff;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  border: 1px solid #e0e0e0;\r\n}\r\n\r\n.test-note {\r\n  font-size: 12px;\r\n  color: #666;\r\n  font-style: italic;\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}