{"ast":null,"code":"import api from '@/services/api';\nimport axios from 'axios';\nexport default {\n  name: 'ProfileViewSimple',\n  data() {\n    return {\n      userProfile: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        address: '',\n        status: ''\n      },\n      profilePictureUrl: null,\n      isLoading: false,\n      errors: {\n        firstName: '',\n        lastName: ''\n      },\n      alert: {\n        show: false,\n        message: '',\n        type: 'success'\n      }\n    };\n  },\n  computed: {\n    userInitial() {\n      return this.userProfile.email ? this.userProfile.email.charAt(0).toUpperCase() : '?';\n    }\n  },\n  methods: {\n    async fetchUserProfile() {\n      try {\n        this.isLoading = true;\n        console.log('Fetching user profile...');\n        const response = await api.getUserProfile();\n        console.log('User profile response:', response.data);\n        const userData = response.data.user;\n        if (!userData) {\n          console.error('No user data found in response:', response.data);\n          this.showAlert('ไม่พบข้อมูลผู้ใช้ กรุณาเข้าสู่ระบบใหม่อีกครั้ง', 'error');\n          return;\n        }\n\n        // ดึงข้อมูลจาก localStorage ถ้าไม่มีข้อมูลจาก API\n        this.userProfile = {\n          firstName: userData.first_name || localStorage.getItem('userFirstName') || '',\n          lastName: userData.last_name || localStorage.getItem('userLastName') || '',\n          email: userData.user_email || localStorage.getItem('email') || '',\n          phone: userData.phone || localStorage.getItem('userPhone') || '',\n          address: userData.address || localStorage.getItem('userAddress') || '',\n          status: userData.status || localStorage.getItem('userStatus') || ''\n        };\n\n        // บันทึกข้อมูลลง localStorage เพื่อใช้ในกรณีที่ API ไม่ทำงาน\n        localStorage.setItem('userFirstName', this.userProfile.firstName);\n        localStorage.setItem('userLastName', this.userProfile.lastName);\n        localStorage.setItem('userPhone', this.userProfile.phone);\n        localStorage.setItem('userAddress', this.userProfile.address);\n\n        // First try to get from localStorage (base64 data) as it's most reliable\n        const storedPictureUrl = localStorage.getItem('profilePictureUrl');\n        if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\n          this.profilePictureUrl = storedPictureUrl;\n          return;\n        }\n\n        // If no localStorage image, check if profile has an image\n        if (userData.profile_picture) {\n          // For external URLs (like randomuser.me), use directly\n          if (userData.profile_picture.startsWith('http')) {\n            this.profilePictureUrl = userData.profile_picture;\n          } else {\n            // For server URLs, add timestamp and use relative path\n            const timestamp = new Date().getTime();\n            // ใช้ URL แบบสัมพัทธ์เพื่อให้ทำงานได้กับ proxy ของ Vue\n            const serverUrl = `${userData.profile_picture}?t=${timestamp}`;\n            this.profilePictureUrl = serverUrl;\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        this.showAlert('ไม่สามารถโหลดข้อมูลโปรไฟล์ได้ กรุณาลองใหม่อีกครั้ง', 'error');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    validateForm() {\n      let isValid = true;\n      this.errors.firstName = '';\n      this.errors.lastName = '';\n      if (!this.userProfile.firstName.trim()) {\n        this.errors.firstName = 'กรุณากรอกชื่อ';\n        isValid = false;\n      }\n      if (!this.userProfile.lastName.trim()) {\n        this.errors.lastName = 'กรุณากรอกนามสกุล';\n        isValid = false;\n      }\n      return isValid;\n    },\n    async saveProfile() {\n      if (!this.validateForm()) {\n        return;\n      }\n      try {\n        this.isLoading = true;\n        console.log('Saving profile data:', this.userProfile);\n        const response = await api.updateUserProfile({\n          firstName: this.userProfile.firstName,\n          lastName: this.userProfile.lastName,\n          phone: this.userProfile.phone,\n          address: this.userProfile.address\n        });\n        console.log('Profile updated:', response.data);\n\n        // บันทึกข้อมูลลง localStorage เพื่อใช้ในกรณีที่ API ไม่ทำงาน\n        localStorage.setItem('userFirstName', this.userProfile.firstName);\n        localStorage.setItem('userLastName', this.userProfile.lastName);\n        localStorage.setItem('userPhone', this.userProfile.phone);\n        localStorage.setItem('userAddress', this.userProfile.address);\n        this.showAlert('อัปเดตโปรไฟล์เรียบร้อยแล้ว', 'success');\n\n        // โหลดข้อมูลใหม่เพื่อให้แน่ใจว่าข้อมูลถูกต้อง\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Error updating profile:', error);\n        this.showAlert('ไม่สามารถอัปเดตโปรไฟล์ได้ กรุณาลองใหม่อีกครั้ง', 'error');\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    triggerPhotoUpload() {\n      // Trigger the file input click\n      this.$refs.photoInput.click();\n    },\n    async handleFileSelected(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // Validate file is an image - ตรวจสอบว่าเป็นไฟล์รูปภาพ\n      if (!file.type.startsWith('image/')) {\n        this.showAlert('กรุณาอัปโหลดไฟล์รูปภาพเท่านั้น', 'error');\n        return;\n      }\n\n      // ตรวจสอบขนาดไฟล์ - เพิ่มขนาดสูงสุดเป็น 50MB\n      const maxSizeInBytes = 50 * 1024 * 1024; // 50MB\n      if (file.size > maxSizeInBytes) {\n        this.showAlert(`ไฟล์มีขนาดใหญ่เกินไป (${(file.size / (1024 * 1024)).toFixed(2)} MB) กรุณาอัปโหลดไฟล์ขนาดไม่เกิน 50MB`, 'error');\n        return;\n      }\n\n      // Show file info for debugging\n      console.log('Selected file:', file.name, file.type, file.size);\n\n      // Show loading alert\n      this.showAlert('กำลังอัปโหลดรูปโปรไฟล์...', 'info');\n\n      // Convert file to base64\n      const reader = new FileReader();\n      reader.onload = async e => {\n        try {\n          let imageData = e.target.result;\n\n          // Log the image data format for debugging\n          console.log('Image data format:', imageData.substring(0, 50) + '...');\n\n          // Ensure correct MIME type for all image files\n          // ตรวจสอบและแก้ไข MIME type ให้ตรงกับประเภทไฟล์\n          if (file.type === 'image/jpeg' || file.type === 'image/jpg') {\n            // Make sure the MIME type in the data URL matches the file type\n            if (!imageData.startsWith('data:image/jpeg')) {\n              imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/jpeg');\n            }\n          } else if (file.type === 'image/png' && !imageData.startsWith('data:image/png')) {\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/png');\n          } else if (file.type === 'image/gif' && !imageData.startsWith('data:image/gif')) {\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/gif');\n          } else if (file.type === 'image/webp' && !imageData.startsWith('data:image/webp')) {\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/webp');\n          } else if (file.type === 'image/svg+xml' && !imageData.startsWith('data:image/svg+xml')) {\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/svg+xml');\n          } else if (file.type === 'image/bmp' && !imageData.startsWith('data:image/bmp')) {\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/bmp');\n          }\n\n          // ตรวจสอบว่า imageData มีรูปแบบที่ถูกต้อง\n          if (!imageData.includes('base64,')) {\n            console.error('Invalid image data format:', imageData.substring(0, 50) + '...');\n            this.showAlert('รูปแบบข้อมูลรูปภาพไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง', 'error');\n            return;\n          }\n\n          // Show preview immediately\n          this.profilePictureUrl = imageData;\n\n          // Get user ID from localStorage\n          const userId = localStorage.getItem('userId');\n\n          // ตรวจสอบว่ามี userId หรือไม่\n          if (!userId) {\n            console.error('No user ID found');\n            this.showAlert('ไม่พบข้อมูลผู้ใช้ กรุณาเข้าสู่ระบบใหม่อีกครั้ง', 'error');\n            return;\n          }\n\n          // Upload the image data\n          console.log('Uploading to userId:', userId);\n\n          // ตรวจสอบว่ามี token หรือไม่\n          const token = localStorage.getItem('token');\n          if (!token) {\n            console.error('No authentication token found');\n            this.showAlert('ไม่พบข้อมูลการเข้าสู่ระบบ กรุณาเข้าสู่ระบบใหม่อีกครั้ง', 'error');\n            return;\n          }\n\n          // ใช้ api service ที่เราสร้างไว้\n          console.log('Using api service to upload profile picture');\n          try {\n            console.log('Uploading profile picture for user ID:', userId);\n            // ใช้ api.uploadProfilePicture ที่เราเพิ่มไว้ใน api.js\n            const response = await api.uploadProfilePicture(userId, imageData);\n\n            // ถ้าใช้ api service จะได้ข้อมูลใน response.data โดยตรง\n            console.log('Profile picture uploaded:', response.data);\n            if (response.data.profilePictureUrl) {\n              // Keep using the base64 image data for display\n              localStorage.setItem('profilePictureUrl', imageData);\n\n              // Store the server URL for future page loads\n              localStorage.setItem('serverProfilePictureUrl', response.data.profilePictureUrl);\n            }\n            this.showAlert('อัปโหลดรูปโปรไฟล์เรียบร้อยแล้ว', 'success');\n            return; // ออกจากฟังก์ชันเพราะสำเร็จแล้ว\n          } catch (error) {\n            // จัดการข้อผิดพลาด\n            console.error('API error:', error);\n            let errorMessage = 'ไม่สามารถอัปโหลดรูปโปรไฟล์ได้';\n            if (error.response) {\n              // มีการตอบกลับจากเซิร์ฟเวอร์\n              console.error('Response error data:', error.response.data);\n              console.error('Response status:', error.response.status);\n              if (error.response.data && error.response.data.message) {\n                errorMessage = `${errorMessage}: ${error.response.data.message}`;\n              } else if (error.response.status === 413) {\n                errorMessage = 'ไฟล์รูปภาพมีขนาดใหญ่เกินไป กรุณาลดขนาดไฟล์และลองใหม่อีกครั้ง';\n              } else if (error.response.status === 415) {\n                errorMessage = 'รูปแบบไฟล์ไม่รองรับ กรุณาใช้ไฟล์รูปภาพที่มีนามสกุล .jpg, .png, .gif หรืออื่นๆ';\n              } else if (error.response.status === 404) {\n                errorMessage = 'ไม่พบ API สำหรับอัปโหลดรูปภาพ กรุณาติดต่อผู้ดูแลระบบ';\n              } else if (error.response.status === 500) {\n                errorMessage = 'เซิร์ฟเวอร์เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้งหรือติดต่อผู้ดูแลระบบ';\n              }\n            } else if (error.request) {\n              // ไม่ได้รับการตอบกลับจากเซิร์ฟเวอร์\n              errorMessage = 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้ กรุณาตรวจสอบการเชื่อมต่ออินเทอร์เน็ต';\n            } else {\n              // ข้อผิดพลาดอื่นๆ\n              errorMessage = `${errorMessage}: ${error.message}`;\n            }\n            this.showAlert(errorMessage, 'error');\n            return; // ออกจากฟังก์ชันเพราะเกิดข้อผิดพลาด\n          }\n          if (response.ok) {\n            const data = await response.json();\n            console.log('Profile picture uploaded:', data);\n            if (data.profilePictureUrl) {\n              // Keep using the base64 image data for display\n              // This ensures the image stays visible\n              localStorage.setItem('profilePictureUrl', imageData);\n\n              // Store the server URL for future page loads\n              localStorage.setItem('serverProfilePictureUrl', data.profilePictureUrl);\n            }\n            this.showAlert('อัปโหลดรูปโปรไฟล์เรียบร้อยแล้ว', 'success');\n\n            // Don't dispatch event or reload the page\n            // This prevents flickering and unnecessary reloads\n          } else {\n            console.error('Failed to upload profile picture. Status:', response.status, response.statusText);\n\n            // ข้อความแสดงข้อผิดพลาดที่เฉพาะเจาะจงมากขึ้น\n            let errorMessage = 'ไม่สามารถอัปโหลดรูปโปรไฟล์ได้';\n            try {\n              // ตรวจสอบว่าการตอบกลับเป็น JSON หรือไม่\n              const contentType = response.headers.get('content-type');\n              if (contentType && contentType.includes('application/json')) {\n                const errorData = await response.json();\n                console.error('Error data:', errorData);\n                if (errorData.message) {\n                  if (errorData.message.includes('Invalid image format')) {\n                    errorMessage = 'รูปแบบไฟล์ไม่ถูกต้อง กรุณาใช้ไฟล์รูปภาพที่มีนามสกุล .jpg, .png, .gif หรืออื่นๆ';\n                  } else {\n                    errorMessage = `${errorMessage}: ${errorData.message}`;\n                  }\n                }\n              } else {\n                // ถ้าไม่ใช่ JSON ให้ใช้ status code แทน\n                const responseText = await response.text();\n                console.error('Response is not JSON:', responseText.substring(0, 100) + '...');\n              }\n            } catch (parseError) {\n              console.error('Error parsing response:', parseError);\n            }\n\n            // ใช้ status code ในกรณีที่ไม่สามารถอ่าน JSON ได้\n            if (response.status === 413) {\n              errorMessage = 'ไฟล์รูปภาพมีขนาดใหญ่เกินไป กรุณาลดขนาดไฟล์และลองใหม่อีกครั้ง';\n            } else if (response.status === 415) {\n              errorMessage = 'รูปแบบไฟล์ไม่รองรับ กรุณาใช้ไฟล์รูปภาพที่มีนามสกุล .jpg, .png, .gif หรืออื่นๆ';\n            } else if (response.status === 404) {\n              errorMessage = 'ไม่พบ API สำหรับอัปโหลดรูปภาพ กรุณาติดต่อผู้ดูแลระบบ';\n            } else if (response.status === 500) {\n              errorMessage = 'เซิร์ฟเวอร์เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้งหรือติดต่อผู้ดูแลระบบ';\n            } else {\n              errorMessage = `${errorMessage}: ${response.status} ${response.statusText}`;\n            }\n            this.showAlert(errorMessage, 'error');\n\n            // Reset the file input so the user can try again\n            this.$refs.photoInput.value = '';\n          }\n        } catch (error) {\n          console.error('Error uploading profile picture:', error);\n\n          // ข้อความแสดงข้อผิดพลาดที่เฉพาะเจาะจงมากขึ้น\n          let errorMessage = 'ไม่สามารถอัปโหลดรูปโปรไฟล์ได้';\n          if (error.message) {\n            if (error.message.includes('NetworkError') || error.message.includes('Failed to fetch')) {\n              errorMessage = 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้ กรุณาตรวจสอบการเชื่อมต่ออินเทอร์เน็ต';\n            } else if (error.message.includes('timeout')) {\n              errorMessage = 'การเชื่อมต่อกับเซิร์ฟเวอร์ใช้เวลานานเกินไป กรุณาลองใหม่อีกครั้ง';\n            } else {\n              errorMessage = `${errorMessage}: ${error.message}`;\n            }\n          } else {\n            errorMessage = `${errorMessage}: เกิดข้อผิดพลาดที่ไม่ทราบสาเหตุ`;\n          }\n          this.showAlert(errorMessage, 'error');\n\n          // Reset the file input so the user can try again\n          this.$refs.photoInput.value = '';\n        }\n      };\n      reader.readAsDataURL(file);\n    },\n    formatStatus(status) {\n      if (!status) return 'ไม่ทราบสถานะ';\n      const statusMap = {\n        'headman': 'ผู้ใหญ่บ้าน',\n        'assistant': 'ผู้ช่วยผู้ใหญ่บ้าน',\n        'villager': 'ลูกบ้าน',\n        'pending': 'รอการอนุมัติ'\n      };\n      return statusMap[status.toLowerCase()] || status.charAt(0).toUpperCase() + status.slice(1);\n    },\n    showAlert(message, type = 'success') {\n      this.alert = {\n        show: true,\n        message,\n        type\n      };\n\n      // Hide alert after 3 seconds\n      setTimeout(() => {\n        this.alert.show = false;\n      }, 3000);\n    },\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // If it's a data URL (base64), return as is\n      if (url.startsWith('data:')) {\n        return url;\n      }\n\n      // If it's a relative URL, use it as is (proxy will handle it)\n      if (url.startsWith('/')) {\n        // Add a timestamp to prevent caching\n        const timestamp = new Date().getTime();\n        // Use relative URL for proxy\n        return `${url}?t=${timestamp}`;\n      }\n\n      // If it's an https URL (like randomuser.me), return as is\n      if (url.startsWith('http')) {\n        return url;\n      }\n\n      // Otherwise, return the URL as is\n      return url;\n    },\n    handleImageError(e) {\n      console.error('Error loading image:', e);\n      console.log('Failed image URL:', e.target.src);\n\n      // Try to load the image directly from the server\n      const url = e.target.src;\n      if (url.includes('/uploads/')) {\n        const imagePath = url.split('?')[0]; // Remove query parameters\n        // ใช้ URL แบบสัมพัทธ์\n        const newUrl = `${imagePath.substring(imagePath.indexOf('/uploads/'))}`;\n        console.log('Trying alternative URL:', newUrl);\n        e.target.src = newUrl;\n        return;\n      }\n\n      // Try to use stored base64 image if available\n      const storedPictureUrl = localStorage.getItem('profilePictureUrl');\n      if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\n        console.log('Using stored base64 image');\n        this.profilePictureUrl = storedPictureUrl;\n        return;\n      }\n\n      // If all else fails, fall back to placeholder\n      this.profilePictureUrl = null;\n    }\n  },\n  mounted() {\n    this.fetchUserProfile();\n  }\n};","map":{"version":3,"names":["api","axios","name","data","userProfile","firstName","lastName","email","phone","address","status","profilePictureUrl","isLoading","errors","alert","show","message","type","computed","userInitial","charAt","toUpperCase","methods","fetchUserProfile","console","log","response","getUserProfile","userData","user","error","showAlert","first_name","localStorage","getItem","last_name","user_email","setItem","storedPictureUrl","startsWith","profile_picture","timestamp","Date","getTime","serverUrl","validateForm","isValid","trim","saveProfile","updateUserProfile","triggerPhotoUpload","$refs","photoInput","click","handleFileSelected","event","file","target","files","maxSizeInBytes","size","toFixed","reader","FileReader","onload","e","imageData","result","substring","replace","includes","userId","token","uploadProfilePicture","errorMessage","request","ok","json","statusText","contentType","headers","get","errorData","responseText","text","parseError","value","readAsDataURL","formatStatus","statusMap","toLowerCase","slice","setTimeout","getFullImageUrl","url","handleImageError","src","imagePath","split","newUrl","indexOf","mounted"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\ProfileViewSimple.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <h1>โปรไฟล์ของฉัน</h1>\r\n    \r\n    <div class=\"profile-card\">\r\n      <div class=\"profile-header\">\r\n        <div class=\"profile-photo\">\r\n          <div v-if=\"profilePictureUrl\" class=\"photo-container\">\r\n            <img :src=\"getFullImageUrl(profilePictureUrl)\" alt=\"Profile Photo\" @error=\"handleImageError\">\r\n          </div>\r\n          <div v-else class=\"photo-placeholder\">\r\n            {{ userInitial }}\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            ref=\"photoInput\"\r\n            style=\"display: none;\"\r\n            accept=\"image/*\"\r\n            @change=\"handleFileSelected\"\r\n          >\r\n          <button @click=\"triggerPhotoUpload\" class=\"upload-btn\">อัปโหลดรูปภาพ</button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"profile-form\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">ชื่อ</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"firstName\" \r\n            v-model=\"userProfile.firstName\" \r\n            :class=\"{ 'error': errors.firstName }\"\r\n          >\r\n          <span v-if=\"errors.firstName\" class=\"error-text\">{{ errors.firstName }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">นามสกุล</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"lastName\" \r\n            v-model=\"userProfile.lastName\" \r\n            :class=\"{ 'error': errors.lastName }\"\r\n          >\r\n          <span v-if=\"errors.lastName\" class=\"error-text\">{{ errors.lastName }}</span>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"email\">อีเมล</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            v-model=\"userProfile.email\" \r\n            disabled\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"phone\">เบอร์โทรศัพท์</label>\r\n          <input \r\n            type=\"tel\" \r\n            id=\"phone\" \r\n            v-model=\"userProfile.phone\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"address\">ที่อยู่</label>\r\n          <textarea \r\n            id=\"address\" \r\n            v-model=\"userProfile.address\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"status\">สถานะ</label>\r\n          <input \r\n            type=\"text\" \r\n            id=\"status\" \r\n            :value=\"formatStatus(userProfile.status)\" \r\n            disabled\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-actions\">\r\n          <button \r\n            @click=\"saveProfile\" \r\n            class=\"save-btn\" \r\n            :disabled=\"isLoading\"\r\n          >\r\n            {{ isLoading ? 'กำลังบันทึก...' : 'บันทึก' }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div v-if=\"alert.show\" class=\"alert\" :class=\"'alert-' + alert.type\">\r\n      {{ alert.message }}\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ProfileViewSimple',\r\n  data() {\r\n    return {\r\n      userProfile: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n        address: '',\r\n        status: ''\r\n      },\r\n      profilePictureUrl: null,\r\n      isLoading: false,\r\n      errors: {\r\n        firstName: '',\r\n        lastName: ''\r\n      },\r\n      alert: {\r\n        show: false,\r\n        message: '',\r\n        type: 'success'\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    userInitial() {\r\n      return this.userProfile.email ? this.userProfile.email.charAt(0).toUpperCase() : '?';\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUserProfile() {\r\n      try {\r\n        this.isLoading = true;\r\n        console.log('Fetching user profile...');\r\n        const response = await api.getUserProfile();\r\n        console.log('User profile response:', response.data);\r\n\r\n        const userData = response.data.user;\r\n        if (!userData) {\r\n          console.error('No user data found in response:', response.data);\r\n          this.showAlert('ไม่พบข้อมูลผู้ใช้ กรุณาเข้าสู่ระบบใหม่อีกครั้ง', 'error');\r\n          return;\r\n        }\r\n\r\n        // ดึงข้อมูลจาก localStorage ถ้าไม่มีข้อมูลจาก API\r\n        this.userProfile = {\r\n          firstName: userData.first_name || localStorage.getItem('userFirstName') || '',\r\n          lastName: userData.last_name || localStorage.getItem('userLastName') || '',\r\n          email: userData.user_email || localStorage.getItem('email') || '',\r\n          phone: userData.phone || localStorage.getItem('userPhone') || '',\r\n          address: userData.address || localStorage.getItem('userAddress') || '',\r\n          status: userData.status || localStorage.getItem('userStatus') || ''\r\n        };\r\n\r\n        // บันทึกข้อมูลลง localStorage เพื่อใช้ในกรณีที่ API ไม่ทำงาน\r\n        localStorage.setItem('userFirstName', this.userProfile.firstName);\r\n        localStorage.setItem('userLastName', this.userProfile.lastName);\r\n        localStorage.setItem('userPhone', this.userProfile.phone);\r\n        localStorage.setItem('userAddress', this.userProfile.address);\r\n\r\n        // First try to get from localStorage (base64 data) as it's most reliable\r\n        const storedPictureUrl = localStorage.getItem('profilePictureUrl');\r\n        if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n          this.profilePictureUrl = storedPictureUrl;\r\n          return;\r\n        }\r\n\r\n        // If no localStorage image, check if profile has an image\r\n        if (userData.profile_picture) {\r\n          // For external URLs (like randomuser.me), use directly\r\n          if (userData.profile_picture.startsWith('http')) {\r\n            this.profilePictureUrl = userData.profile_picture;\r\n          } else {\r\n            // For server URLs, add timestamp and use relative path\r\n            const timestamp = new Date().getTime();\r\n            // ใช้ URL แบบสัมพัทธ์เพื่อให้ทำงานได้กับ proxy ของ Vue\r\n            const serverUrl = `${userData.profile_picture}?t=${timestamp}`;\r\n            this.profilePictureUrl = serverUrl;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user profile:', error);\r\n        this.showAlert('ไม่สามารถโหลดข้อมูลโปรไฟล์ได้ กรุณาลองใหม่อีกครั้ง', 'error');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    \r\n    validateForm() {\r\n      let isValid = true;\r\n      this.errors.firstName = '';\r\n      this.errors.lastName = '';\r\n      \r\n      if (!this.userProfile.firstName.trim()) {\r\n        this.errors.firstName = 'กรุณากรอกชื่อ';\r\n        isValid = false;\r\n      }\r\n      \r\n      if (!this.userProfile.lastName.trim()) {\r\n        this.errors.lastName = 'กรุณากรอกนามสกุล';\r\n        isValid = false;\r\n      }\r\n      \r\n      return isValid;\r\n    },\r\n    \r\n    async saveProfile() {\r\n      if (!this.validateForm()) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        this.isLoading = true;\r\n        console.log('Saving profile data:', this.userProfile);\r\n\r\n        const response = await api.updateUserProfile({\r\n          firstName: this.userProfile.firstName,\r\n          lastName: this.userProfile.lastName,\r\n          phone: this.userProfile.phone,\r\n          address: this.userProfile.address\r\n        });\r\n\r\n        console.log('Profile updated:', response.data);\r\n\r\n        // บันทึกข้อมูลลง localStorage เพื่อใช้ในกรณีที่ API ไม่ทำงาน\r\n        localStorage.setItem('userFirstName', this.userProfile.firstName);\r\n        localStorage.setItem('userLastName', this.userProfile.lastName);\r\n        localStorage.setItem('userPhone', this.userProfile.phone);\r\n        localStorage.setItem('userAddress', this.userProfile.address);\r\n\r\n        this.showAlert('อัปเดตโปรไฟล์เรียบร้อยแล้ว', 'success');\r\n\r\n        // โหลดข้อมูลใหม่เพื่อให้แน่ใจว่าข้อมูลถูกต้อง\r\n        await this.fetchUserProfile();\r\n      } catch (error) {\r\n        console.error('Error updating profile:', error);\r\n        this.showAlert('ไม่สามารถอัปเดตโปรไฟล์ได้ กรุณาลองใหม่อีกครั้ง', 'error');\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    \r\n    triggerPhotoUpload() {\r\n      // Trigger the file input click\r\n      this.$refs.photoInput.click();\r\n    },\r\n\r\n    async handleFileSelected(event) {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n\r\n      // Validate file is an image - ตรวจสอบว่าเป็นไฟล์รูปภาพ\r\n      if (!file.type.startsWith('image/')) {\r\n        this.showAlert('กรุณาอัปโหลดไฟล์รูปภาพเท่านั้น', 'error');\r\n        return;\r\n      }\r\n\r\n      // ตรวจสอบขนาดไฟล์ - เพิ่มขนาดสูงสุดเป็น 50MB\r\n      const maxSizeInBytes = 50 * 1024 * 1024; // 50MB\r\n      if (file.size > maxSizeInBytes) {\r\n        this.showAlert(`ไฟล์มีขนาดใหญ่เกินไป (${(file.size / (1024 * 1024)).toFixed(2)} MB) กรุณาอัปโหลดไฟล์ขนาดไม่เกิน 50MB`, 'error');\r\n        return;\r\n      }\r\n\r\n      // Show file info for debugging\r\n      console.log('Selected file:', file.name, file.type, file.size);\r\n\r\n      // Show loading alert\r\n      this.showAlert('กำลังอัปโหลดรูปโปรไฟล์...', 'info');\r\n\r\n      // Convert file to base64\r\n      const reader = new FileReader();\r\n      reader.onload = async (e) => {\r\n        try {\r\n          let imageData = e.target.result;\r\n\r\n          // Log the image data format for debugging\r\n          console.log('Image data format:', imageData.substring(0, 50) + '...');\r\n\r\n          // Ensure correct MIME type for all image files\r\n          // ตรวจสอบและแก้ไข MIME type ให้ตรงกับประเภทไฟล์\r\n          if (file.type === 'image/jpeg' || file.type === 'image/jpg') {\r\n            // Make sure the MIME type in the data URL matches the file type\r\n            if (!imageData.startsWith('data:image/jpeg')) {\r\n              imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/jpeg');\r\n            }\r\n          } else if (file.type === 'image/png' && !imageData.startsWith('data:image/png')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/png');\r\n          } else if (file.type === 'image/gif' && !imageData.startsWith('data:image/gif')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/gif');\r\n          } else if (file.type === 'image/webp' && !imageData.startsWith('data:image/webp')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/webp');\r\n          } else if (file.type === 'image/svg+xml' && !imageData.startsWith('data:image/svg+xml')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/svg+xml');\r\n          } else if (file.type === 'image/bmp' && !imageData.startsWith('data:image/bmp')) {\r\n            imageData = imageData.replace(/^data:image\\/[^;]+/, 'data:image/bmp');\r\n          }\r\n\r\n          // ตรวจสอบว่า imageData มีรูปแบบที่ถูกต้อง\r\n          if (!imageData.includes('base64,')) {\r\n            console.error('Invalid image data format:', imageData.substring(0, 50) + '...');\r\n            this.showAlert('รูปแบบข้อมูลรูปภาพไม่ถูกต้อง กรุณาลองใหม่อีกครั้ง', 'error');\r\n            return;\r\n          }\r\n\r\n          // Show preview immediately\r\n          this.profilePictureUrl = imageData;\r\n\r\n          // Get user ID from localStorage\r\n          const userId = localStorage.getItem('userId');\r\n\r\n          // ตรวจสอบว่ามี userId หรือไม่\r\n          if (!userId) {\r\n            console.error('No user ID found');\r\n            this.showAlert('ไม่พบข้อมูลผู้ใช้ กรุณาเข้าสู่ระบบใหม่อีกครั้ง', 'error');\r\n            return;\r\n          }\r\n\r\n          // Upload the image data\r\n          console.log('Uploading to userId:', userId);\r\n\r\n          // ตรวจสอบว่ามี token หรือไม่\r\n          const token = localStorage.getItem('token');\r\n          if (!token) {\r\n            console.error('No authentication token found');\r\n            this.showAlert('ไม่พบข้อมูลการเข้าสู่ระบบ กรุณาเข้าสู่ระบบใหม่อีกครั้ง', 'error');\r\n            return;\r\n          }\r\n\r\n          // ใช้ api service ที่เราสร้างไว้\r\n          console.log('Using api service to upload profile picture');\r\n\r\n          try {\r\n            console.log('Uploading profile picture for user ID:', userId);\r\n            // ใช้ api.uploadProfilePicture ที่เราเพิ่มไว้ใน api.js\r\n            const response = await api.uploadProfilePicture(userId, imageData);\r\n\r\n            // ถ้าใช้ api service จะได้ข้อมูลใน response.data โดยตรง\r\n            console.log('Profile picture uploaded:', response.data);\r\n\r\n            if (response.data.profilePictureUrl) {\r\n              // Keep using the base64 image data for display\r\n              localStorage.setItem('profilePictureUrl', imageData);\r\n\r\n              // Store the server URL for future page loads\r\n              localStorage.setItem('serverProfilePictureUrl', response.data.profilePictureUrl);\r\n            }\r\n\r\n            this.showAlert('อัปโหลดรูปโปรไฟล์เรียบร้อยแล้ว', 'success');\r\n            return; // ออกจากฟังก์ชันเพราะสำเร็จแล้ว\r\n          } catch (error) {\r\n            // จัดการข้อผิดพลาด\r\n            console.error('API error:', error);\r\n\r\n            let errorMessage = 'ไม่สามารถอัปโหลดรูปโปรไฟล์ได้';\r\n\r\n            if (error.response) {\r\n              // มีการตอบกลับจากเซิร์ฟเวอร์\r\n              console.error('Response error data:', error.response.data);\r\n              console.error('Response status:', error.response.status);\r\n\r\n              if (error.response.data && error.response.data.message) {\r\n                errorMessage = `${errorMessage}: ${error.response.data.message}`;\r\n              } else if (error.response.status === 413) {\r\n                errorMessage = 'ไฟล์รูปภาพมีขนาดใหญ่เกินไป กรุณาลดขนาดไฟล์และลองใหม่อีกครั้ง';\r\n              } else if (error.response.status === 415) {\r\n                errorMessage = 'รูปแบบไฟล์ไม่รองรับ กรุณาใช้ไฟล์รูปภาพที่มีนามสกุล .jpg, .png, .gif หรืออื่นๆ';\r\n              } else if (error.response.status === 404) {\r\n                errorMessage = 'ไม่พบ API สำหรับอัปโหลดรูปภาพ กรุณาติดต่อผู้ดูแลระบบ';\r\n              } else if (error.response.status === 500) {\r\n                errorMessage = 'เซิร์ฟเวอร์เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้งหรือติดต่อผู้ดูแลระบบ';\r\n              }\r\n            } else if (error.request) {\r\n              // ไม่ได้รับการตอบกลับจากเซิร์ฟเวอร์\r\n              errorMessage = 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้ กรุณาตรวจสอบการเชื่อมต่ออินเทอร์เน็ต';\r\n            } else {\r\n              // ข้อผิดพลาดอื่นๆ\r\n              errorMessage = `${errorMessage}: ${error.message}`;\r\n            }\r\n\r\n            this.showAlert(errorMessage, 'error');\r\n            return; // ออกจากฟังก์ชันเพราะเกิดข้อผิดพลาด\r\n          }\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Profile picture uploaded:', data);\r\n\r\n            if (data.profilePictureUrl) {\r\n              // Keep using the base64 image data for display\r\n              // This ensures the image stays visible\r\n              localStorage.setItem('profilePictureUrl', imageData);\r\n\r\n              // Store the server URL for future page loads\r\n              localStorage.setItem('serverProfilePictureUrl', data.profilePictureUrl);\r\n            }\r\n\r\n            this.showAlert('อัปโหลดรูปโปรไฟล์เรียบร้อยแล้ว', 'success');\r\n\r\n            // Don't dispatch event or reload the page\r\n            // This prevents flickering and unnecessary reloads\r\n          } else {\r\n            console.error('Failed to upload profile picture. Status:', response.status, response.statusText);\r\n\r\n            // ข้อความแสดงข้อผิดพลาดที่เฉพาะเจาะจงมากขึ้น\r\n            let errorMessage = 'ไม่สามารถอัปโหลดรูปโปรไฟล์ได้';\r\n\r\n            try {\r\n              // ตรวจสอบว่าการตอบกลับเป็น JSON หรือไม่\r\n              const contentType = response.headers.get('content-type');\r\n              if (contentType && contentType.includes('application/json')) {\r\n                const errorData = await response.json();\r\n                console.error('Error data:', errorData);\r\n\r\n                if (errorData.message) {\r\n                  if (errorData.message.includes('Invalid image format')) {\r\n                    errorMessage = 'รูปแบบไฟล์ไม่ถูกต้อง กรุณาใช้ไฟล์รูปภาพที่มีนามสกุล .jpg, .png, .gif หรืออื่นๆ';\r\n                  } else {\r\n                    errorMessage = `${errorMessage}: ${errorData.message}`;\r\n                  }\r\n                }\r\n              } else {\r\n                // ถ้าไม่ใช่ JSON ให้ใช้ status code แทน\r\n                const responseText = await response.text();\r\n                console.error('Response is not JSON:', responseText.substring(0, 100) + '...');\r\n              }\r\n            } catch (parseError) {\r\n              console.error('Error parsing response:', parseError);\r\n            }\r\n\r\n            // ใช้ status code ในกรณีที่ไม่สามารถอ่าน JSON ได้\r\n            if (response.status === 413) {\r\n              errorMessage = 'ไฟล์รูปภาพมีขนาดใหญ่เกินไป กรุณาลดขนาดไฟล์และลองใหม่อีกครั้ง';\r\n            } else if (response.status === 415) {\r\n              errorMessage = 'รูปแบบไฟล์ไม่รองรับ กรุณาใช้ไฟล์รูปภาพที่มีนามสกุล .jpg, .png, .gif หรืออื่นๆ';\r\n            } else if (response.status === 404) {\r\n              errorMessage = 'ไม่พบ API สำหรับอัปโหลดรูปภาพ กรุณาติดต่อผู้ดูแลระบบ';\r\n            } else if (response.status === 500) {\r\n              errorMessage = 'เซิร์ฟเวอร์เกิดข้อผิดพลาด กรุณาลองใหม่อีกครั้งหรือติดต่อผู้ดูแลระบบ';\r\n            } else {\r\n              errorMessage = `${errorMessage}: ${response.status} ${response.statusText}`;\r\n            }\r\n\r\n            this.showAlert(errorMessage, 'error');\r\n\r\n            // Reset the file input so the user can try again\r\n            this.$refs.photoInput.value = '';\r\n          }\r\n        } catch (error) {\r\n          console.error('Error uploading profile picture:', error);\r\n\r\n          // ข้อความแสดงข้อผิดพลาดที่เฉพาะเจาะจงมากขึ้น\r\n          let errorMessage = 'ไม่สามารถอัปโหลดรูปโปรไฟล์ได้';\r\n\r\n          if (error.message) {\r\n            if (error.message.includes('NetworkError') || error.message.includes('Failed to fetch')) {\r\n              errorMessage = 'ไม่สามารถเชื่อมต่อกับเซิร์ฟเวอร์ได้ กรุณาตรวจสอบการเชื่อมต่ออินเทอร์เน็ต';\r\n            } else if (error.message.includes('timeout')) {\r\n              errorMessage = 'การเชื่อมต่อกับเซิร์ฟเวอร์ใช้เวลานานเกินไป กรุณาลองใหม่อีกครั้ง';\r\n            } else {\r\n              errorMessage = `${errorMessage}: ${error.message}`;\r\n            }\r\n          } else {\r\n            errorMessage = `${errorMessage}: เกิดข้อผิดพลาดที่ไม่ทราบสาเหตุ`;\r\n          }\r\n\r\n          this.showAlert(errorMessage, 'error');\r\n\r\n          // Reset the file input so the user can try again\r\n          this.$refs.photoInput.value = '';\r\n        }\r\n      };\r\n      reader.readAsDataURL(file);\r\n    },\r\n    \r\n    formatStatus(status) {\r\n      if (!status) return 'ไม่ทราบสถานะ';\r\n      \r\n      const statusMap = {\r\n        'headman': 'ผู้ใหญ่บ้าน',\r\n        'assistant': 'ผู้ช่วยผู้ใหญ่บ้าน',\r\n        'villager': 'ลูกบ้าน',\r\n        'pending': 'รอการอนุมัติ'\r\n      };\r\n      \r\n      return statusMap[status.toLowerCase()] || status.charAt(0).toUpperCase() + status.slice(1);\r\n    },\r\n    \r\n    showAlert(message, type = 'success') {\r\n      this.alert = {\r\n        show: true,\r\n        message,\r\n        type\r\n      };\r\n\r\n      // Hide alert after 3 seconds\r\n      setTimeout(() => {\r\n        this.alert.show = false;\r\n      }, 3000);\r\n    },\r\n\r\n    getFullImageUrl(url) {\r\n      if (!url) return '';\r\n\r\n      // If it's a data URL (base64), return as is\r\n      if (url.startsWith('data:')) {\r\n        return url;\r\n      }\r\n\r\n      // If it's a relative URL, use it as is (proxy will handle it)\r\n      if (url.startsWith('/')) {\r\n        // Add a timestamp to prevent caching\r\n        const timestamp = new Date().getTime();\r\n        // Use relative URL for proxy\r\n        return `${url}?t=${timestamp}`;\r\n      }\r\n\r\n      // If it's an https URL (like randomuser.me), return as is\r\n      if (url.startsWith('http')) {\r\n        return url;\r\n      }\r\n\r\n      // Otherwise, return the URL as is\r\n      return url;\r\n    },\r\n\r\n    handleImageError(e) {\r\n      console.error('Error loading image:', e);\r\n      console.log('Failed image URL:', e.target.src);\r\n\r\n      // Try to load the image directly from the server\r\n      const url = e.target.src;\r\n      if (url.includes('/uploads/')) {\r\n        const imagePath = url.split('?')[0]; // Remove query parameters\r\n        // ใช้ URL แบบสัมพัทธ์\r\n        const newUrl = `${imagePath.substring(imagePath.indexOf('/uploads/'))}`;\r\n        console.log('Trying alternative URL:', newUrl);\r\n        e.target.src = newUrl;\r\n        return;\r\n      }\r\n\r\n      // Try to use stored base64 image if available\r\n      const storedPictureUrl = localStorage.getItem('profilePictureUrl');\r\n      if (storedPictureUrl && storedPictureUrl.startsWith('data:image/')) {\r\n        console.log('Using stored base64 image');\r\n        this.profilePictureUrl = storedPictureUrl;\r\n        return;\r\n      }\r\n\r\n      // If all else fails, fall back to placeholder\r\n      this.profilePictureUrl = null;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUserProfile();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.profile-container {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.profile-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.profile-header {\r\n  padding: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: #f5f5f5;\r\n  border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.profile-photo {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.photo-container {\r\n  width: 256px;\r\n  height: 256px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-bottom: 15px;\r\n  border: 3px solid white;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.photo-container img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.photo-placeholder {\r\n  width: 256px;\r\n  height: 256px;\r\n  border-radius: 50%;\r\n  background-color: #e0e0e0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 72px; /* เพิ่มขนาดตัวอักษรให้เหมาะสมกับขนาดที่ใหญ่ขึ้น */\r\n  font-weight: bold;\r\n  color: #757575;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.upload-btn {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.upload-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.profile-form {\r\n  padding: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\ninput, textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\ninput.error {\r\n  border-color: #d32f2f;\r\n}\r\n\r\n.error-text {\r\n  color: #d32f2f;\r\n  font-size: 14px;\r\n  margin-top: 5px;\r\n  display: block;\r\n}\r\n\r\ntextarea {\r\n  min-height: 100px;\r\n  resize: vertical;\r\n}\r\n\r\ninput:disabled, textarea:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.save-btn {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.save-btn:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.save-btn:disabled {\r\n  background-color: #9e9e9e;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.alert {\r\n  padding: 15px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n  animation: fadeIn 0.3s;\r\n}\r\n\r\n.alert-success {\r\n  background-color: #dff0d8;\r\n  color: #3c763d;\r\n  border: 1px solid #d6e9c6;\r\n}\r\n\r\n.alert-error {\r\n  background-color: #f2dede;\r\n  color: #a94442;\r\n  border: 1px solid #ebccd1;\r\n}\r\n\r\n.alert-info {\r\n  background-color: #d9edf7;\r\n  color: #31708f;\r\n  border: 1px solid #bce8f1;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}