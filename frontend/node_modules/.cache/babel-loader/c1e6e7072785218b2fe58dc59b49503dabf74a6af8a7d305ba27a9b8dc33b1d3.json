{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'RegisterView',\n  data() {\n    return {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: null,\n      loading: false\n    };\n  },\n  methods: {\n    ...mapActions(['register']),\n    async handleRegister() {\n      // Validate passwords match\n      if (this.password !== this.confirmPassword) {\n        this.error = 'Passwords do not match';\n        return;\n      }\n      this.loading = true;\n      this.error = null;\n      try {\n        await this.register({\n          email: this.email,\n          password: this.password\n        });\n        this.$router.push('/');\n      } catch (error) {\n        console.error('Registration error:', error);\n        this.error = error.response?.data?.message || 'Registration failed. Please try again.';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","email","password","confirmPassword","error","loading","methods","handleRegister","register","$router","push","console","response","message"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"register\">\r\n    <h1>Register</h1>\r\n    <div class=\"form-container\">\r\n      <form @submit.prevent=\"handleRegister\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\" \r\n            v-model=\"email\" \r\n            required \r\n            placeholder=\"Enter your email\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"password\" \r\n            v-model=\"password\" \r\n            required \r\n            placeholder=\"Enter your password\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">Confirm Password</label>\r\n          <input \r\n            type=\"password\" \r\n            id=\"confirmPassword\" \r\n            v-model=\"confirmPassword\" \r\n            required \r\n            placeholder=\"Confirm your password\"\r\n          >\r\n        </div>\r\n        \r\n        <button type=\"submit\" :disabled=\"loading\">\r\n          {{ loading ? 'Registering...' : 'Register' }}\r\n        </button>\r\n        \r\n        <p v-if=\"error\" class=\"error-message\">{{ error }}</p>\r\n      </form>\r\n      \r\n      <p>\r\n        Already have an account? \r\n        <router-link to=\"/login\" class=\"link\">Login here</router-link>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  name: 'RegisterView',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      error: null,\r\n      loading: false\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['register']),\r\n    async handleRegister() {\r\n      // Validate passwords match\r\n      if (this.password !== this.confirmPassword) {\r\n        this.error = 'Passwords do not match'\r\n        return\r\n      }\r\n\r\n      this.loading = true\r\n      this.error = null\r\n\r\n      try {\r\n        await this.register({\r\n          email: this.email,\r\n          password: this.password\r\n        })\r\n        this.$router.push('/')\r\n      } catch (error) {\r\n        console.error('Registration error:', error)\r\n        this.error = error.response?.data?.message || 'Registration failed. Please try again.'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AAsDA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGR,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3B,MAAMS,cAAcA,CAAA,EAAG;MACrB;MACA,IAAI,IAAI,CAACL,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACC,KAAI,GAAI,wBAAuB;QACpC;MACF;MAEA,IAAI,CAACC,OAAM,GAAI,IAAG;MAClB,IAAI,CAACD,KAAI,GAAI,IAAG;MAEhB,IAAI;QACF,MAAM,IAAI,CAACI,QAAQ,CAAC;UAClBP,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QACD,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,GAAG;MACvB,EAAE,OAAON,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,qBAAqB,EAAEA,KAAK;QAC1C,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACQ,QAAQ,EAAEZ,IAAI,EAAEa,OAAM,IAAK,wCAAuC;MACvF,UAAU;QACR,IAAI,CAACR,OAAM,GAAI,KAAI;MACrB;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}