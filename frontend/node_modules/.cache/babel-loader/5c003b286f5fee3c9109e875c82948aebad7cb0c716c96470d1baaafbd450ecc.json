{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_2 = {\n  key: 1,\n  style: {\n    \"color\": \"green\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", null, \"รีเซ็ตรหัสผ่าน\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.resetPassword && $options.resetPassword(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"อีเมล:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"password\"\n  }, \"รหัสผ่านใหม่:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"ยืนยันรหัสผ่านใหม่:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.success ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.success), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[7] || (_cache[7] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"รีเซ็ตรหัสผ่าน\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", null, [_createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"กลับไปยังหน้าเข้าสู่ระบบ\")])),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["key","style","_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","resetPassword","for","type","id","$event","$data","email","required","password","confirmPassword","error","_hoisted_1","_toDisplayString","_createCommentVNode","success","_hoisted_2","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\HP\\Documents\\GitHub\\Mooban\\frontend\\src\\views\\ResetPasswordSimple.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>รีเซ็ตรหัสผ่าน</h1>\r\n    <form @submit.prevent=\"resetPassword\">\r\n      <div>\r\n        <label for=\"email\">อีเมล:</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"email\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"password\">รหัสผ่านใหม่:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <div>\r\n        <label for=\"confirmPassword\">ยืนยันรหัสผ่านใหม่:</label>\r\n        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\r\n      </div>\r\n      <div v-if=\"error\" style=\"color: red;\">{{ error }}</div>\r\n      <div v-if=\"success\" style=\"color: green;\">{{ success }}</div>\r\n      <button type=\"submit\">รีเซ็ตรหัสผ่าน</button>\r\n    </form>\r\n    <div>\r\n      <router-link to=\"/login\">กลับไปยังหน้าเข้าสู่ระบบ</router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      error: '',\r\n      success: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async resetPassword() {\r\n      // Reset messages\r\n      this.error = '';\r\n      this.success = '';\r\n      \r\n      // Validate inputs\r\n      if (!this.email || !this.password || !this.confirmPassword) {\r\n        this.error = 'กรุณากรอกข้อมูลให้ครบถ้วน';\r\n        return;\r\n      }\r\n      \r\n      if (this.password !== this.confirmPassword) {\r\n        this.error = 'รหัสผ่านไม่ตรงกัน';\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const response = await fetch('/api/auth/reset-password', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email: this.email,\r\n            newPassword: this.password\r\n          })\r\n        });\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (response.ok) {\r\n          this.success = data.message || 'รหัสผ่านถูกรีเซ็ตเรียบร้อยแล้ว';\r\n          // Clear form\r\n          this.email = '';\r\n          this.password = '';\r\n          this.confirmPassword = '';\r\n        } else {\r\n          this.error = data.message || 'เกิดข้อผิดพลาดในการรีเซ็ตรหัสผ่าน';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        this.error = 'เกิดข้อผิดพลาดในการเชื่อมต่อกับเซิร์ฟเวอร์';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ndiv {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-bottom: 10px;\r\n}\r\nbutton {\r\n  padding: 10px 15px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":";;EAAAA,GAAA;EAgBwBC,KAAmB,EAAnB;IAAA;EAAA;;;EAhBxBD,GAAA;EAiB0BC,KAAqB,EAArB;IAAA;EAAA;;;;uBAhBxBC,mBAAA,CAsBM,c,0BArBJC,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBA,mBAAA,CAgBO;IAhBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAClCJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAiC;IAA1BO,GAAG,EAAC;EAAO,GAAC,QAAM,sB,gBACzBP,mBAAA,CAAwD;IAAjDQ,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IANtC,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAMgDC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAPF,KAAA,CAAAC,KAAK,E,KAE/CZ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA2C;IAApCO,GAAG,EAAC;EAAU,GAAC,eAAa,sB,gBACnCP,mBAAA,CAAiE;IAA1DQ,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,UAAU;IAV5C,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAUsDC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAEG,QAAQ,EAAR;iDAAVF,KAAA,CAAAG,QAAQ,E,KAExDd,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAwD;IAAjDO,GAAG,EAAC;EAAiB,GAAC,qBAAmB,sB,gBAChDP,mBAAA,CAA+E;IAAxEQ,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,iBAAiB;IAdnD,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAc6DC,KAAA,CAAAI,eAAe,GAAAL,MAAA;IAAEG,QAAQ,EAAR;iDAAjBF,KAAA,CAAAI,eAAe,E,KAE3DJ,KAAA,CAAAK,KAAK,I,cAAhBjB,mBAAA,CAAuD,OAAvDkB,UAAuD,EAAAC,gBAAA,CAAdP,KAAA,CAAAK,KAAK,oBAhBpDG,mBAAA,gBAiBiBR,KAAA,CAAAS,OAAO,I,cAAlBrB,mBAAA,CAA6D,OAA7DsB,UAA6D,EAAAH,gBAAA,CAAhBP,KAAA,CAAAS,OAAO,oBAjB1DD,mBAAA,gB,0BAkBMnB,mBAAA,CAA6C;IAArCQ,IAAI,EAAC;EAAQ,GAAC,gBAAc,qB,4BAEtCR,mBAAA,CAEM,cADJsB,YAAA,CAA+DC,sBAAA;IAAlDC,EAAE,EAAC;EAAQ;IArB9BC,OAAA,EAAAC,QAAA,CAqB+B,MAAwBxB,MAAA,QAAAA,MAAA,OArBvDyB,gBAAA,CAqB+B,0BAAwB,E;IArBvDC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}