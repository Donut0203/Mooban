{"ast":null,"code":"export default {\n  name: 'SimpleResetPassword',\n  data() {\n    return {\n      email: '',\n      newPassword: '',\n      confirmPassword: '',\n      showPassword: false,\n      showConfirmPassword: false,\n      error: null,\n      isResetting: false,\n      resetSuccess: false,\n      successMessage: ''\n    };\n  },\n  computed: {\n    isFormValid() {\n      return this.email && this.newPassword && this.confirmPassword && this.newPassword === this.confirmPassword && this.isPasswordValid;\n    },\n    isPasswordValid() {\n      // Check password length (max 10 characters)\n      if (this.newPassword.length > 10) {\n        return false;\n      }\n\n      // Check password complexity\n      const hasUpperCase = /[A-Z]/.test(this.newPassword);\n      const hasLowerCase = /[a-z]/.test(this.newPassword);\n      const hasNumbers = /[0-9]/.test(this.newPassword);\n      return hasUpperCase && hasLowerCase && hasNumbers;\n    }\n  },\n  methods: {\n    async resetPassword() {\n      if (!this.isFormValid) {\n        if (this.newPassword !== this.confirmPassword) {\n          this.error = 'รหัสผ่านไม่ตรงกัน';\n        } else if (!this.isPasswordValid) {\n          this.error = 'รหัสผ่านต้องมีความยาวไม่เกิน 10 ตัวอักษร และประกอบด้วยตัวอักษรพิมพ์ใหญ่ ตัวอักษรพิมพ์เล็ก และตัวเลข';\n        } else {\n          this.error = 'กรุณากรอกข้อมูลให้ครบถ้วน';\n        }\n        return;\n      }\n      this.isResetting = true;\n      this.error = null;\n      try {\n        const response = await fetch('/api/auth/reset-password', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.email,\n            newPassword: this.newPassword\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          this.resetSuccess = true;\n          this.successMessage = data.message || 'รหัสผ่านของคุณได้ถูกรีเซ็ตเรียบร้อยแล้ว';\n        } else {\n          this.error = data.message || 'เกิดข้อผิดพลาดในการรีเซ็ตรหัสผ่าน';\n        }\n      } catch (error) {\n        console.error('Error resetting password:', error);\n        this.error = 'เกิดข้อผิดพลาดในการเชื่อมต่อกับเซิร์ฟเวอร์';\n      } finally {\n        this.isResetting = false;\n      }\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    }\n  }\n};","map":{"version":3,"names":["name","data","email","newPassword","confirmPassword","showPassword","showConfirmPassword","error","isResetting","resetSuccess","successMessage","computed","isFormValid","isPasswordValid","length","hasUpperCase","test","hasLowerCase","hasNumbers","methods","resetPassword","response","fetch","method","headers","body","JSON","stringify","json","ok","message","console","goToLogin","$router","push"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\views\\SimpleResetPassword.vue"],"sourcesContent":["<template>\r\n  <div class=\"reset-password-container\">\r\n    <div class=\"reset-password-form\">\r\n      <h2>รีเซ็ตรหัสผ่าน</h2>\r\n      \r\n      <div v-if=\"!resetSuccess\">\r\n        <p>กรอกอีเมลและรหัสผ่านใหม่ของคุณ</p>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"email\">อีเมล</label>\r\n          <input \r\n            type=\"email\" \r\n            id=\"email\"\r\n            v-model=\"email\" \r\n            placeholder=\"กรอกอีเมลของคุณ\"\r\n            required\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"newPassword\">รหัสผ่านใหม่</label>\r\n          <div class=\"password-input-container\">\r\n            <input \r\n              :type=\"showPassword ? 'text' : 'password'\" \r\n              id=\"newPassword\"\r\n              v-model=\"newPassword\" \r\n              placeholder=\"กรอกรหัสผ่านใหม่\"\r\n              required\r\n            >\r\n            <button \r\n              type=\"button\"\r\n              class=\"toggle-password-btn\"\r\n              @click=\"showPassword = !showPassword\"\r\n            >\r\n              <i :class=\"showPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">ยืนยันรหัสผ่านใหม่</label>\r\n          <div class=\"password-input-container\">\r\n            <input \r\n              :type=\"showConfirmPassword ? 'text' : 'password'\" \r\n              id=\"confirmPassword\"\r\n              v-model=\"confirmPassword\" \r\n              placeholder=\"กรอกรหัสผ่านใหม่อีกครั้ง\"\r\n              required\r\n            >\r\n            <button \r\n              type=\"button\"\r\n              class=\"toggle-password-btn\"\r\n              @click=\"showConfirmPassword = !showConfirmPassword\"\r\n            >\r\n              <i :class=\"showConfirmPassword ? 'fas fa-eye-slash' : 'fas fa-eye'\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        <p class=\"password-requirements\">\r\n          รหัสผ่านต้องมีความยาวไม่เกิน 10 ตัวอักษร และประกอบด้วยตัวอักษรพิมพ์ใหญ่ ตัวอักษรพิมพ์เล็ก และตัวเลข\r\n        </p>\r\n        \r\n        <div class=\"error-message\" v-if=\"error\">{{ error }}</div>\r\n        \r\n        <button \r\n          @click=\"resetPassword\" \r\n          :disabled=\"isResetting || !isFormValid\"\r\n          class=\"reset-btn\"\r\n        >\r\n          {{ isResetting ? 'กำลังรีเซ็ตรหัสผ่าน...' : 'รีเซ็ตรหัสผ่าน' }}\r\n        </button>\r\n      </div>\r\n      \r\n      <div v-else class=\"success-message\">\r\n        <p>{{ successMessage }}</p>\r\n        <button @click=\"goToLogin\" class=\"login-btn\">ไปยังหน้าเข้าสู่ระบบ</button>\r\n      </div>\r\n      \r\n      <div class=\"back-to-login\">\r\n        <router-link to=\"/login\">กลับไปยังหน้าเข้าสู่ระบบ</router-link>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'SimpleResetPassword',\r\n  data() {\r\n    return {\r\n      email: '',\r\n      newPassword: '',\r\n      confirmPassword: '',\r\n      showPassword: false,\r\n      showConfirmPassword: false,\r\n      error: null,\r\n      isResetting: false,\r\n      resetSuccess: false,\r\n      successMessage: ''\r\n    }\r\n  },\r\n  computed: {\r\n    isFormValid() {\r\n      return (\r\n        this.email && \r\n        this.newPassword && \r\n        this.confirmPassword && \r\n        this.newPassword === this.confirmPassword &&\r\n        this.isPasswordValid\r\n      );\r\n    },\r\n    isPasswordValid() {\r\n      // Check password length (max 10 characters)\r\n      if (this.newPassword.length > 10) {\r\n        return false;\r\n      }\r\n      \r\n      // Check password complexity\r\n      const hasUpperCase = /[A-Z]/.test(this.newPassword);\r\n      const hasLowerCase = /[a-z]/.test(this.newPassword);\r\n      const hasNumbers = /[0-9]/.test(this.newPassword);\r\n      \r\n      return hasUpperCase && hasLowerCase && hasNumbers;\r\n    }\r\n  },\r\n  methods: {\r\n    async resetPassword() {\r\n      if (!this.isFormValid) {\r\n        if (this.newPassword !== this.confirmPassword) {\r\n          this.error = 'รหัสผ่านไม่ตรงกัน';\r\n        } else if (!this.isPasswordValid) {\r\n          this.error = 'รหัสผ่านต้องมีความยาวไม่เกิน 10 ตัวอักษร และประกอบด้วยตัวอักษรพิมพ์ใหญ่ ตัวอักษรพิมพ์เล็ก และตัวเลข';\r\n        } else {\r\n          this.error = 'กรุณากรอกข้อมูลให้ครบถ้วน';\r\n        }\r\n        return;\r\n      }\r\n      \r\n      this.isResetting = true;\r\n      this.error = null;\r\n      \r\n      try {\r\n        const response = await fetch('/api/auth/reset-password', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email: this.email,\r\n            newPassword: this.newPassword\r\n          })\r\n        });\r\n        \r\n        const data = await response.json();\r\n        \r\n        if (response.ok) {\r\n          this.resetSuccess = true;\r\n          this.successMessage = data.message || 'รหัสผ่านของคุณได้ถูกรีเซ็ตเรียบร้อยแล้ว';\r\n        } else {\r\n          this.error = data.message || 'เกิดข้อผิดพลาดในการรีเซ็ตรหัสผ่าน';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error resetting password:', error);\r\n        this.error = 'เกิดข้อผิดพลาดในการเชื่อมต่อกับเซิร์ฟเวอร์';\r\n      } finally {\r\n        this.isResetting = false;\r\n      }\r\n    },\r\n    goToLogin() {\r\n      this.$router.push('/login');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.reset-password-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background-color: #f5f5f5;\r\n  padding: 20px;\r\n}\r\n\r\n.reset-password-form {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  padding: 30px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n}\r\n\r\n.password-input-container {\r\n  position: relative;\r\n}\r\n\r\n.toggle-password-btn {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #777;\r\n}\r\n\r\n.password-requirements {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.error-message {\r\n  color: #d32f2f;\r\n  margin-bottom: 15px;\r\n  font-size: 14px;\r\n}\r\n\r\n.success-message {\r\n  color: #388e3c;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.reset-btn, .login-btn {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.reset-btn:hover, .login-btn:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n.reset-btn:disabled {\r\n  background-color: #9e9e9e;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.back-to-login {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.back-to-login a {\r\n  color: #2196F3;\r\n  text-decoration: none;\r\n}\r\n\r\n.back-to-login a:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":"AAuFA,eAAe;EACbA,IAAI,EAAE,qBAAqB;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE,KAAK;MACnBC,mBAAmB,EAAE,KAAK;MAC1BC,KAAK,EAAE,IAAI;MACXC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAE,KAAK;MACnBC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OACE,IAAI,CAACV,KAAI,IACT,IAAI,CAACC,WAAU,IACf,IAAI,CAACC,eAAc,IACnB,IAAI,CAACD,WAAU,KAAM,IAAI,CAACC,eAAc,IACxC,IAAI,CAACS,eAAc;IAEvB,CAAC;IACDA,eAAeA,CAAA,EAAG;MAChB;MACA,IAAI,IAAI,CAACV,WAAW,CAACW,MAAK,GAAI,EAAE,EAAE;QAChC,OAAO,KAAK;MACd;;MAEA;MACA,MAAMC,YAAW,GAAI,OAAO,CAACC,IAAI,CAAC,IAAI,CAACb,WAAW,CAAC;MACnD,MAAMc,YAAW,GAAI,OAAO,CAACD,IAAI,CAAC,IAAI,CAACb,WAAW,CAAC;MACnD,MAAMe,UAAS,GAAI,OAAO,CAACF,IAAI,CAAC,IAAI,CAACb,WAAW,CAAC;MAEjD,OAAOY,YAAW,IAAKE,YAAW,IAAKC,UAAU;IACnD;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,aAAaA,CAAA,EAAG;MACpB,IAAI,CAAC,IAAI,CAACR,WAAW,EAAE;QACrB,IAAI,IAAI,CAACT,WAAU,KAAM,IAAI,CAACC,eAAe,EAAE;UAC7C,IAAI,CAACG,KAAI,GAAI,mBAAmB;QAClC,OAAO,IAAI,CAAC,IAAI,CAACM,eAAe,EAAE;UAChC,IAAI,CAACN,KAAI,GAAI,qGAAqG;QACpH,OAAO;UACL,IAAI,CAACA,KAAI,GAAI,2BAA2B;QAC1C;QACA;MACF;MAEA,IAAI,CAACC,WAAU,GAAI,IAAI;MACvB,IAAI,CAACD,KAAI,GAAI,IAAI;MAEjB,IAAI;QACF,MAAMc,QAAO,GAAI,MAAMC,KAAK,CAAC,0BAA0B,EAAE;UACvDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBzB,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBC,WAAW,EAAE,IAAI,CAACA;UACpB,CAAC;QACH,CAAC,CAAC;QAEF,MAAMF,IAAG,GAAI,MAAMoB,QAAQ,CAACO,IAAI,CAAC,CAAC;QAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACf,IAAI,CAACpB,YAAW,GAAI,IAAI;UACxB,IAAI,CAACC,cAAa,GAAIT,IAAI,CAAC6B,OAAM,IAAK,yCAAyC;QACjF,OAAO;UACL,IAAI,CAACvB,KAAI,GAAIN,IAAI,CAAC6B,OAAM,IAAK,mCAAmC;QAClE;MACF,EAAE,OAAOvB,KAAK,EAAE;QACdwB,OAAO,CAACxB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACA,KAAI,GAAI,4CAA4C;MAC3D,UAAU;QACR,IAAI,CAACC,WAAU,GAAI,KAAK;MAC1B;IACF,CAAC;IACDwB,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}