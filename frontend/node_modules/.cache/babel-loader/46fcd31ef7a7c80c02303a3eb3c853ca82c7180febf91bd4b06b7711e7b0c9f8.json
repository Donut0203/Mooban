{"ast":null,"code":"import api from '@/services/api';\nexport default {\n  name: 'App',\n  data() {\n    // Get stored values\n    const storedUserId = localStorage.getItem('userId') || '';\n    const storedEmail = localStorage.getItem('email') || '';\n    let storedStatus = localStorage.getItem('userStatus') || '';\n    return {\n      pendingUsers: [],\n      showNotifications: false,\n      loading: false,\n      userId: storedUserId,\n      userEmail: storedEmail,\n      userStatus: storedStatus,\n      userFullName: 'Natcha Boonmee',\n      userPhone: '0835364833',\n      userAddress: 'Rmutt',\n      profileImageUrl: localStorage.getItem('profileImage') || ''\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!localStorage.getItem('token');\n    },\n    isHeadmanOrAssistant() {\n      const status = localStorage.getItem('userStatus');\n      return status === 'headman' || status === 'assistant';\n    },\n    isLoginPage() {\n      return this.$route && this.$route.path === '/login';\n    },\n    isRegisterPage() {\n      return this.$route && this.$route.path === '/register';\n    }\n  },\n  methods: {\n    formatRole(role) {\n      if (!role) return 'User';\n      return role.charAt(0).toUpperCase() + role.slice(1);\n    },\n    isValidStatus(status) {\n      // Check if status is one of the valid statuses\n      return ['headman', 'assistant', 'villager'].includes(status);\n    },\n    toggleNotifications() {\n      this.showNotifications = !this.showNotifications;\n    },\n    async fetchPendingUsers() {\n      const isLoggedIn = !!localStorage.getItem('token');\n      const userStatus = localStorage.getItem('userStatus');\n      const isHeadmanOrAssistant = userStatus === 'headman' || userStatus === 'assistant';\n      if (!isLoggedIn || !isHeadmanOrAssistant) return;\n      try {\n        this.loading = true;\n        const response = await api.getPendingUsers();\n        this.pendingUsers = response.data.pendingUsers || [];\n      } catch (error) {\n        console.error('Error fetching pending users:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async approveUser(userId) {\n      // Find the user to check their status\n      const userToApprove = this.pendingUsers.find(user => user.user_id === userId);\n      if (!userToApprove) {\n        alert('ไม่พบข้อมูลผู้ใช้');\n        return;\n      }\n\n      // Check if user has a valid status\n      if (!this.isValidStatus(userToApprove.status)) {\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ เนื่องจากสถานะไม่ถูกต้อง กรุณาแก้ไขสถานะให้เป็น headman, assistant หรือ villager ก่อน');\n        return;\n      }\n      try {\n        await api.approveUser(userId);\n        // Remove the approved user from the list\n        this.pendingUsers = this.pendingUsers.filter(user => user.user_id !== userId);\n        // Emit event to refresh data if needed\n        this.$emit('user-approved');\n        alert('อนุมัติผู้ใช้เรียบร้อยแล้ว');\n      } catch (error) {\n        console.error('Error approving user:', error);\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ กรุณาลองอีกครั้ง');\n      }\n    },\n    logout() {\n      // Clear all localStorage items\n      localStorage.clear();\n\n      // Reset app state\n      this.showNotifications = false;\n      this.pendingUsers = [];\n      this.userId = '';\n      this.userEmail = '';\n      this.userStatus = '';\n      this.userFullName = '';\n      this.userPhone = '';\n      this.userAddress = '';\n\n      // Force navigation to login page\n      window.location.href = '/login';\n    },\n    async fetchUserProfile() {\n      try {\n        const response = await api.getUserProfile();\n        const user = response.data.user;\n        if (user) {\n          this.userEmail = user.user_email || this.userEmail;\n          this.userStatus = user.status || this.userStatus;\n          this.userFullName = user.first_name && user.last_name ? `${user.first_name} ${user.last_name}` : this.userFullName;\n          this.userPhone = user.phone || this.userPhone;\n          this.userAddress = user.address || this.userAddress;\n        }\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      }\n    }\n  },\n  watch: {\n    isLoggedIn(newVal) {\n      if (newVal) {\n        // Update user status from localStorage\n        this.userStatus = localStorage.getItem('userStatus') || '';\n        this.fetchPendingUsers();\n      }\n    },\n    // Watch for route changes to update user status\n    '$route'() {\n      if (this.isLoggedIn) {\n        this.userStatus = localStorage.getItem('userStatus') || '';\n      }\n    }\n  },\n  mounted() {\n    // Force check login status\n    const token = localStorage.getItem('token');\n\n    // Update user status from localStorage\n    this.userStatus = localStorage.getItem('userStatus') || '';\n    if (token) {\n      // Fetch user data if logged in\n      this.fetchPendingUsers();\n      this.fetchUserProfile();\n\n      // Force update user status\n      const userStatus = localStorage.getItem('userStatus');\n      if (userStatus) {\n        this.userStatus = userStatus;\n        console.log('Updated user status in mounted:', this.userStatus);\n      }\n    } else if (window.location.pathname !== '/login' && window.location.pathname !== '/register') {\n      // Redirect to login if not logged in and not already on login/register page\n      window.location.href = '/login';\n    }\n  }\n};","map":{"version":3,"names":["api","name","data","storedUserId","localStorage","getItem","storedEmail","storedStatus","pendingUsers","showNotifications","loading","userId","userEmail","userStatus","userFullName","userPhone","userAddress","profileImageUrl","computed","isLoggedIn","isHeadmanOrAssistant","status","isLoginPage","$route","path","isRegisterPage","methods","formatRole","role","charAt","toUpperCase","slice","isValidStatus","includes","toggleNotifications","fetchPendingUsers","response","getPendingUsers","error","console","approveUser","userToApprove","find","user","user_id","alert","filter","$emit","logout","clear","window","location","href","fetchUserProfile","getUserProfile","user_email","first_name","last_name","phone","address","watch","newVal","mounted","token","log","pathname"],"sources":["C:\\Users\\HP\\Documents\\mooban4\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div class=\"app-container\" v-if=\"isLoggedIn && !isLoginPage && !isRegisterPage\">\r\n      <!-- Vertical sidebar navigation -->\r\n      <div class=\"sidebar-nav\">\r\n        <div class=\"sidebar-profile\">\r\n          <div class=\"profile-image\">\r\n            <img :src=\"profileImageUrl || 'https://via.placeholder.com/256x256?text=Profile'\" alt=\"Profile Image\">\r\n          </div>\r\n          <div class=\"profile-info\">\r\n            <h3>{{ userFullName || userEmail || 'Natcha Boonmee' }}</h3>\r\n            <span class=\"user-role\" :class=\"'role-' + userStatus\">{{ formatRole(userStatus) }}</span>\r\n            <div class=\"user-details\">\r\n              <div class=\"info-item\" v-if=\"userId\">\r\n                <span class=\"info-label\">User ID:</span>\r\n                <span class=\"info-value\">{{ userId }}</span>\r\n              </div>\r\n              <div class=\"info-item\" v-if=\"userEmail\">\r\n                <span class=\"info-label\">Email:</span>\r\n                <span class=\"info-value\">{{ userEmail }}</span>\r\n              </div>\r\n              <div class=\"info-item\" v-if=\"userPhone\">\r\n                <span class=\"info-label\">Phone:</span>\r\n                <span class=\"info-value\">{{ userPhone }}</span>\r\n              </div>\r\n              <div class=\"info-item\" v-if=\"userAddress\">\r\n                <span class=\"info-label\">Address:</span>\r\n                <span class=\"info-value\">{{ userAddress }}</span>\r\n              </div>\r\n            </div>\r\n            <router-link to=\"/profile\" class=\"edit-profile-btn\">แก้ไขโปรไฟล์</router-link>\r\n          </div>\r\n        </div>\r\n        <div class=\"sidebar-divider\"></div>\r\n        <div class=\"sidebar-menu\">\r\n          <router-link to=\"/\" class=\"sidebar-menu-item\">Home</router-link>\r\n          <router-link v-if=\"userStatus === 'headman' || userStatus === 'assistant'\" to=\"/pending-users\" class=\"sidebar-menu-item\">Pending Users all</router-link>\r\n          <router-link v-if=\"userStatus === 'headman' || userStatus === 'assistant'\" to=\"/all-users\" class=\"sidebar-menu-item\">User Management</router-link>\r\n          <router-link to=\"/dashboard\" class=\"sidebar-menu-item\">แดชบอร์ด</router-link>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Main content area with top navigation -->\r\n      <div class=\"main-content-area\">\r\n        <nav class=\"top-nav\">\r\n          <div class=\"nav-container\">\r\n            <div class=\"nav-left\">\r\n              <h2>Village Management System</h2>\r\n            </div>\r\n            <div class=\"nav-right\">\r\n              <div class=\"notification-container\" v-if=\"userStatus === 'headman' || userStatus === 'assistant'\">\r\n                <button class=\"notification-btn\" @click=\"toggleNotifications\">\r\n                  Pending Approvals {{ pendingUsers.length > 0 ? '(' + pendingUsers.length + ')' : '' }}\r\n                </button>\r\n                <div class=\"notification-dropdown\" v-if=\"showNotifications\">\r\n                  <h3>Pending Users</h3>\r\n                  <div v-if=\"pendingUsers.length > 0\">\r\n                    <div v-for=\"user in pendingUsers\" :key=\"user.user_id\" class=\"pending-user\">\r\n                      <div>\r\n                        <strong>{{ user.first_name }} {{ user.last_name }}</strong>\r\n                        <div>{{ user.user_email }}</div>\r\n                        <div>Status: {{ user.status }}</div>\r\n                      </div>\r\n                      <button class=\"approve-btn\" @click=\"approveUser(user.user_id)\" :disabled=\"!isValidStatus(user.status)\">Approve</button>\r\n                    </div>\r\n                  </div>\r\n                  <div v-else class=\"no-pending\">\r\n                    No pending users\r\n                  </div>\r\n                  <div class=\"dropdown-footer\">\r\n                    <router-link to=\"/pending-users\" class=\"view-all-btn\" @click=\"showNotifications = false\">View All Pending Users</router-link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button class=\"logout-btn\" @click=\"logout\">Logout</button>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <div class=\"content-wrapper\">\r\n          <router-view @user-approved=\"fetchPendingUsers\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <router-view v-else-if=\"isLoginPage || isRegisterPage\" @user-approved=\"fetchPendingUsers\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/services/api';\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    // Get stored values\r\n    const storedUserId = localStorage.getItem('userId') || '';\r\n    const storedEmail = localStorage.getItem('email') || '';\r\n    let storedStatus = localStorage.getItem('userStatus') || '';\r\n\r\n    return {\r\n      pendingUsers: [],\r\n      showNotifications: false,\r\n      loading: false,\r\n      userId: storedUserId,\r\n      userEmail: storedEmail,\r\n      userStatus: storedStatus,\r\n      userFullName: 'Natcha Boonmee',\r\n      userPhone: '0835364833',\r\n      userAddress: 'Rmutt',\r\n      profileImageUrl: localStorage.getItem('profileImage') || ''\r\n    };\r\n  },\r\n  computed: {\r\n    isLoggedIn() {\r\n      return !!localStorage.getItem('token');\r\n    },\r\n    isHeadmanOrAssistant() {\r\n      const status = localStorage.getItem('userStatus');\r\n      return status === 'headman' || status === 'assistant';\r\n    },\r\n    isLoginPage() {\r\n      return this.$route && this.$route.path === '/login';\r\n    },\r\n    isRegisterPage() {\r\n      return this.$route && this.$route.path === '/register';\r\n    }\r\n  },\r\n  methods: {\r\n    formatRole(role) {\r\n      if (!role) return 'User';\r\n      return role.charAt(0).toUpperCase() + role.slice(1);\r\n    },\r\n    isValidStatus(status) {\r\n      // Check if status is one of the valid statuses\r\n      return ['headman', 'assistant', 'villager'].includes(status);\r\n    },\r\n    toggleNotifications() {\r\n      this.showNotifications = !this.showNotifications;\r\n    },\r\n    async fetchPendingUsers() {\r\n      const isLoggedIn = !!localStorage.getItem('token');\r\n      const userStatus = localStorage.getItem('userStatus');\r\n      const isHeadmanOrAssistant = userStatus === 'headman' || userStatus === 'assistant';\r\n\r\n      if (!isLoggedIn || !isHeadmanOrAssistant) return;\r\n\r\n      try {\r\n        this.loading = true;\r\n        const response = await api.getPendingUsers();\r\n        this.pendingUsers = response.data.pendingUsers || [];\r\n      } catch (error) {\r\n        console.error('Error fetching pending users:', error);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async approveUser(userId) {\r\n      // Find the user to check their status\r\n      const userToApprove = this.pendingUsers.find(user => user.user_id === userId);\r\n\r\n      if (!userToApprove) {\r\n        alert('ไม่พบข้อมูลผู้ใช้');\r\n        return;\r\n      }\r\n\r\n      // Check if user has a valid status\r\n      if (!this.isValidStatus(userToApprove.status)) {\r\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ เนื่องจากสถานะไม่ถูกต้อง กรุณาแก้ไขสถานะให้เป็น headman, assistant หรือ villager ก่อน');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        await api.approveUser(userId);\r\n        // Remove the approved user from the list\r\n        this.pendingUsers = this.pendingUsers.filter(user => user.user_id !== userId);\r\n        // Emit event to refresh data if needed\r\n        this.$emit('user-approved');\r\n        alert('อนุมัติผู้ใช้เรียบร้อยแล้ว');\r\n      } catch (error) {\r\n        console.error('Error approving user:', error);\r\n        alert('ไม่สามารถอนุมัติผู้ใช้ได้ กรุณาลองอีกครั้ง');\r\n      }\r\n    },\r\n    logout() {\r\n      // Clear all localStorage items\r\n      localStorage.clear();\r\n\r\n      // Reset app state\r\n      this.showNotifications = false;\r\n      this.pendingUsers = [];\r\n      this.userId = '';\r\n      this.userEmail = '';\r\n      this.userStatus = '';\r\n      this.userFullName = '';\r\n      this.userPhone = '';\r\n      this.userAddress = '';\r\n\r\n      // Force navigation to login page\r\n      window.location.href = '/login';\r\n    },\r\n    async fetchUserProfile() {\r\n      try {\r\n        const response = await api.getUserProfile();\r\n        const user = response.data.user;\r\n\r\n        if (user) {\r\n          this.userEmail = user.user_email || this.userEmail;\r\n          this.userStatus = user.status || this.userStatus;\r\n          this.userFullName = user.first_name && user.last_name ?\r\n            `${user.first_name} ${user.last_name}` : this.userFullName;\r\n          this.userPhone = user.phone || this.userPhone;\r\n          this.userAddress = user.address || this.userAddress;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching user profile:', error);\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    isLoggedIn(newVal) {\r\n      if (newVal) {\r\n        // Update user status from localStorage\r\n        this.userStatus = localStorage.getItem('userStatus') || '';\r\n        this.fetchPendingUsers();\r\n      }\r\n    },\r\n    // Watch for route changes to update user status\r\n    '$route'() {\r\n      if (this.isLoggedIn) {\r\n        this.userStatus = localStorage.getItem('userStatus') || '';\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // Force check login status\r\n    const token = localStorage.getItem('token');\r\n\r\n    // Update user status from localStorage\r\n    this.userStatus = localStorage.getItem('userStatus') || '';\r\n\r\n    if (token) {\r\n      // Fetch user data if logged in\r\n      this.fetchPendingUsers();\r\n      this.fetchUserProfile();\r\n\r\n      // Force update user status\r\n      const userStatus = localStorage.getItem('userStatus');\r\n      if (userStatus) {\r\n        this.userStatus = userStatus;\r\n        console.log('Updated user status in mounted:', this.userStatus);\r\n      }\r\n    } else if (window.location.pathname !== '/login' && window.location.pathname !== '/register') {\r\n      // Redirect to login if not logged in and not already on login/register page\r\n      window.location.href = '/login';\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\nhtml, body {\r\n  margin: 0;\r\n  padding: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  color: #2c3e50;\r\n  height: 100vh;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  position: relative;\r\n}\r\n\r\n.app-container {\r\n  display: flex;\r\n  height: 100vh;\r\n}\r\n\r\n/* Sidebar Navigation */\r\n.sidebar-nav {\r\n  width: 250px;\r\n  background-color: #343a40;\r\n  color: white;\r\n  height: 100vh;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  overflow-y: auto;\r\n  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);\r\n  z-index: 1000;\r\n}\r\n\r\n.sidebar-profile {\r\n  padding: 20px 15px;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n.profile-image {\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 0 auto 15px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  border: 3px solid #fff;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.profile-image img {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.profile-info h3 {\r\n  margin: 0 0 5px;\r\n  font-size: 1.2rem;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n\r\n.user-role {\r\n  display: inline-block;\r\n  padding: 3px 8px;\r\n  border-radius: 12px;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.role-headman {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.role-assistant {\r\n  background-color: #28a745;\r\n  color: white;\r\n}\r\n\r\n.role-villager, .role-pending, .role-undefined {\r\n  background-color: #ffc107;\r\n  color: #212529;\r\n}\r\n\r\n.user-details {\r\n  margin: 15px 0;\r\n  text-align: left;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.info-item {\r\n  margin-bottom: 8px;\r\n  font-size: 0.9rem;\r\n  color: rgba(255, 255, 255, 0.9);\r\n}\r\n\r\n.info-label {\r\n  font-weight: bold;\r\n  margin-right: 5px;\r\n  color: rgba(255, 255, 255, 0.7);\r\n}\r\n\r\n.edit-profile-btn {\r\n  display: inline-block;\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n  margin-top: 10px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.edit-profile-btn:hover {\r\n  background-color: #0069d9;\r\n}\r\n\r\n.sidebar-divider {\r\n  height: 1px;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  margin: 0;\r\n}\r\n\r\n.sidebar-menu {\r\n  padding: 15px 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.sidebar-menu-item {\r\n  color: rgba(255, 255, 255, 0.8);\r\n  text-decoration: none;\r\n  padding: 12px 20px;\r\n  transition: all 0.3s;\r\n  border-left: 3px solid transparent;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16px;\r\n}\r\n\r\n.sidebar-menu-item:hover {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  border-left-color: #007bff;\r\n}\r\n\r\n.sidebar-menu-item.router-link-active {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  border-left-color: #007bff;\r\n  font-weight: bold;\r\n}\r\n\r\n/* Main Content Area */\r\n.main-content-area {\r\n  flex: 1;\r\n  margin-left: 250px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.top-nav {\r\n  background-color: white;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  padding: 0;\r\n  height: 60px;\r\n}\r\n\r\n.nav-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  height: 100%;\r\n}\r\n\r\n.nav-left, .nav-right {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.nav-left h2 {\r\n  margin: 0;\r\n  font-size: 1.2rem;\r\n  color: #333;\r\n}\r\n\r\n.nav-right {\r\n  gap: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.content-wrapper {\r\n  padding: 20px;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\nbutton {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n\r\n\r\n.logout-btn {\r\n  background-color: #f44336;\r\n}\r\n\r\n.logout-btn:hover {\r\n  background-color: #d32f2f;\r\n}\r\n\r\n.notification-btn {\r\n  background-color: #ff9800;\r\n  position: relative;\r\n}\r\n\r\n.notification-btn:hover {\r\n  background-color: #e68a00;\r\n}\r\n\r\n.notification-container {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.notification-dropdown {\r\n  position: absolute;\r\n  right: 0;\r\n  top: 100%;\r\n  width: 300px;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 15px;\r\n  z-index: 1000;\r\n  text-align: left;\r\n  margin-top: 5px;\r\n}\r\n\r\n.notification-dropdown h3 {\r\n  margin-top: 0;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 10px;\r\n  color: #333;\r\n}\r\n\r\n.pending-user {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #eee;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.pending-user:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.approve-btn {\r\n  padding: 6px 12px;\r\n  font-size: 14px;\r\n}\r\n\r\n.no-pending {\r\n  padding: 10px;\r\n  color: #666;\r\n  font-style: italic;\r\n  text-align: center;\r\n}\r\n\r\n.dropdown-footer {\r\n  margin-top: 15px;\r\n  padding-top: 10px;\r\n  border-top: 1px solid #eee;\r\n  text-align: center;\r\n}\r\n\r\n.view-all-btn {\r\n  display: inline-block;\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 8px 15px;\r\n  border-radius: 4px;\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.view-all-btn:hover {\r\n  background-color: #0056b3;\r\n  text-decoration: none;\r\n  color: white;\r\n}\r\n\r\n.form-container {\r\n  background-color: #f2f2f2;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n  text-align: left;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  font-weight: bold;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n\r\n.success-message {\r\n  color: green;\r\n  margin-top: 10px;\r\n}\r\n\r\n.link {\r\n  color: #4CAF50;\r\n  text-decoration: none;\r\n  margin-top: 15px;\r\n  display: inline-block;\r\n}\r\n\r\n.link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}